import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as s,a,e as i,w as r,r as c,o as l}from"./app-CIBZQWs4.js";const o={};function d(h,e){const n=c("RouteLink");return l(),p("div",null,[e[1]||(e[1]=s('<h1 id="class-file" tabindex="-1"><a class="header-anchor" href="#class-file"><span>Class: File</span></a></h1><p>Class representing a File.</p><h2 id="author" tabindex="-1"><a class="header-anchor" href="#author"><span>Author</span></a></h2><p>Mr. Stone <a href="mailto:evensstone@gmail.com" target="_blank" rel="noopener noreferrer">evensstone@gmail.com</a></p><h2 id="extended-by" tabindex="-1"><a class="header-anchor" href="#extended-by"><span>Extended by</span></a></h2>',5)),a("ul",null,[a("li",null,[i(n,{to:"/api/filesystem/file/UploadedFile/classes/UploadedFile.html"},{default:r(()=>e[0]||(e[0]=[a("code",null,"UploadedFile",-1)])),_:1,__:[0]})])]),e[2]||(e[2]=s(`<h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> checkPath<span class="token punctuation">)</span><span class="token operator">:</span> File<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create a File.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="path" tabindex="-1"><a class="header-anchor" href="#path"><span>path</span></a></h5><p><code>string</code></p><p>The file path.</p><h5 id="checkpath" tabindex="-1"><a class="header-anchor" href="#checkpath"><span>checkPath</span></a></h5><p><code>boolean</code> = <code>true</code></p><p>Whether to check if the file path is valid.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>File</code></p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="edit" tabindex="-1"><a class="header-anchor" href="#edit"><span>edit()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">edit</span><span class="token punctuation">(</span>callback<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Edit file content.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="callback" tabindex="-1"><a class="header-anchor" href="#callback"><span>callback</span></a></h5><p>(<code>content</code>) =&gt; <code>string</code></p><p>The callback function to modify the file content.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>this</code></p><p>The current File instance.</p><hr><h3 id="exists" tabindex="-1"><a class="header-anchor" href="#exists"><span>exists()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the file exists.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file exists, otherwise false.</p><hr><h3 id="getabsolutepath" tabindex="-1"><a class="header-anchor" href="#getabsolutepath"><span>getAbsolutePath()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getAbsolutePath</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the absolute file path.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="root" tabindex="-1"><a class="header-anchor" href="#root"><span>root</span></a></h5><p><code>string</code> = <code>&#39;&#39;</code></p><p>The root directory to resolve from.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>string</code></p><p>The absolute file path.</p><hr><h3 id="getatime" tabindex="-1"><a class="header-anchor" href="#getatime"><span>getATime()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getATime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> bigint<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the last access time of the file.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>undefined</code> | <code>number</code> | <code>bigint</code></p><p>The last access time in milliseconds.</p><hr><h3 id="getbasename" tabindex="-1"><a class="header-anchor" href="#getbasename"><span>getBasename()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getBasename</span><span class="token punctuation">(</span>exclude<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the basename of the file.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="exclude" tabindex="-1"><a class="header-anchor" href="#exclude"><span>exclude</span></a></h5><p><code>string</code> = <code>&#39;&#39;</code></p><p>The file extension to exclude from the basename.</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>string</code></p><p>The basename of the file.</p><hr><h3 id="getcontent" tabindex="-1"><a class="header-anchor" href="#getcontent"><span>getContent()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getContent</span><span class="token punctuation">(</span>encoding<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get file content.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="encoding" tabindex="-1"><a class="header-anchor" href="#encoding"><span>encoding</span></a></h5><p><code>BufferEncoding</code> = <code>&#39;utf-8&#39;</code></p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h4><p><code>string</code></p><p>The content of the file as a string.</p><hr><h3 id="getctime" tabindex="-1"><a class="header-anchor" href="#getctime"><span>getCTime()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getCTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> bigint<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the created time of the file.</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h4><p><code>undefined</code> | <code>number</code> | <code>bigint</code></p><p>The created time in milliseconds.</p><hr><h3 id="getdirname" tabindex="-1"><a class="header-anchor" href="#getdirname"><span>getDirname()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getDirname</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the directory name of the file.</p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4><p><code>string</code></p><p>The directory name.</p><hr><h3 id="getencodedabsolutepath" tabindex="-1"><a class="header-anchor" href="#getencodedabsolutepath"><span>getEncodedAbsolutePath()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getEncodedAbsolutePath</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the encoded absolute file path.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="root-1" tabindex="-1"><a class="header-anchor" href="#root-1"><span>root</span></a></h5><p><code>string</code> = <code>&#39;&#39;</code></p><p>The root directory to resolve from.</p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4><p><code>string</code></p><p>The encoded absolute file path.</p><hr><h3 id="getencodedpath" tabindex="-1"><a class="header-anchor" href="#getencodedpath"><span>getEncodedPath()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getEncodedPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the encoded file path.</p><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h4><p><code>string</code></p><p>The encoded file path.</p><hr><h3 id="getextension" tabindex="-1"><a class="header-anchor" href="#getextension"><span>getExtension()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getExtension</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the file extension.</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11"><span>Returns</span></a></h4><p><code>string</code></p><p>The file extension.</p><hr><h3 id="getfilename" tabindex="-1"><a class="header-anchor" href="#getfilename"><span>getFilename()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the filename of the file.</p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12"><span>Returns</span></a></h4><p><code>string</code></p><p>The filename of the file.</p><hr><h3 id="gethashedcontent" tabindex="-1"><a class="header-anchor" href="#gethashedcontent"><span>getHashedContent()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getHashedContent</span><span class="token punctuation">(</span>algo<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the hashed content of the file.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="algo" tabindex="-1"><a class="header-anchor" href="#algo"><span>algo</span></a></h5><p><code>string</code> = <code>&#39;sha256&#39;</code></p><p>The hashing algorithm to use.</p><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13"><span>Returns</span></a></h4><p><code>string</code></p><p>The hashed content of the file as a hex string.</p><hr><h3 id="getmimetype" tabindex="-1"><a class="header-anchor" href="#getmimetype"><span>getMimeType()</span></a></h3><p>Get the MIME type of the file.</p><h4 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h4><p>A fallback MIME type if detection fails.</p><h4 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getMimeType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the MIME type of the file.</p><h5 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14"><span>Returns</span></a></h5><p><code>undefined</code> | <code>string</code></p><p>The MIME type of the file.</p><h5 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h5><p>A fallback MIME type if detection fails.</p><h4 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getMimeType</span><span class="token punctuation">(</span>fallback<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the MIME type of the file.</p><h5 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h5><h6 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>fallback</span></a></h6><p><code>string</code></p><p>A fallback MIME type if detection fails.</p><h5 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15"><span>Returns</span></a></h5><p><code>string</code></p><p>The MIME type of the file.</p><h5 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h5><p>A fallback MIME type if detection fails.</p><hr><h3 id="getmtime" tabindex="-1"><a class="header-anchor" href="#getmtime"><span>getMTime()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getMTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> bigint<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the last modified time of the file.</p><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16"><span>Returns</span></a></h4><p><code>undefined</code> | <code>number</code> | <code>bigint</code></p><p>The last modified time in milliseconds.</p><hr><h3 id="getname" tabindex="-1"><a class="header-anchor" href="#getname"><span>getName()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the name of the file without extension.</p><h4 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17"><span>Returns</span></a></h4><p><code>string</code></p><p>The name of the file.</p><hr><h3 id="getpath" tabindex="-1"><a class="header-anchor" href="#getpath"><span>getPath()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the file path.</p><h4 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18"><span>Returns</span></a></h4><p><code>string</code></p><p>The file path.</p><hr><h3 id="getsize" tabindex="-1"><a class="header-anchor" href="#getsize"><span>getSize()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getSize</span><span class="token punctuation">(</span>formatted<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span> <span class="token operator">|</span> bigint<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get file size.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h4><h5 id="formatted" tabindex="-1"><a class="header-anchor" href="#formatted"><span>formatted</span></a></h5><p><code>boolean</code> = <code>false</code></p><p>Whether to return the file size as a formatted string.</p><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19"><span>Returns</span></a></h4><p><code>undefined</code> | <code>string</code> | <code>number</code> | <code>bigint</code></p><p>The file size as a string or number.</p><hr><h3 id="isabsolute" tabindex="-1"><a class="header-anchor" href="#isabsolute"><span>isAbsolute()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isAbsolute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the file path is absolute.</p><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file path is absolute, otherwise false.</p><hr><h3 id="iscompressed" tabindex="-1"><a class="header-anchor" href="#iscompressed"><span>isCompressed()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isCompressed</span><span class="token punctuation">(</span>extensions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the file is compressed.</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h4><h5 id="extensions" tabindex="-1"><a class="header-anchor" href="#extensions"><span>extensions</span></a></h5><p><code>string</code>[] = <code>...</code></p><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is compressed, otherwise false.</p><hr><h3 id="isdir" tabindex="-1"><a class="header-anchor" href="#isdir"><span>isDir()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isDir</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the file is a directory.</p><h4 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is a directory, otherwise false.</p><hr><h3 id="isexecutable" tabindex="-1"><a class="header-anchor" href="#isexecutable"><span>isExecutable()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isExecutable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the file is executable.</p><h4 id="returns-23" tabindex="-1"><a class="header-anchor" href="#returns-23"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is executable, otherwise false.</p><hr><h3 id="isfile" tabindex="-1"><a class="header-anchor" href="#isfile"><span>isFile()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the file is a regular file.</p><h4 id="returns-24" tabindex="-1"><a class="header-anchor" href="#returns-24"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is a regular file, otherwise false.</p><hr><h3 id="islink" tabindex="-1"><a class="header-anchor" href="#islink"><span>isLink()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isLink</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the file is a symbolic link.</p><h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is a symbolic link, otherwise false.</p><hr><h3 id="ispathprefix" tabindex="-1"><a class="header-anchor" href="#ispathprefix"><span>isPathPrefix()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isPathPrefix</span><span class="token punctuation">(</span>prefix<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the file path starts with a provided prefix.</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10"><span>Parameters</span></a></h4><h5 id="prefix" tabindex="-1"><a class="header-anchor" href="#prefix"><span>prefix</span></a></h5><p><code>string</code></p><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file path starts with the provided prefix, otherwise false.</p><hr><h3 id="isreadable" tabindex="-1"><a class="header-anchor" href="#isreadable"><span>isReadable()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isReadable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the file is readable.</p><h4 id="returns-27" tabindex="-1"><a class="header-anchor" href="#returns-27"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is readable, otherwise false.</p><hr><h3 id="iswritable" tabindex="-1"><a class="header-anchor" href="#iswritable"><span>isWritable()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isWritable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the file is writable.</p><h4 id="returns-28" tabindex="-1"><a class="header-anchor" href="#returns-28"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is writable, otherwise false.</p><hr><h3 id="move" tabindex="-1"><a class="header-anchor" href="#move"><span>move()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">move</span><span class="token punctuation">(</span>directory<span class="token punctuation">,</span> name<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> File<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Move file to a new directory.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11"><span>Parameters</span></a></h4><h5 id="directory" tabindex="-1"><a class="header-anchor" href="#directory"><span>directory</span></a></h5><p><code>string</code></p><p>The target directory.</p><h5 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name?</span></a></h5><p><code>string</code></p><p>The new name for the file.</p><h4 id="returns-29" tabindex="-1"><a class="header-anchor" href="#returns-29"><span>Returns</span></a></h4><p><code>File</code></p><p>The new File instance representing the moved file.</p><h4 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h4><p>FileError if the file could not be moved.</p><hr><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove"><span>remove()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">remove</span><span class="token punctuation">(</span>force<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Remove file.</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12"><span>Parameters</span></a></h4><h5 id="force" tabindex="-1"><a class="header-anchor" href="#force"><span>force</span></a></h5><p><code>boolean</code> = <code>false</code></p><p>Whether to forcefully remove the file.</p><h4 id="returns-30" tabindex="-1"><a class="header-anchor" href="#returns-30"><span>Returns</span></a></h4><p><code>this</code></p><p>The current File instance.</p><hr><h3 id="write" tabindex="-1"><a class="header-anchor" href="#write"><span>write()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">write</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Write content to file.</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13"><span>Parameters</span></a></h4><h5 id="content" tabindex="-1"><a class="header-anchor" href="#content"><span>content</span></a></h5><p><code>string</code></p><p>The content to write to the file.</p><h4 id="returns-31" tabindex="-1"><a class="header-anchor" href="#returns-31"><span>Returns</span></a></h4><p><code>this</code></p><p>The current File instance.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token function">create</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> checkPath<span class="token punctuation">)</span><span class="token operator">:</span> File<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create a File.</p><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14"><span>Parameters</span></a></h4><h5 id="path-1" tabindex="-1"><a class="header-anchor" href="#path-1"><span>path</span></a></h5><p><code>string</code></p><p>The file path.</p><h5 id="checkpath-1" tabindex="-1"><a class="header-anchor" href="#checkpath-1"><span>checkPath</span></a></h5><p><code>boolean</code> = <code>true</code></p><p>Whether to check if the file path is valid.</p><h4 id="returns-32" tabindex="-1"><a class="header-anchor" href="#returns-32"><span>Returns</span></a></h4><p><code>File</code></p><p>A new File instance.</p>`,305))])}const b=t(o,[["render",d]]),g=JSON.parse('{"path":"/api/filesystem/file/File/classes/File.html","title":"Class: File","lang":"en-US","frontmatter":{"description":"Class: File Class representing a File. Author Mr. Stone evensstone@gmail.com Extended by Constructors Constructor Create a File. Parameters path string The file path. checkPath ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: File\\",\\"image\\":[\\"/logo.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/filesystem/file/File/classes/File.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: File"}],["meta",{"property":"og:description","content":"Class: File Class representing a File. Author Mr. Stone evensstone@gmail.com Extended by Constructors Constructor Create a File. Parameters path string The file path. checkPath ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":2.83,"words":850},"filePathRelative":"api/filesystem/file/File/classes/File.md","autoDesc":true}');export{b as comp,g as data};
