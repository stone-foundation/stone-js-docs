import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as s,b as a,e as p,w as i,r,o as l}from"./app-CsZBgwJX.js";const c={};function d(u,n){const e=r("RouteLink");return l(),o("div",null,[n[3]||(n[3]=s("h1",{id:"stone-js-node-http-adapter",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#stone-js-node-http-adapter"},[s("span",null,"Stone.js - Node HTTP Adapter")])],-1)),s("p",null,[n[1]||(n[1]=a('<a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/l/@stone-js/node-http-adapter" alt="npm" loading="lazy"></a><a href="https://www.npmjs.com/package/@stone-js/node-http-adapter" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/v/@stone-js/node-http-adapter" alt="npm" loading="lazy"></a><a href="https://www.npmjs.com/package/@stone-js/node-http-adapter" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/dm/@stone-js/node-http-adapter" alt="npm" loading="lazy"></a><img src="https://img.shields.io/maintenance/yes/2025" alt="Maintenance" loading="lazy"><a href="https://github.com/stone-foundation/stone-js-node-http-adapter/actions/workflows/main.yml" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-node-http-adapter/actions/workflows/main.yml/badge.svg" alt="Build Status" loading="lazy"></a><a href="https://github.com/stone-foundation/stone-js-node-http-adapter/actions/workflows/release.yml" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-node-http-adapter/actions/workflows/release.yml/badge.svg" alt="Publish Package to npmjs" loading="lazy"></a><a href="https://sonarcloud.io/summary/new_code?id=stone-foundation_stone-js-node-http-adapter" target="_blank" rel="noopener noreferrer"><img src="https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-node-http-adapter&amp;metric=alert_status" alt="Quality Gate Status" loading="lazy"></a><a href="https://sonarcloud.io/summary/new_code?id=stone-foundation_stone-js-node-http-adapter" target="_blank" rel="noopener noreferrer"><img src="https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-node-http-adapter&amp;metric=coverage" alt="Coverage" loading="lazy"></a>',8)),p(e,{to:"/packages/node-http-adapter/SECURITY.html"},{default:i(()=>n[0]||(n[0]=[s("img",{src:"https://img.shields.io/badge/Security-Policy-blue.svg",alt:"Security Policy",loading:"lazy"},null,-1)])),_:1,__:[0]}),n[2]||(n[2]=a('<a href="https://github.com/stone-foundation/stone-js-node-http-adapter/security/code-scanning" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-node-http-adapter/actions/workflows/github-code-scanning/codeql/badge.svg" alt="CodeQL" loading="lazy"></a><a href="https://github.com/stone-foundation/stone-js-node-http-adapter/network/updates" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/Dependabot-enabled-brightgreen.svg" alt="Dependabot Status" loading="lazy"></a><a href="https://conventionalcommits.org" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/Conventional Commits-1.0.0-yellow.svg" alt="Conventional Commits" loading="lazy"></a>',3))]),n[4]||(n[4]=a(`<p>The <strong>Node HTTP Adapter</strong> enables your Stone.js application to run in any Node.js HTTP environment. It provides a low-level bridge between raw Node HTTP events and the internal event system of Stone.js, fully aligned with the Continuum Architecture.</p><hr><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>In Stone.js, <strong>adapters</strong> are the translation layer between the outside world and your internal logic. The Node HTTP Adapter handles incoming HTTP requests from Node’s built-in <code>http</code> module, transforming them into standardized <code>IncomingEvent</code> objects, and turning your system’s <code>OutgoingResponse</code> back into proper HTTP responses.</p><p>This adapter allows your Stone.js app to behave like a traditional web server, without requiring Express or any framework overhead, while still benefiting from Stone.js’s unified event model, clean lifecycle, and platform independence.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> <span class="token function">install</span> @stone-js/node-http-adapter</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>This package is <strong>pure ESM</strong>. Make sure your project uses ESM (<code>&quot;type&quot;: &quot;module&quot;</code> in <code>package.json</code>) or configure your tooling accordingly.</p></blockquote><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>You can integrate the adapter either declaratively with a decorator or imperatively using the <code>nodeHttpAdapterBlueprint</code>.</p><h3 id="declarative-api" tabindex="-1"><a class="header-anchor" href="#declarative-api"><span>Declarative API</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> NodeHttp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/node-http-adapter&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> StoneApp<span class="token punctuation">,</span> IncomingEvent<span class="token punctuation">,</span> IEventHandler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">StoneApp</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">NodeHttp</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> url<span class="token operator">:</span> <span class="token string">&#39;http://localhost:8081&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token keyword">implements</span> <span class="token class-name">IEventHandler<span class="token operator">&lt;</span>IncomingEvent<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token operator">:</span> IncomingEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> name <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="imperative-api" tabindex="-1"><a class="header-anchor" href="#imperative-api"><span>Imperative API</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStoneApp<span class="token punctuation">,</span> IncomingEvent<span class="token punctuation">,</span> defineConfig<span class="token punctuation">,</span> IBlueprint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/core&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> nodeHttpAdapterBlueprint<span class="token punctuation">,</span> <span class="token constant">NODE_HTTP_PLATFORM</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/node-http-adapter&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> IncomingEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> name <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hi </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">defineStoneApp</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>nodeHttpAdapterBlueprint<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> AppConfig <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">afterConfigure</span><span class="token punctuation">(</span>blueprint<span class="token operator">:</span> IBlueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>blueprint<span class="token punctuation">.</span><span class="token keyword">is</span><span class="token punctuation">(</span><span class="token string">&#39;stone.adapter.platform&#39;</span><span class="token punctuation">,</span> <span class="token constant">NODE_HTTP_PLATFORM</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      blueprint<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;stone.adapter.url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;http://localhost:8081&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="what-it-enables" tabindex="-1"><a class="header-anchor" href="#what-it-enables"><span>What It Enables</span></a></h2><ul><li><p><strong>Universal HTTP Support</strong> Run your Stone.js app on any Node.js HTTP server. No Express or external framework needed.</p></li><li><p><strong>Full Continuum Integration</strong> HTTP becomes a native dimension of your system: requests and responses are transformed into <code>IncomingEvent</code> and <code>OutgoingResponse</code>, respecting the Continuum model.</p></li><li><p><strong>Server-Level Middleware</strong> Add <code>serverMiddleware[]</code> to intercept raw HTTP traffic before Stone.js handles it. Works with most connect-style middlewares.</p></li><li><p><strong>Lifecycle and Hook Support</strong> Includes support for <code>onStart</code>, <code>onStop</code>, error hooks, and adapter middleware pipelines.</p></li><li><p><strong>Rich Event Context</strong> Access IP, cookies, headers, body, uploaded files, and more in a normalized and typed format.</p></li><li><p><strong>Streaming &amp; File Uploads</strong> Direct access to Node’s <code>IncomingMessage</code> and <code>ServerResponse</code> for advanced use cases like streaming or file handling.</p></li><li><p><strong>First-Class TypeScript Support</strong> Strong typings for all configuration, events, and response types.</p></li><li><p><strong>Built-in Error Handling</strong> Customize how errors are caught and transformed into HTTP responses.</p></li></ul><h2 id="configuration-options" tabindex="-1"><a class="header-anchor" href="#configuration-options"><span>Configuration Options</span></a></h2><table><thead><tr><th>Option</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>url</code></td><td><code>string</code></td><td>Base URL of the server. Example: <code>http://localhost:3000</code></td></tr><tr><td><code>isSsl</code></td><td><code>boolean</code></td><td>Whether to use HTTPS</td></tr><tr><td><code>server</code></td><td><code>NodeServerOptions</code></td><td>Native Node server configuration</td></tr><tr><td><code>printUrls</code></td><td><code>boolean</code></td><td>Log URL(s) to console on server start</td></tr><tr><td><code>serverMiddleware[]</code></td><td><code>Array&lt;(req, res, next) =&gt; void&gt;</code></td><td>Platform-level connect-like middleware before Stone.js kicks in</td></tr><tr><td><code>alias</code></td><td><code>string</code></td><td>Optional name for referencing the adapter</td></tr><tr><td><code>default</code></td><td><code>boolean</code></td><td>Set as default adapter for the app</td></tr><tr><td><code>current</code></td><td><code>boolean</code></td><td>Mark this as the active adapter during runtime</td></tr><tr><td><code>middleware[]</code></td><td><code>AdapterMixedPipeType[]</code></td><td>Middleware for request/response within the Stone.js lifecycle</td></tr><tr><td><code>errorHandlers</code></td><td><code>Record&lt;string, MetaAdapterErrorHandler&gt;</code></td><td>Fine-grained adapter-level error handling</td></tr></tbody></table><h2 id="adapter-context-shape" tabindex="-1"><a class="header-anchor" href="#adapter-context-shape"><span>Adapter Context Shape</span></a></h2><p>When middleware or integration hooks execute, they receive the following context object:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">interface</span> <span class="token class-name">NodeHttpAdapterContext</span> <span class="token punctuation">{</span></span>
<span class="line">  rawEvent<span class="token operator">:</span> IncomingMessage<span class="token punctuation">;</span></span>
<span class="line">  rawResponse<span class="token operator">?</span><span class="token operator">:</span> ServerResponse<span class="token punctuation">;</span></span>
<span class="line">  executionContext<span class="token operator">:</span> NodeHttpServer<span class="token punctuation">;</span></span>
<span class="line">  incomingEvent<span class="token operator">?</span><span class="token operator">:</span> IncomingHttpEvent<span class="token punctuation">;</span></span>
<span class="line">  outgoingResponse<span class="token operator">?</span><span class="token operator">:</span> OutgoingHttpResponse<span class="token punctuation">;</span></span>
<span class="line">  incomingEventBuilder<span class="token operator">:</span> IAdapterEventBuilder<span class="token operator">&lt;</span>IncomingHttpEventOptions<span class="token punctuation">,</span> IncomingHttpEvent<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">  rawResponseBuilder<span class="token operator">:</span> IAdapterEventBuilder<span class="token operator">&lt;</span>RawHttpResponseOptions<span class="token punctuation">,</span> IRawResponseWrapper<span class="token operator">&lt;</span>ServerResponse<span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>These values expose the full HTTP lifecycle and provide access to Stone.js event builders.</p><h3 id="incoming-http-event-options" tabindex="-1"><a class="header-anchor" href="#incoming-http-event-options"><span>Incoming HTTP Event Options</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">interface</span> <span class="token class-name">IncomingHttpEventOptions</span> <span class="token punctuation">{</span></span>
<span class="line">  url<span class="token operator">:</span> <span class="token constant">URL</span><span class="token punctuation">;</span></span>
<span class="line">  ip<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  ips<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">  protocol<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  method<span class="token operator">?</span><span class="token operator">:</span> HttpMethods<span class="token punctuation">;</span></span>
<span class="line">  queryString<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  cookies<span class="token operator">?</span><span class="token operator">:</span> CookieCollection<span class="token punctuation">;</span></span>
<span class="line">  body<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">  files<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> UploadedFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">  headers<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">|</span> Headers<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="raw-http-response-options" tabindex="-1"><a class="header-anchor" href="#raw-http-response-options"><span>Raw HTTP Response Options</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">interface</span> <span class="token class-name">RawHttpResponseOptions</span> <span class="token punctuation">{</span></span>
<span class="line">  body<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span></span>
<span class="line">  charset<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  statusCode<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line">  statusMessage<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  headers<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">|</span> Headers<span class="token punctuation">;</span></span>
<span class="line">  streamFile<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span> <span class="token operator">|</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This context flows through all adapter middleware and hooks.</p><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>The <code>@stone-js/node-http-adapter</code> brings your Stone.js application to life in the HTTP world. With seamless integration, native Node support, and complete event transformation, you can build modern APIs, websites, or microservices that feel as fast and flexible as Node, but with the architectural rigor of Stone.js.</p><h2 id="learn-more" tabindex="-1"><a class="header-anchor" href="#learn-more"><span>Learn More</span></a></h2><p>This package is part of the Stone.js ecosystem, a modern JavaScript framework built around the Continuum Architecture.</p><p>Explore the full documentation: <a href="https://stonejs.dev" target="_blank" rel="noopener noreferrer">https://stonejs.dev</a></p><h2 id="api-documentation" tabindex="-1"><a class="header-anchor" href="#api-documentation"><span>API documentation</span></a></h2><ul><li><a href="https://github.com/stone-foundation/stone-js-node-http-adapter/blob/main/docs" target="_blank" rel="noopener noreferrer">API</a></li></ul><h2 id="contributing" tabindex="-1"><a class="header-anchor" href="#contributing"><span>Contributing</span></a></h2><p>See <a href="https://github.com/stone-foundation/stone-js-node-http-adapter/blob/main/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing Guide</a></p>`,36))])}const g=t(c,[["render",d]]),h=JSON.parse('{"path":"/packages/node-http-adapter/","title":"Stone.js - Node HTTP Adapter","lang":"en-US","frontmatter":{"description":"Stone.js - Node HTTP Adapter npm npm npm Maintenance Build Status Publish Package to npmjs Quality Gate Status Coverage CodeQL Dependabot Status Conventional Commits The Node HT...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Stone.js - Node HTTP Adapter\\",\\"image\\":[\\"https://img.shields.io/npm/l/@stone-js/node-http-adapter\\",\\"https://img.shields.io/npm/v/@stone-js/node-http-adapter\\",\\"https://img.shields.io/npm/dm/@stone-js/node-http-adapter\\",\\"https://img.shields.io/maintenance/yes/2025\\",\\"https://github.com/stone-foundation/stone-js-node-http-adapter/actions/workflows/main.yml/badge.svg\\",\\"https://github.com/stone-foundation/stone-js-node-http-adapter/actions/workflows/release.yml/badge.svg\\",\\"https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-node-http-adapter&metric=alert_status\\",\\"https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-node-http-adapter&metric=coverage\\",\\"https://img.shields.io/badge/Security-Policy-blue.svg\\",\\"https://github.com/stone-foundation/stone-js-node-http-adapter/actions/workflows/github-code-scanning/codeql/badge.svg\\",\\"https://img.shields.io/badge/Dependabot-enabled-brightgreen.svg\\",\\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/packages/node-http-adapter/"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Stone.js - Node HTTP Adapter"}],["meta",{"property":"og:description","content":"Stone.js - Node HTTP Adapter npm npm npm Maintenance Build Status Publish Package to npmjs Quality Gate Status Coverage CodeQL Dependabot Status Conventional Commits The Node HT..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.shields.io/npm/l/@stone-js/node-http-adapter"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":2.95,"words":885},"filePathRelative":"packages/node-http-adapter/readme.md","autoDesc":true}');export{g as comp,h as data};
