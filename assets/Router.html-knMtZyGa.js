import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as o,a as e,d as a,e as t,w as p,r as l,o as d}from"./app-CsZBgwJX.js";const u={};function c(h,n){const s=l("RouteLink");return d(),i("div",null,[n[215]||(n[215]=o('<h1 id="class-router-incomingeventtype-outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#class-router-incomingeventtype-outgoingresponsetype"><span>Class: Router&lt;IncomingEventType, OutgoingResponseType&gt;</span></a></h1><p>Represents a configurable router for managing HTTP routes and handling incoming events.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="incomingeventtype" tabindex="-1"><a class="header-anchor" href="#incomingeventtype"><span>IncomingEventType</span></a></h3>',4)),e("p",null,[n[2]||(n[2]=e("code",null,"IncomingEventType",-1)),n[3]||(n[3]=a()),n[4]||(n[4]=e("em",null,"extends",-1)),n[5]||(n[5]=a()),t(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>n[0]||(n[0]=[e("code",null,"IIncomingEvent",-1)])),_:1,__:[0]}),n[6]||(n[6]=a(" = ")),t(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>n[1]||(n[1]=[e("code",null,"IIncomingEvent",-1)])),_:1,__:[1]})]),n[216]||(n[216]=o(`<p>Type of incoming events.</p><h3 id="outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#outgoingresponsetype"><span>OutgoingResponseType</span></a></h3><p><code>OutgoingResponseType</code> = <code>unknown</code></p><p>Type of outgoing responses.</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token keyword">new</span> <span class="token class-name">Router<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>routerOptions<span class="token punctuation">)</span><span class="token operator">:</span> Router<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Constructs a <code>Router</code> instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="routeroptions" tabindex="-1"><a class="header-anchor" href="#routeroptions"><span>routerOptions</span></a></h5>`,10)),e("p",null,[t(s,{to:"/api/router/declarations/interfaces/RouterOptions.html"},{default:p(()=>n[7]||(n[7]=[e("code",null,"RouterOptions",-1)])),_:1,__:[7]}),n[8]||(n[8]=a("<")),n[9]||(n[9]=e("code",null,"IncomingEventType",-1)),n[10]||(n[10]=a(", ")),n[11]||(n[11]=e("code",null,"OutgoingResponseType",-1)),n[12]||(n[12]=a(">"))]),n[217]||(n[217]=o(`<p>Configuration options for the router.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Router</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add"><span>add()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">add</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> handlerOrDefinition<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers a route that supports the <code>GET</code> and <code>HEAD</code> methods.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="path" tabindex="-1"><a class="header-anchor" href="#path"><span>path</span></a></h5><p>The route path.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="handlerordefinition" tabindex="-1"><a class="header-anchor" href="#handlerordefinition"><span>handlerOrDefinition</span></a></h5><p>The route handler or functional definition.</p>`,13)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalRouteDefinition.html"},{default:p(()=>n[13]||(n[13]=[e("code",null,"FunctionalRouteDefinition",-1)])),_:1,__:[13]}),n[15]||(n[15]=a("<")),n[16]||(n[16]=e("code",null,"IncomingEventType",-1)),n[17]||(n[17]=a(", ")),n[18]||(n[18]=e("code",null,"OutgoingResponseType",-1)),n[19]||(n[19]=a("> | ")),t(s,{to:"/api/router/declarations/type-aliases/FunctionalEventHandler.html"},{default:p(()=>n[14]||(n[14]=[e("code",null,"FunctionalEventHandler",-1)])),_:1,__:[14]}),n[20]||(n[20]=a("<")),n[21]||(n[21]=e("code",null,"IncomingEventType",-1)),n[22]||(n[22]=a(", ")),n[23]||(n[23]=e("code",null,"OutgoingResponseType",-1)),n[24]||(n[24]=a(">"))]),n[218]||(n[218]=o(`<h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="any" tabindex="-1"><a class="header-anchor" href="#any"><span>any()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">any</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> handlerOrDefinition<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers a route that supports all HTTP methods.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="path-1" tabindex="-1"><a class="header-anchor" href="#path-1"><span>path</span></a></h5><p>The route path.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="handlerordefinition-1" tabindex="-1"><a class="header-anchor" href="#handlerordefinition-1"><span>handlerOrDefinition</span></a></h5><p>The route handler or functional definition.</p>`,13)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalRouteDefinition.html"},{default:p(()=>n[25]||(n[25]=[e("code",null,"FunctionalRouteDefinition",-1)])),_:1,__:[25]}),n[27]||(n[27]=a("<")),n[28]||(n[28]=e("code",null,"IncomingEventType",-1)),n[29]||(n[29]=a(", ")),n[30]||(n[30]=e("code",null,"OutgoingResponseType",-1)),n[31]||(n[31]=a("> | ")),t(s,{to:"/api/router/declarations/type-aliases/FunctionalEventHandler.html"},{default:p(()=>n[26]||(n[26]=[e("code",null,"FunctionalEventHandler",-1)])),_:1,__:[26]}),n[32]||(n[32]=a("<")),n[33]||(n[33]=e("code",null,"IncomingEventType",-1)),n[34]||(n[34]=a(", ")),n[35]||(n[35]=e("code",null,"OutgoingResponseType",-1)),n[36]||(n[36]=a(">"))]),n[219]||(n[219]=o(`<h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="configure" tabindex="-1"><a class="header-anchor" href="#configure"><span>configure()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">configure</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Configures the router with specific options.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5>`,9)),e("p",null,[n[38]||(n[38]=e("code",null,"Partial",-1)),n[39]||(n[39]=a("<")),t(s,{to:"/api/router/declarations/interfaces/RouterOptions.html"},{default:p(()=>n[37]||(n[37]=[e("code",null,"RouterOptions",-1)])),_:1,__:[37]}),n[40]||(n[40]=a("<")),n[41]||(n[41]=e("code",null,"IncomingEventType",-1)),n[42]||(n[42]=a(", ")),n[43]||(n[43]=e("code",null,"OutgoingResponseType",-1)),n[44]||(n[44]=a(">>"))]),n[220]||(n[220]=o(`<p>A partial configuration object for the router.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>this</code></p><p>The current <code>Router</code> instance.</p><hr><h3 id="define" tabindex="-1"><a class="header-anchor" href="#define"><span>define()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">define</span><span class="token punctuation">(</span>definitions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines multiple route definitions in the router.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="definitions" tabindex="-1"><a class="header-anchor" href="#definitions"><span>definitions</span></a></h5>`,10)),e("p",null,[t(s,{to:"/api/router/declarations/interfaces/RouteDefinition.html"},{default:p(()=>n[45]||(n[45]=[e("code",null,"RouteDefinition",-1)])),_:1,__:[45]}),n[46]||(n[46]=a("<")),n[47]||(n[47]=e("code",null,"IncomingEventType",-1)),n[48]||(n[48]=a(", ")),n[49]||(n[49]=e("code",null,"OutgoingResponseType",-1)),n[50]||(n[50]=a(">[]"))]),n[221]||(n[221]=o(`<p>An array of route definitions to add.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>this</code></p><p>The current <code>Router</code> instance.</p><hr><h3 id="delete" tabindex="-1"><a class="header-anchor" href="#delete"><span>delete()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">delete</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> handlerOrDefinition<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers a route that supports the <code>DELETE</code> method.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="path-2" tabindex="-1"><a class="header-anchor" href="#path-2"><span>path</span></a></h5><p>The route path.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="handlerordefinition-2" tabindex="-1"><a class="header-anchor" href="#handlerordefinition-2"><span>handlerOrDefinition</span></a></h5><p>The route handler or functional definition.</p>`,14)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalRouteDefinition.html"},{default:p(()=>n[51]||(n[51]=[e("code",null,"FunctionalRouteDefinition",-1)])),_:1,__:[51]}),n[53]||(n[53]=a("<")),n[54]||(n[54]=e("code",null,"IncomingEventType",-1)),n[55]||(n[55]=a(", ")),n[56]||(n[56]=e("code",null,"OutgoingResponseType",-1)),n[57]||(n[57]=a("> | ")),t(s,{to:"/api/router/declarations/type-aliases/FunctionalEventHandler.html"},{default:p(()=>n[52]||(n[52]=[e("code",null,"FunctionalEventHandler",-1)])),_:1,__:[52]}),n[58]||(n[58]=a("<")),n[59]||(n[59]=e("code",null,"IncomingEventType",-1)),n[60]||(n[60]=a(", ")),n[61]||(n[61]=e("code",null,"OutgoingResponseType",-1)),n[62]||(n[62]=a(">"))]),n[222]||(n[222]=o(`<h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="dispatch" tabindex="-1"><a class="header-anchor" href="#dispatch"><span>dispatch()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">dispatch</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Dispatches an event through the router to find and execute the corresponding route.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="event" tabindex="-1"><a class="header-anchor" href="#event"><span>event</span></a></h5><p><code>IncomingEventType</code></p><p>The incoming event to process.</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>OutgoingResponseType</code>&gt;</p><p>A promise resolving to the outgoing response after executing the matched route.</p><hr><h3 id="dumproutes" tabindex="-1"><a class="header-anchor" href="#dumproutes"><span>dumpRoutes()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">dumpRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Dumps all routes as an array of JSON objects.</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;[]&gt;</p><p>An array of JSON objects representing the routes.</p><hr><h3 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>fallback()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">fallback</span><span class="token punctuation">(</span>action<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers a fallback route to handle unmatched requests.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h4><h5 id="action" tabindex="-1"><a class="header-anchor" href="#action"><span>action</span></a></h5>`,27)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalEventHandler.html"},{default:p(()=>n[63]||(n[63]=[e("code",null,"FunctionalEventHandler",-1)])),_:1,__:[63]}),n[64]||(n[64]=a("<")),n[65]||(n[65]=e("code",null,"IncomingEventType",-1)),n[66]||(n[66]=a(", ")),n[67]||(n[67]=e("code",null,"OutgoingResponseType",-1)),n[68]||(n[68]=a(">"))]),n[223]||(n[223]=o(`<p>The handler to execute for the fallback route.</p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4><p><code>this</code></p><p>The current <code>Router</code> instance.</p><hr><h3 id="findroute" tabindex="-1"><a class="header-anchor" href="#findroute"><span>findRoute()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">findRoute</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Route<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Finds and matches a route for the given event.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h4><h5 id="event-1" tabindex="-1"><a class="header-anchor" href="#event-1"><span>event</span></a></h5><p><code>IncomingEventType</code></p><p>The incoming event to find a route for.</p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4>`,13)),e("p",null,[n[70]||(n[70]=e("code",null,"Promise",-1)),n[71]||(n[71]=a("<")),t(s,{to:"/api/router/Route/classes/Route.html"},{default:p(()=>n[69]||(n[69]=[e("code",null,"Route",-1)])),_:1,__:[69]}),n[72]||(n[72]=a("<")),n[73]||(n[73]=e("code",null,"IncomingEventType",-1)),n[74]||(n[74]=a(", ")),n[75]||(n[75]=e("code",null,"OutgoingResponseType",-1)),n[76]||(n[76]=a(">>"))]),n[224]||(n[224]=o(`<p>The matched route.</p><h4 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h4><p>If no route matches the given event.</p><hr><h3 id="gatherroutemiddleware" tabindex="-1"><a class="header-anchor" href="#gatherroutemiddleware"><span>gatherRouteMiddleware()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">gatherRouteMiddleware</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token operator">:</span> MixedPipe<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Collects middleware for a specific route, including global and route-specific middleware.</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h4><h5 id="route" tabindex="-1"><a class="header-anchor" href="#route"><span>route</span></a></h5>`,9)),e("p",null,[t(s,{to:"/api/router/Route/classes/Route.html"},{default:p(()=>n[77]||(n[77]=[e("code",null,"Route",-1)])),_:1,__:[77]}),n[78]||(n[78]=a("<")),n[79]||(n[79]=e("code",null,"IncomingEventType",-1)),n[80]||(n[80]=a(", ")),n[81]||(n[81]=e("code",null,"OutgoingResponseType",-1)),n[82]||(n[82]=a(">"))]),n[225]||(n[225]=o(`<p>The route for which middleware should be gathered.</p><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h4><p><code>MixedPipe</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;[]</p><p>An array of middleware to execute for the route.</p><hr><h3 id="generate" tabindex="-1"><a class="header-anchor" href="#generate"><span>generate()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">generate</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Generates a URL based on a named route and the provided options.</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10"><span>Parameters</span></a></h4><h5 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1"><span>options</span></a></h5>`,10)),e("p",null,[t(s,{to:"/api/router/declarations/interfaces/GenerateOptions.html"},{default:p(()=>n[83]||(n[83]=[e("code",null,"GenerateOptions",-1)])),_:1,__:[83]})]),n[226]||(n[226]=o(`<p>Options for generating the URL, including the route name, parameters, and query.</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11"><span>Returns</span></a></h4><p><code>string</code></p><p>The generated URL as a string.</p><h4 id="throws-1" tabindex="-1"><a class="header-anchor" href="#throws-1"><span>Throws</span></a></h4><p>If no route is found with the specified name.</p><hr><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get"><span>get()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">get</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> handlerOrDefinition<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers a route that supports the <code>GET</code> and <code>HEAD</code> methods.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11"><span>Parameters</span></a></h4><h5 id="path-3" tabindex="-1"><a class="header-anchor" href="#path-3"><span>path</span></a></h5><p>The route path.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="handlerordefinition-3" tabindex="-1"><a class="header-anchor" href="#handlerordefinition-3"><span>handlerOrDefinition</span></a></h5><p>The route handler or functional definition.</p>`,16)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalRouteDefinition.html"},{default:p(()=>n[84]||(n[84]=[e("code",null,"FunctionalRouteDefinition",-1)])),_:1,__:[84]}),n[86]||(n[86]=a("<")),n[87]||(n[87]=e("code",null,"IncomingEventType",-1)),n[88]||(n[88]=a(", ")),n[89]||(n[89]=e("code",null,"OutgoingResponseType",-1)),n[90]||(n[90]=a("> | ")),t(s,{to:"/api/router/declarations/type-aliases/FunctionalEventHandler.html"},{default:p(()=>n[85]||(n[85]=[e("code",null,"FunctionalEventHandler",-1)])),_:1,__:[85]}),n[91]||(n[91]=a("<")),n[92]||(n[92]=e("code",null,"IncomingEventType",-1)),n[93]||(n[93]=a(", ")),n[94]||(n[94]=e("code",null,"OutgoingResponseType",-1)),n[95]||(n[95]=a(">"))]),n[227]||(n[227]=o(`<h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="getcurrentroute" tabindex="-1"><a class="header-anchor" href="#getcurrentroute"><span>getCurrentRoute()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getCurrentRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> </span>
<span class="line">  <span class="token operator">|</span> <span class="token keyword">undefined</span></span>
<span class="line"><span class="token operator">|</span> Route<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Retrieves the currently active route.</p><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13"><span>Returns</span></a></h4>`,8)),e("p",null,[n[97]||(n[97]=a("| ")),n[98]||(n[98]=e("code",null,"undefined",-1)),n[99]||(n[99]=a(" | ")),t(s,{to:"/api/router/Route/classes/Route.html"},{default:p(()=>n[96]||(n[96]=[e("code",null,"Route",-1)])),_:1,__:[96]}),n[100]||(n[100]=a("<")),n[101]||(n[101]=e("code",null,"IncomingEventType",-1)),n[102]||(n[102]=a(", ")),n[103]||(n[103]=e("code",null,"OutgoingResponseType",-1)),n[104]||(n[104]=a(">"))]),n[228]||(n[228]=o(`<p>The current route, or <code>undefined</code> if no route is active.</p><hr><h3 id="getcurrentroutename" tabindex="-1"><a class="header-anchor" href="#getcurrentroutename"><span>getCurrentRouteName()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getCurrentRouteName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves the name of the currently active route.</p><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14"><span>Returns</span></a></h4><p><code>undefined</code> | <code>string</code></p><p>The name of the current route, or <code>undefined</code> if no route is active.</p><hr><h3 id="getparam" tabindex="-1"><a class="header-anchor" href="#getparam"><span>getParam()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">getParam</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> fallback<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> TReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves a specific parameter from the current route.</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h4><h5 id="treturn" tabindex="-1"><a class="header-anchor" href="#treturn"><span>TReturn</span></a></h5><p><code>TReturn</code> = <code>unknown</code></p><p>The expected return type of the parameter.</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12"><span>Parameters</span></a></h4><h5 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h5><p><code>string</code></p><p>The name of the parameter to retrieve.</p><h5 id="fallback-1" tabindex="-1"><a class="header-anchor" href="#fallback-1"><span>fallback?</span></a></h5><p><code>TReturn</code></p><p>An optional fallback value to return if the parameter is not found.</p><h4 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15"><span>Returns</span></a></h4><p><code>undefined</code> | <code>TReturn</code></p><p>The value of the parameter, or the fallback value if the parameter is not found.</p><hr><h3 id="getparams" tabindex="-1"><a class="header-anchor" href="#getparams"><span>getParams()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> </span>
<span class="line">  <span class="token operator">|</span> <span class="token keyword">undefined</span></span>
<span class="line">  <span class="token operator">|</span> RouteParams<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Retrieves the parameters of the current route.</p><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16"><span>Returns</span></a></h4>`,31)),e("p",null,[n[106]||(n[106]=a("| ")),n[107]||(n[107]=e("code",null,"undefined",-1)),n[108]||(n[108]=a(" | ")),t(s,{to:"/api/router/declarations/type-aliases/RouteParams.html"},{default:p(()=>n[105]||(n[105]=[e("code",null,"RouteParams",-1)])),_:1,__:[105]})]),n[229]||(n[229]=o(`<p>An object containing the parameters of the current route, or <code>undefined</code> if no route is active.</p><hr><h3 id="getroutes" tabindex="-1"><a class="header-anchor" href="#getroutes"><span>getRoutes()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> RouteCollection<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves the collection of all routes in the router.</p><h4 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17"><span>Returns</span></a></h4>`,6)),e("p",null,[t(s,{to:"/api/router/RouteCollection/classes/RouteCollection.html"},{default:p(()=>n[109]||(n[109]=[e("code",null,"RouteCollection",-1)])),_:1,__:[109]}),n[110]||(n[110]=a("<")),n[111]||(n[111]=e("code",null,"IncomingEventType",-1)),n[112]||(n[112]=a(", ")),n[113]||(n[113]=e("code",null,"OutgoingResponseType",-1)),n[114]||(n[114]=a(">"))]),n[230]||(n[230]=o(`<p>A <code>RouteCollection</code> containing all registered routes.</p><hr><h3 id="group" tabindex="-1"><a class="header-anchor" href="#group"><span>group()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">group</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> definition<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Creates a route group.</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13"><span>Parameters</span></a></h4><h5 id="path-4" tabindex="-1"><a class="header-anchor" href="#path-4"><span>path</span></a></h5><p><code>string</code></p><p>The base path for the group.</p><h5 id="definition" tabindex="-1"><a class="header-anchor" href="#definition"><span>definition?</span></a></h5>`,10)),e("p",null,[n[116]||(n[116]=e("code",null,"Omit",-1)),n[117]||(n[117]=a("<")),t(s,{to:"/api/router/declarations/type-aliases/FunctionalRouteGroupDefinition.html"},{default:p(()=>n[115]||(n[115]=[e("code",null,"FunctionalRouteGroupDefinition",-1)])),_:1,__:[115]}),n[118]||(n[118]=a("<")),n[119]||(n[119]=e("code",null,"IncomingEventType",-1)),n[120]||(n[120]=a(", ")),n[121]||(n[121]=e("code",null,"OutgoingResponseType",-1)),n[122]||(n[122]=a(">, ")),n[123]||(n[123]=e("code",null,'"path"',-1)),n[124]||(n[124]=a(">"))]),n[231]||(n[231]=o(`<p>Optional group-specific route definitions.</p><h4 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="hasroute" tabindex="-1"><a class="header-anchor" href="#hasroute"><span>hasRoute()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">hasRoute</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the router contains a route with the given name(s).</p><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14"><span>Parameters</span></a></h4><h5 id="name-1" tabindex="-1"><a class="header-anchor" href="#name-1"><span>name</span></a></h5><p>A route name or an array of route names to check.</p><p><code>string</code> | <code>string</code>[]</p><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if at least one of the specified routes exists, <code>false</code> otherwise.</p><hr><h3 id="iscurrentroutenamed" tabindex="-1"><a class="header-anchor" href="#iscurrentroutenamed"><span>isCurrentRouteNamed()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isCurrentRouteNamed</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the currently active route matches the specified name.</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15"><span>Parameters</span></a></h4><h5 id="name-2" tabindex="-1"><a class="header-anchor" href="#name-2"><span>name</span></a></h5><p><code>string</code></p><p>The name to compare with the current route&#39;s name.</p><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the current route&#39;s name matches the specified name, <code>false</code> otherwise.</p><hr><h3 id="match" tabindex="-1"><a class="header-anchor" href="#match"><span>match()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">match</span><span class="token punctuation">(</span></span>
<span class="line">   path<span class="token punctuation">,</span> </span>
<span class="line">   handlerOrDefinition<span class="token punctuation">,</span> </span>
<span class="line">   methods<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Adds a route to the router for specific HTTP methods.</p><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16"><span>Parameters</span></a></h4><h5 id="path-5" tabindex="-1"><a class="header-anchor" href="#path-5"><span>path</span></a></h5><p>The path for the route.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="handlerordefinition-4" tabindex="-1"><a class="header-anchor" href="#handlerordefinition-4"><span>handlerOrDefinition</span></a></h5><p>The handler to execute or a route definition object.</p>`,36)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalRouteDefinition.html"},{default:p(()=>n[125]||(n[125]=[e("code",null,"FunctionalRouteDefinition",-1)])),_:1,__:[125]}),n[127]||(n[127]=a("<")),n[128]||(n[128]=e("code",null,"IncomingEventType",-1)),n[129]||(n[129]=a(", ")),n[130]||(n[130]=e("code",null,"OutgoingResponseType",-1)),n[131]||(n[131]=a("> | ")),t(s,{to:"/api/router/declarations/type-aliases/FunctionalEventHandler.html"},{default:p(()=>n[126]||(n[126]=[e("code",null,"FunctionalEventHandler",-1)])),_:1,__:[126]}),n[132]||(n[132]=a("<")),n[133]||(n[133]=e("code",null,"IncomingEventType",-1)),n[134]||(n[134]=a(", ")),n[135]||(n[135]=e("code",null,"OutgoingResponseType",-1)),n[136]||(n[136]=a(">"))]),n[232]||(n[232]=e("h5",{id:"methods-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods-1"},[e("span",null,"methods")])],-1)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/HttpMethod.html"},{default:p(()=>n[137]||(n[137]=[e("code",null,"HttpMethod",-1)])),_:1,__:[137]}),n[138]||(n[138]=a("[]"))]),n[233]||(n[233]=o(`<p>An array of HTTP methods this route should handle.</p><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21"><span>Returns</span></a></h4><p><code>this</code></p><p>The current <code>Router</code> instance.</p><hr><h3 id="navigate" tabindex="-1"><a class="header-anchor" href="#navigate"><span>navigate()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">navigate</span><span class="token punctuation">(</span>pathOrOptions<span class="token punctuation">,</span> replace<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Navigates to a specific route in the browser environment.</p><h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17"><span>Parameters</span></a></h4><h5 id="pathoroptions" tabindex="-1"><a class="header-anchor" href="#pathoroptions"><span>pathOrOptions</span></a></h5><p>The path or navigation options, including route name and parameters.</p>`,11)),e("p",null,[n[140]||(n[140]=e("code",null,"string",-1)),n[141]||(n[141]=a(" | ")),t(s,{to:"/api/router/declarations/interfaces/NavigateOptions.html"},{default:p(()=>n[139]||(n[139]=[e("code",null,"NavigateOptions",-1)])),_:1,__:[139]})]),n[234]||(n[234]=o(`<h5 id="replace" tabindex="-1"><a class="header-anchor" href="#replace"><span>replace?</span></a></h5><p><code>boolean</code></p><p>Whether to replace the current history entry instead of adding a new one.</p><h4 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22"><span>Returns</span></a></h4><p><code>void</code></p><h4 id="throws-2" tabindex="-1"><a class="header-anchor" href="#throws-2"><span>Throws</span></a></h4><p>If called outside a browser environment.</p><hr><h3 id="nogroup" tabindex="-1"><a class="header-anchor" href="#nogroup"><span>noGroup()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">noGroup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Removes the current group definition, ending the grouping context.</p><h4 id="returns-23" tabindex="-1"><a class="header-anchor" href="#returns-23"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="off" tabindex="-1"><a class="header-anchor" href="#off"><span>off()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">off</span><span class="token punctuation">(</span>eventName<span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Unsubscribes from an event emitted by the router&#39;s event emitter.</p><h4 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18"><span>Parameters</span></a></h4><h5 id="eventname" tabindex="-1"><a class="header-anchor" href="#eventname"><span>eventName</span></a></h5><p><code>string</code></p><p>The name of the event to stop listening for.</p><h5 id="listener" tabindex="-1"><a class="header-anchor" href="#listener"><span>listener</span></a></h5><p><code>FunctionalEventListener</code></p><p>The listener function to remove.</p><h4 id="returns-24" tabindex="-1"><a class="header-anchor" href="#returns-24"><span>Returns</span></a></h4><p><code>this</code></p><p>The current <code>Router</code> instance.</p><hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on"><span>on()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">on</span><span class="token punctuation">(</span>eventName<span class="token punctuation">,</span> listener<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Subscribes to an event emitted by the router&#39;s event emitter.</p><h4 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19"><span>Parameters</span></a></h4><h5 id="eventname-1" tabindex="-1"><a class="header-anchor" href="#eventname-1"><span>eventName</span></a></h5><p><code>string</code></p><p>The name of the event to listen for.</p><h5 id="listener-1" tabindex="-1"><a class="header-anchor" href="#listener-1"><span>listener</span></a></h5><p><code>FunctionalEventListener</code></p><p>The listener function to execute when the event is emitted.</p><h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25"><span>Returns</span></a></h4><p><code>this</code></p><p>The current <code>Router</code> instance.</p><hr><h3 id="options-2" tabindex="-1"><a class="header-anchor" href="#options-2"><span>options()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">options</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> handlerOrDefinition<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers a route that supports the <code>OPTIONS</code> method.</p><h4 id="parameters-20" tabindex="-1"><a class="header-anchor" href="#parameters-20"><span>Parameters</span></a></h4><h5 id="path-6" tabindex="-1"><a class="header-anchor" href="#path-6"><span>path</span></a></h5><p>The route path.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="handlerordefinition-5" tabindex="-1"><a class="header-anchor" href="#handlerordefinition-5"><span>handlerOrDefinition</span></a></h5><p>The route handler or functional definition.</p>`,52)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalRouteDefinition.html"},{default:p(()=>n[142]||(n[142]=[e("code",null,"FunctionalRouteDefinition",-1)])),_:1,__:[142]}),n[144]||(n[144]=a("<")),n[145]||(n[145]=e("code",null,"IncomingEventType",-1)),n[146]||(n[146]=a(", ")),n[147]||(n[147]=e("code",null,"OutgoingResponseType",-1)),n[148]||(n[148]=a("> | ")),t(s,{to:"/api/router/declarations/type-aliases/FunctionalEventHandler.html"},{default:p(()=>n[143]||(n[143]=[e("code",null,"FunctionalEventHandler",-1)])),_:1,__:[143]}),n[149]||(n[149]=a("<")),n[150]||(n[150]=e("code",null,"IncomingEventType",-1)),n[151]||(n[151]=a(", ")),n[152]||(n[152]=e("code",null,"OutgoingResponseType",-1)),n[153]||(n[153]=a(">"))]),n[235]||(n[235]=o(`<h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="page" tabindex="-1"><a class="header-anchor" href="#page"><span>page()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">page</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> definition<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers a route that supports the <code>GET</code> and <code>HEAD</code> methods. Route is considered as a page route.</p><h4 id="parameters-21" tabindex="-1"><a class="header-anchor" href="#parameters-21"><span>Parameters</span></a></h4><h5 id="path-7" tabindex="-1"><a class="header-anchor" href="#path-7"><span>path</span></a></h5><p>The route path.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="definition-1" tabindex="-1"><a class="header-anchor" href="#definition-1"><span>definition</span></a></h5>`,12)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalPageRouteDefinition.html"},{default:p(()=>n[154]||(n[154]=[e("code",null,"FunctionalPageRouteDefinition",-1)])),_:1,__:[154]}),n[155]||(n[155]=a("<")),n[156]||(n[156]=e("code",null,"IncomingEventType",-1)),n[157]||(n[157]=a(", ")),n[158]||(n[158]=e("code",null,"OutgoingResponseType",-1)),n[159]||(n[159]=a(">"))]),n[236]||(n[236]=o(`<p>The route functional definition.</p><h4 id="returns-27" tabindex="-1"><a class="header-anchor" href="#returns-27"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="patch" tabindex="-1"><a class="header-anchor" href="#patch"><span>patch()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">patch</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> handlerOrDefinition<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers a route that supports the <code>PATCH</code> method.</p><h4 id="parameters-22" tabindex="-1"><a class="header-anchor" href="#parameters-22"><span>Parameters</span></a></h4><h5 id="path-8" tabindex="-1"><a class="header-anchor" href="#path-8"><span>path</span></a></h5><p>The route path.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="handlerordefinition-6" tabindex="-1"><a class="header-anchor" href="#handlerordefinition-6"><span>handlerOrDefinition</span></a></h5><p>The route handler or functional definition.</p>`,14)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalRouteDefinition.html"},{default:p(()=>n[160]||(n[160]=[e("code",null,"FunctionalRouteDefinition",-1)])),_:1,__:[160]}),n[162]||(n[162]=a("<")),n[163]||(n[163]=e("code",null,"IncomingEventType",-1)),n[164]||(n[164]=a(", ")),n[165]||(n[165]=e("code",null,"OutgoingResponseType",-1)),n[166]||(n[166]=a("> | ")),t(s,{to:"/api/router/declarations/type-aliases/FunctionalEventHandler.html"},{default:p(()=>n[161]||(n[161]=[e("code",null,"FunctionalEventHandler",-1)])),_:1,__:[161]}),n[167]||(n[167]=a("<")),n[168]||(n[168]=e("code",null,"IncomingEventType",-1)),n[169]||(n[169]=a(", ")),n[170]||(n[170]=e("code",null,"OutgoingResponseType",-1)),n[171]||(n[171]=a(">"))]),n[237]||(n[237]=o(`<h4 id="returns-28" tabindex="-1"><a class="header-anchor" href="#returns-28"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="post" tabindex="-1"><a class="header-anchor" href="#post"><span>post()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">post</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> handlerOrDefinition<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers a route that supports the <code>POST</code> method.</p><h4 id="parameters-23" tabindex="-1"><a class="header-anchor" href="#parameters-23"><span>Parameters</span></a></h4><h5 id="path-9" tabindex="-1"><a class="header-anchor" href="#path-9"><span>path</span></a></h5><p>The route path.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="handlerordefinition-7" tabindex="-1"><a class="header-anchor" href="#handlerordefinition-7"><span>handlerOrDefinition</span></a></h5><p>The route handler or functional definition.</p>`,13)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalRouteDefinition.html"},{default:p(()=>n[172]||(n[172]=[e("code",null,"FunctionalRouteDefinition",-1)])),_:1,__:[172]}),n[174]||(n[174]=a("<")),n[175]||(n[175]=e("code",null,"IncomingEventType",-1)),n[176]||(n[176]=a(", ")),n[177]||(n[177]=e("code",null,"OutgoingResponseType",-1)),n[178]||(n[178]=a("> | ")),t(s,{to:"/api/router/declarations/type-aliases/FunctionalEventHandler.html"},{default:p(()=>n[173]||(n[173]=[e("code",null,"FunctionalEventHandler",-1)])),_:1,__:[173]}),n[179]||(n[179]=a("<")),n[180]||(n[180]=e("code",null,"IncomingEventType",-1)),n[181]||(n[181]=a(", ")),n[182]||(n[182]=e("code",null,"OutgoingResponseType",-1)),n[183]||(n[183]=a(">"))]),n[238]||(n[238]=o(`<h4 id="returns-29" tabindex="-1"><a class="header-anchor" href="#returns-29"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="put" tabindex="-1"><a class="header-anchor" href="#put"><span>put()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">put</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> handlerOrDefinition<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers a route that supports the <code>PUT</code> method.</p><h4 id="parameters-24" tabindex="-1"><a class="header-anchor" href="#parameters-24"><span>Parameters</span></a></h4><h5 id="path-10" tabindex="-1"><a class="header-anchor" href="#path-10"><span>path</span></a></h5><p>The route path.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="handlerordefinition-8" tabindex="-1"><a class="header-anchor" href="#handlerordefinition-8"><span>handlerOrDefinition</span></a></h5><p>The route handler or functional definition.</p>`,13)),e("p",null,[t(s,{to:"/api/router/declarations/type-aliases/FunctionalRouteDefinition.html"},{default:p(()=>n[184]||(n[184]=[e("code",null,"FunctionalRouteDefinition",-1)])),_:1,__:[184]}),n[186]||(n[186]=a("<")),n[187]||(n[187]=e("code",null,"IncomingEventType",-1)),n[188]||(n[188]=a(", ")),n[189]||(n[189]=e("code",null,"OutgoingResponseType",-1)),n[190]||(n[190]=a("> | ")),t(s,{to:"/api/router/declarations/type-aliases/FunctionalEventHandler.html"},{default:p(()=>n[185]||(n[185]=[e("code",null,"FunctionalEventHandler",-1)])),_:1,__:[185]}),n[191]||(n[191]=a("<")),n[192]||(n[192]=e("code",null,"IncomingEventType",-1)),n[193]||(n[193]=a(", ")),n[194]||(n[194]=e("code",null,"OutgoingResponseType",-1)),n[195]||(n[195]=a(">"))]),n[239]||(n[239]=o(`<h4 id="returns-30" tabindex="-1"><a class="header-anchor" href="#returns-30"><span>Returns</span></a></h4><p><code>this</code></p><p>The router instance for chaining.</p><hr><h3 id="respondwithroutename" tabindex="-1"><a class="header-anchor" href="#respondwithroutename"><span>respondWithRouteName()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">respondWithRouteName</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Dispatches an event to a specific route by its name.</p><h4 id="parameters-25" tabindex="-1"><a class="header-anchor" href="#parameters-25"><span>Parameters</span></a></h4><h5 id="event-2" tabindex="-1"><a class="header-anchor" href="#event-2"><span>event</span></a></h5><p><code>IncomingEventType</code></p><p>The incoming event to process.</p><h5 id="name-3" tabindex="-1"><a class="header-anchor" href="#name-3"><span>name</span></a></h5><p><code>string</code></p><p>The name of the route to execute.</p><h4 id="returns-31" tabindex="-1"><a class="header-anchor" href="#returns-31"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>OutgoingResponseType</code>&gt;</p><p>A promise resolving to the outgoing response after executing the specified route.</p><h4 id="throws-3" tabindex="-1"><a class="header-anchor" href="#throws-3"><span>Throws</span></a></h4><p>If no route is found with the given name.</p><hr><h3 id="setroutes" tabindex="-1"><a class="header-anchor" href="#setroutes"><span>setRoutes()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">setRoutes</span><span class="token punctuation">(</span>routes<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Sets the routes for the router using a <code>RouteCollection</code>.</p><h4 id="parameters-26" tabindex="-1"><a class="header-anchor" href="#parameters-26"><span>Parameters</span></a></h4><h5 id="routes" tabindex="-1"><a class="header-anchor" href="#routes"><span>routes</span></a></h5>`,25)),e("p",null,[t(s,{to:"/api/router/RouteCollection/classes/RouteCollection.html"},{default:p(()=>n[196]||(n[196]=[e("code",null,"RouteCollection",-1)])),_:1,__:[196]}),n[197]||(n[197]=a("<")),n[198]||(n[198]=e("code",null,"IncomingEventType",-1)),n[199]||(n[199]=a(", ")),n[200]||(n[200]=e("code",null,"OutgoingResponseType",-1)),n[201]||(n[201]=a(">"))]),n[240]||(n[240]=o(`<p>The <code>RouteCollection</code> instance containing routes to set.</p><h4 id="returns-32" tabindex="-1"><a class="header-anchor" href="#returns-32"><span>Returns</span></a></h4><p><code>this</code></p><p>The current <code>Router</code> instance.</p><h4 id="throws-4" tabindex="-1"><a class="header-anchor" href="#throws-4"><span>Throws</span></a></h4><p>If the provided parameter is not an instance of <code>RouteCollection</code>.</p><hr><h3 id="use" tabindex="-1"><a class="header-anchor" href="#use"><span>use()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">use</span><span class="token punctuation">(</span>middleware<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Adds global middleware to the router.</p><h4 id="parameters-27" tabindex="-1"><a class="header-anchor" href="#parameters-27"><span>Parameters</span></a></h4><h5 id="middleware" tabindex="-1"><a class="header-anchor" href="#middleware"><span>middleware</span></a></h5><p>A single middleware or an array of middleware to add.</p><p><code>MixedPipe</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt; | <code>MixedPipe</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;[]</p><h4 id="returns-33" tabindex="-1"><a class="header-anchor" href="#returns-33"><span>Returns</span></a></h4><p><code>this</code></p><p>The current <code>Router</code> instance.</p><hr><h3 id="useon" tabindex="-1"><a class="header-anchor" href="#useon"><span>useOn()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">useOn</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> middleware<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Attaches middleware to specific routes by their name.</p><h4 id="parameters-28" tabindex="-1"><a class="header-anchor" href="#parameters-28"><span>Parameters</span></a></h4><h5 id="name-4" tabindex="-1"><a class="header-anchor" href="#name-4"><span>name</span></a></h5><p>A single route name or an array of route names to attach the middleware to.</p><p><code>string</code> | <code>string</code>[]</p><h5 id="middleware-1" tabindex="-1"><a class="header-anchor" href="#middleware-1"><span>middleware</span></a></h5><p>A single middleware or an array of middleware to attach.</p><p><code>MixedPipe</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt; | <code>MixedPipe</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;[]</p><h4 id="returns-34" tabindex="-1"><a class="header-anchor" href="#returns-34"><span>Returns</span></a></h4><p><code>this</code></p><p>The current <code>Router</code> instance.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token generic-function"><span class="token function">create</span><span class="token generic class-name"><span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> Router<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Factory method for creating a router instance.</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h4><h5 id="incomingeventtype-1" tabindex="-1"><a class="header-anchor" href="#incomingeventtype-1"><span>IncomingEventType</span></a></h5>`,37)),e("p",null,[n[204]||(n[204]=e("code",null,"IncomingEventType",-1)),n[205]||(n[205]=a()),n[206]||(n[206]=e("em",null,"extends",-1)),n[207]||(n[207]=a()),t(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>n[202]||(n[202]=[e("code",null,"IIncomingEvent",-1)])),_:1,__:[202]}),n[208]||(n[208]=a(" = ")),t(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>n[203]||(n[203]=[e("code",null,"IIncomingEvent",-1)])),_:1,__:[203]})]),n[241]||(n[241]=o('<h5 id="outgoingresponsetype-1" tabindex="-1"><a class="header-anchor" href="#outgoingresponsetype-1"><span>OutgoingResponseType</span></a></h5><p><code>OutgoingResponseType</code> = <code>unknown</code></p><h4 id="parameters-29" tabindex="-1"><a class="header-anchor" href="#parameters-29"><span>Parameters</span></a></h4><h5 id="options-3" tabindex="-1"><a class="header-anchor" href="#options-3"><span>options</span></a></h5>',4)),e("p",null,[t(s,{to:"/api/router/declarations/interfaces/RouterOptions.html"},{default:p(()=>n[209]||(n[209]=[e("code",null,"RouterOptions",-1)])),_:1,__:[209]}),n[210]||(n[210]=a("<")),n[211]||(n[211]=e("code",null,"IncomingEventType",-1)),n[212]||(n[212]=a(", ")),n[213]||(n[213]=e("code",null,"OutgoingResponseType",-1)),n[214]||(n[214]=a(">"))]),n[242]||(n[242]=o('<p>Configuration options for the router.</p><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35"><span>Returns</span></a></h4><p><code>Router</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;</p><p>A new <code>Router</code> instance.</p>',4))])}const f=r(u,[["render",c]]),v=JSON.parse('{"path":"/api/router/Router/classes/Router.html","title":"Class: Router<IncomingEventType, OutgoingResponseType>","lang":"en-US","frontmatter":{"description":"Class: Router<IncomingEventType, OutgoingResponseType> Represents a configurable router for managing HTTP routes and handling incoming events. Type Parameters IncomingEventType ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: Router<IncomingEventType, OutgoingResponseType>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/router/Router/classes/Router.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: Router<IncomingEventType, OutgoingResponseType>"}],["meta",{"property":"og:description","content":"Class: Router<IncomingEventType, OutgoingResponseType> Represents a configurable router for managing HTTP routes and handling incoming events. Type Parameters IncomingEventType ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":5.25,"words":1574},"filePathRelative":"api/router/Router/classes/Router.md","autoDesc":true}');export{f as comp,v as data};
