import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as n,o as s}from"./app-CrbMk51G.js";const o={};function r(p,e){return s(),t("div",null,e[0]||(e[0]=[n(`<h1 id="function-ismetamodule" tabindex="-1"><a class="header-anchor" href="#function-ismetamodule"><span>Function: isMetaModule()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">isMetaModule</span><span class="token generic class-name"><span class="token operator">&lt;</span>MetaModuleType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">:</span> value <span class="token keyword">is</span> Record<span class="token operator">&lt;</span><span class="token string">&quot;module&quot;</span><span class="token punctuation">,</span> MetaModuleType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the provided value is a meta module.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="metamoduletype" tabindex="-1"><a class="header-anchor" href="#metamoduletype"><span>MetaModuleType</span></a></h3><p><code>MetaModuleType</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value</span></a></h3><p><code>any</code></p><p>The value to check.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>value is Record&lt;&quot;module&quot;, MetaModuleType&gt;</code></p><p><code>true</code> if the value is a meta module, otherwise <code>false</code>.</p>`,13)]))}const l=a(o,[["render",r]]),d=JSON.parse('{"path":"/api/core/utils/functions/isMetaModule.html","title":"Function: isMetaModule()","lang":"en-US","frontmatter":{"description":"Function: isMetaModule() Check if the provided value is a meta module. Type Parameters MetaModuleType MetaModuleType Parameters value any The value to check. Returns value is Re...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: isMetaModule()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/utils/functions/isMetaModule.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: isMetaModule()"}],["meta",{"property":"og:description","content":"Function: isMetaModule() Check if the provided value is a meta module. Type Parameters MetaModuleType MetaModuleType Parameters value any The value to check. Returns value is Re..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.16,"words":49},"filePathRelative":"api/core/utils/functions/isMetaModule.md","autoDesc":true}');export{l as comp,d as data};
