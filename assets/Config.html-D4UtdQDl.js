import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as n,a as e,e as t,w as r,d as c,r as i,o as l}from"./app-CrbMk51G.js";const d={};function h(u,a){const s=i("RouteLink");return l(),o("div",null,[a[4]||(a[4]=n('<h1 id="class-config-tobject" tabindex="-1"><a class="header-anchor" href="#class-config-tobject"><span>Class: Config&lt;TObject&gt;</span></a></h1><p>Class representing a Config.</p><h2 id="author" tabindex="-1"><a class="header-anchor" href="#author"><span>Author</span></a></h2><p>Mr. Stone <a href="mailto:evensstone@gmail.com" target="_blank" rel="noopener noreferrer">evensstone@gmail.com</a></p><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends"><span>Extends</span></a></h2>',5)),e("ul",null,[e("li",null,[t(s,{to:"/api/config/Proxiable/classes/Proxiable.html"},{default:r(()=>a[0]||(a[0]=[e("code",null,"Proxiable",-1)])),_:1,__:[0]})])]),a[5]||(a[5]=n(`<h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="tobject" tabindex="-1"><a class="header-anchor" href="#tobject"><span>TObject</span></a></h3><p><code>TObject</code> <em>extends</em> <code>object</code> = <code>Record</code>&lt;<code>PropertyKey</code>, <code>unknown</code>&gt;</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token keyword">new</span> <span class="token class-name">Config<span class="token operator">&lt;</span>TObject<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>items<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> Config<span class="token operator">&lt;</span>TObject<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create a Config.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="items" tabindex="-1"><a class="header-anchor" href="#items"><span>items?</span></a></h5><p><code>any</code></p><p>Initial configuration items.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Config</code>&lt;<code>TObject</code>&gt;</p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides"><span>Overrides</span></a></h4>`,14)),e("p",null,[t(s,{to:"/api/config/Proxiable/classes/Proxiable.html"},{default:r(()=>a[1]||(a[1]=[e("code",null,"Proxiable",-1)])),_:1,__:[1]}),a[3]||(a[3]=c(".")),t(s,{to:"/api/config/Proxiable/classes/Proxiable.html#constructor"},{default:r(()=>a[2]||(a[2]=[e("code",null,"constructor",-1)])),_:1,__:[2]})]),a[6]||(a[6]=n(`<h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add"><span>add()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">add</span><span class="token generic class-name"><span class="token operator">&lt;</span>TValue<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Add a value to an existing configuration key.</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h4><h5 id="tvalue" tabindex="-1"><a class="header-anchor" href="#tvalue"><span>TValue</span></a></h5><p><code>TValue</code></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="key" tabindex="-1"><a class="header-anchor" href="#key"><span>key</span></a></h5><p><code>PropertyKey</code></p><p>The key or keys to set as defaults.</p><h5 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value</span></a></h5><p><code>TValue</code></p><p>The value to set as default.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Config instance.</p><hr><h3 id="all" tabindex="-1"><a class="header-anchor" href="#all"><span>all()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> TObject<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get all of the configuration items as a literal object.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>TObject</code></p><p>All configuration items.</p><hr><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear"><span>clear()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Clear all of the configuration items.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Config instance.</p><hr><h3 id="firstmatch" tabindex="-1"><a class="header-anchor" href="#firstmatch"><span>firstMatch()</span></a></h3><p>Get the first match configuration value.</p><h4 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h4><p>An array of keys to check.</p><h4 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h4><p>The fallback value if no key matches.</p><h4 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">firstMatch</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> TReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the first match configuration value.</p><h5 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h5><h6 id="treturn" tabindex="-1"><a class="header-anchor" href="#treturn"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h5><h6 id="keys" tabindex="-1"><a class="header-anchor" href="#keys"><span>keys</span></a></h6><p><code>PropertyKey</code>[]</p><p>An array of keys to check.</p><h5 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h5><p><code>undefined</code> | <code>TReturn</code></p><p>The first matching configuration value.</p><h5 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h5><p>An array of keys to check.</p><h5 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h5><p>The fallback value if no key matches.</p><h4 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">firstMatch</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> fallback<span class="token punctuation">)</span><span class="token operator">:</span> TReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the first match configuration value.</p><h5 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3"><span>Type Parameters</span></a></h5><h6 id="treturn-1" tabindex="-1"><a class="header-anchor" href="#treturn-1"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h5><h6 id="keys-1" tabindex="-1"><a class="header-anchor" href="#keys-1"><span>keys</span></a></h6><p><code>PropertyKey</code>[]</p><p>An array of keys to check.</p><h6 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>fallback</span></a></h6><p><code>TReturn</code></p><p>The fallback value if no key matches.</p><h5 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h5><p><code>TReturn</code></p><p>The first matching configuration value.</p><h5 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h5><p>An array of keys to check.</p><h5 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h5><p>The fallback value if no key matches.</p><hr><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get"><span>get()</span></a></h3><p>Get the specified configuration value.</p><h4 id="param-6" tabindex="-1"><a class="header-anchor" href="#param-6"><span>Param</span></a></h4><p>The key or keys to retrieve from the configuration.</p><h4 id="param-7" tabindex="-1"><a class="header-anchor" href="#param-7"><span>Param</span></a></h4><p>The fallback value if the key does not exist.</p><h4 id="call-signature-2" tabindex="-1"><a class="header-anchor" href="#call-signature-2"><span>Call Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> TReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the specified configuration value.</p><h5 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4"><span>Type Parameters</span></a></h5><h6 id="treturn-2" tabindex="-1"><a class="header-anchor" href="#treturn-2"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h5><h6 id="key-1" tabindex="-1"><a class="header-anchor" href="#key-1"><span>key</span></a></h6><p><code>PropertyKey</code></p><p>The key or keys to retrieve from the configuration.</p><h5 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h5><p><code>undefined</code> | <code>TReturn</code></p><p>The configuration value.</p><h5 id="param-8" tabindex="-1"><a class="header-anchor" href="#param-8"><span>Param</span></a></h5><p>The key or keys to retrieve from the configuration.</p><h5 id="param-9" tabindex="-1"><a class="header-anchor" href="#param-9"><span>Param</span></a></h5><p>The fallback value if the key does not exist.</p><h4 id="call-signature-3" tabindex="-1"><a class="header-anchor" href="#call-signature-3"><span>Call Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> fallback<span class="token punctuation">)</span><span class="token operator">:</span> TReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the specified configuration value.</p><h5 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5"><span>Type Parameters</span></a></h5><h6 id="treturn-3" tabindex="-1"><a class="header-anchor" href="#treturn-3"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h5><h6 id="key-2" tabindex="-1"><a class="header-anchor" href="#key-2"><span>key</span></a></h6><p><code>PropertyKey</code></p><p>The key or keys to retrieve from the configuration.</p><h6 id="fallback-1" tabindex="-1"><a class="header-anchor" href="#fallback-1"><span>fallback</span></a></h6><p><code>TReturn</code></p><p>The fallback value if the key does not exist.</p><h5 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h5><p><code>TReturn</code></p><p>The configuration value.</p><h5 id="param-10" tabindex="-1"><a class="header-anchor" href="#param-10"><span>Param</span></a></h5><p>The key or keys to retrieve from the configuration.</p><h5 id="param-11" tabindex="-1"><a class="header-anchor" href="#param-11"><span>Param</span></a></h5><p>The fallback value if the key does not exist.</p><hr><h3 id="getmany" tabindex="-1"><a class="header-anchor" href="#getmany"><span>getMany()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">getMany</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token operator">:</span> TReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get many configuration values.</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6"><span>Type Parameters</span></a></h4><h5 id="treturn-4" tabindex="-1"><a class="header-anchor" href="#treturn-4"><span>TReturn</span></a></h5><p><code>TReturn</code> = <code>Record</code>&lt;<code>PropertyKey</code>, <code>unknown</code>&gt;</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="keys-2" tabindex="-1"><a class="header-anchor" href="#keys-2"><span>keys</span></a></h5><p>The keys to retrieve from the configuration.</p><p><code>Record</code>&lt;<code>PropertyKey</code>, <code>unknown</code>&gt; | <code>PropertyKey</code>[]</p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4><p><code>TReturn</code></p><p>An object containing the requested configuration values.</p><hr><h3 id="has" tabindex="-1"><a class="header-anchor" href="#has"><span>has()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">has</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Determine if the given configuration value exists.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h4><h5 id="key-3" tabindex="-1"><a class="header-anchor" href="#key-3"><span>key</span></a></h5><p>The key or keys to check.</p><p><code>PropertyKey</code> | <code>PropertyKey</code>[]</p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the key exists, false otherwise.</p><hr><h3 id="is" tabindex="-1"><a class="header-anchor" href="#is"><span>is()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">is</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the given configuration value is equal to the specified value.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h4><h5 id="key-4" tabindex="-1"><a class="header-anchor" href="#key-4"><span>key</span></a></h5><p><code>PropertyKey</code></p><p>The key to check.</p><h5 id="value-1" tabindex="-1"><a class="header-anchor" href="#value-1"><span>value</span></a></h5><p><code>unknown</code></p><p>The value to compare against.</p><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the key&#39;s value is equal to the specified value, false otherwise.</p><hr><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set"><span>set()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">set</span><span class="token generic class-name"><span class="token operator">&lt;</span>TValue<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Set a given configuration value.</p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7"><span>Type Parameters</span></a></h4><h5 id="tvalue-1" tabindex="-1"><a class="header-anchor" href="#tvalue-1"><span>TValue</span></a></h5><p><code>TValue</code></p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h4><h5 id="key-5" tabindex="-1"><a class="header-anchor" href="#key-5"><span>key</span></a></h5><p>The key or keys to set in the configuration.</p><p><code>PropertyKey</code> | <code>PropertyKey</code>[] | <code>Record</code>&lt;<code>string</code>, <code>TValue</code>&gt; | <code>Record</code>&lt;<code>PropertyKey</code>, <code>TValue</code>&gt;</p><h5 id="value-2" tabindex="-1"><a class="header-anchor" href="#value-2"><span>value?</span></a></h5><p><code>TValue</code></p><p>The value to set.</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Config instance.</p><hr><h3 id="setif" tabindex="-1"><a class="header-anchor" href="#setif"><span>setIf()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">setIf</span><span class="token generic class-name"><span class="token operator">&lt;</span>TValue<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Set a given configuration value if it does not exist.</p><h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8"><span>Type Parameters</span></a></h4><h5 id="tvalue-2" tabindex="-1"><a class="header-anchor" href="#tvalue-2"><span>TValue</span></a></h5><p><code>TValue</code></p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10"><span>Parameters</span></a></h4><h5 id="key-6" tabindex="-1"><a class="header-anchor" href="#key-6"><span>key</span></a></h5><p>The key or keys to set in the configuration.</p><p><code>PropertyKey</code> | <code>PropertyKey</code>[]</p><h5 id="value-3" tabindex="-1"><a class="header-anchor" href="#value-3"><span>value?</span></a></h5><p><code>TValue</code></p><p>The value to set.</p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Config instance.</p><hr><h3 id="setitems" tabindex="-1"><a class="header-anchor" href="#setitems"><span>setItems()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">setItems</span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Set all of the configuration items.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11"><span>Parameters</span></a></h4><h5 id="items-1" tabindex="-1"><a class="header-anchor" href="#items-1"><span>items</span></a></h5><p><code>TObject</code></p><p>The configuration items.</p><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Config instance.</p><hr><h3 id="tojson" tabindex="-1"><a class="header-anchor" href="#tojson"><span>toJson()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">toJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get all of the configuration items as a JSON string.</p><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14"><span>Returns</span></a></h4><p><code>string</code></p><p>All configuration items as a JSON string.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token generic-function"><span class="token function">create</span><span class="token generic class-name"><span class="token operator">&lt;</span>TObject<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>items<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> Config<span class="token operator">&lt;</span>TObject<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create a Config.</p><h4 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9"><span>Type Parameters</span></a></h4><h5 id="tobject-1" tabindex="-1"><a class="header-anchor" href="#tobject-1"><span>TObject</span></a></h5><p><code>TObject</code> <em>extends</em> <code>object</code> = <code>Record</code>&lt;<code>PropertyKey</code>, <code>unknown</code>&gt;</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12"><span>Parameters</span></a></h4><h5 id="items-2" tabindex="-1"><a class="header-anchor" href="#items-2"><span>items?</span></a></h5><p><code>TObject</code></p><p>Initial configuration items.</p><h4 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15"><span>Returns</span></a></h4><p><code>Config</code>&lt;<code>TObject</code>&gt;</p><p>A new Config instance.</p><hr><h3 id="fromjson" tabindex="-1"><a class="header-anchor" href="#fromjson"><span>fromJson()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token generic-function"><span class="token function">fromJson</span><span class="token generic class-name"><span class="token operator">&lt;</span>TObject<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>items<span class="token punctuation">)</span><span class="token operator">:</span> Config<span class="token operator">&lt;</span>TObject<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create a Config from a JSON string.</p><h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10"><span>Type Parameters</span></a></h4><h5 id="tobject-2" tabindex="-1"><a class="header-anchor" href="#tobject-2"><span>TObject</span></a></h5><p><code>TObject</code> <em>extends</em> <code>object</code> = <code>Record</code>&lt;<code>PropertyKey</code>, <code>unknown</code>&gt;</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13"><span>Parameters</span></a></h4><h5 id="items-3" tabindex="-1"><a class="header-anchor" href="#items-3"><span>items</span></a></h5><p><code>string</code></p><p>The JSON string to create the Config from.</p><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16"><span>Returns</span></a></h4><p><code>Config</code>&lt;<code>TObject</code>&gt;</p><p>A new Config instance.</p>`,238))])}const k=p(d,[["render",h]]),g=JSON.parse('{"path":"/api/config/Config/classes/Config.html","title":"Class: Config<TObject>","lang":"en-US","frontmatter":{"description":"Class: Config<TObject> Class representing a Config. Author Mr. Stone evensstone@gmail.com Extends Type Parameters TObject TObject extends object = Record<PropertyKey, unknown> C...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: Config<TObject>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/config/Config/classes/Config.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: Config<TObject>"}],["meta",{"property":"og:description","content":"Class: Config<TObject> Class representing a Config. Author Mr. Stone evensstone@gmail.com Extends Type Parameters TObject TObject extends object = Record<PropertyKey, unknown> C..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":2.48,"words":744},"filePathRelative":"api/config/Config/classes/Config.md","autoDesc":true}');export{k as comp,g as data};
