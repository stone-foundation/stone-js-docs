import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as n,a as e,e as t,w as r,r as p,o as c}from"./app-CrbMk51G.js";const l={};function d(u,s){const a=p("RouteLink");return c(),o("div",null,[s[3]||(s[3]=n('<h1 id="class-outgoingbrowserresponse" tabindex="-1"><a class="header-anchor" href="#class-outgoingbrowserresponse"><span>Class: OutgoingBrowserResponse</span></a></h1><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends"><span>Extends</span></a></h2><ul><li><code>OutgoingResponse</code></li></ul><h2 id="extended-by" tabindex="-1"><a class="header-anchor" href="#extended-by"><span>Extended by</span></a></h2>',4)),e("ul",null,[e("li",null,[t(a,{to:"/api/browser-core/RedirectBrowserResponse/classes/RedirectBrowserResponse.html"},{default:r(()=>s[0]||(s[0]=[e("code",null,"RedirectBrowserResponse",-1)])),_:1,__:[0]})])]),s[4]||(s[4]=n(`<h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">new</span> <span class="token class-name">OutgoingBrowserResponse</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> OutgoingBrowserResponse<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Constructor for OutgoingBrowserResponse. Initializes headers and cookies based on the provided options.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5>`,6)),e("p",null,[t(a,{to:"/api/browser-core/OutgoingBrowserResponse/interfaces/OutgoingBrowserResponseOptions.html"},{default:r(()=>s[1]||(s[1]=[e("code",null,"OutgoingBrowserResponseOptions",-1)])),_:1,__:[1]})]),s[5]||(s[5]=n(`<p>Options for the outgoing browser response.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>OutgoingBrowserResponse</code></p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides"><span>Overrides</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">OutgoingResponse<span class="token punctuation">.</span>constructor</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="outgoing-browser-response" tabindex="-1"><a class="header-anchor" href="#outgoing-browser-response"><span>OUTGOING_BROWSER_RESPONSE</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token constant">OUTGOING_BROWSER_RESPONSE</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&#39;stonejs@outgoing_browser_response&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="is1xx" tabindex="-1"><a class="header-anchor" href="#is1xx"><span>is1xx()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">is1xx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code represents an informational response (1xx).</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is informational, otherwise false.</p><hr><h3 id="is2xx" tabindex="-1"><a class="header-anchor" href="#is2xx"><span>is2xx()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">is2xx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code represents a successful response (2xx).</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is successful, otherwise false.</p><hr><h3 id="is3xx" tabindex="-1"><a class="header-anchor" href="#is3xx"><span>is3xx()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">is3xx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code represents a redirection response (3xx).</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is a redirection, otherwise false.</p><hr><h3 id="is4xx" tabindex="-1"><a class="header-anchor" href="#is4xx"><span>is4xx()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">is4xx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code represents a client error response (4xx).</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is a client error, otherwise false.</p><hr><h3 id="is5xx" tabindex="-1"><a class="header-anchor" href="#is5xx"><span>is5xx()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">is5xx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code represents a server error response (5xx).</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is a server error, otherwise false.</p><hr><h3 id="iserror" tabindex="-1"><a class="header-anchor" href="#iserror"><span>isError()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code is an error (i.e., 4xx or 5xx).</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is an error, otherwise false.</p><hr><h3 id="isforbidden" tabindex="-1"><a class="header-anchor" href="#isforbidden"><span>isForbidden()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isForbidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code is 403 (Forbidden).</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is 403, otherwise false.</p><hr><h3 id="isinstatusrange" tabindex="-1"><a class="header-anchor" href="#isinstatusrange"><span>isInStatusRange()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isInStatusRange</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code falls within the specified range.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="start" tabindex="-1"><a class="header-anchor" href="#start"><span>start</span></a></h5><p><code>number</code></p><p>The starting value of the range (inclusive).</p><h5 id="end" tabindex="-1"><a class="header-anchor" href="#end"><span>end</span></a></h5><p><code>number</code></p><p>The ending value of the range (exclusive).</p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is within the specified range, otherwise false.</p><hr><h3 id="isinvalid" tabindex="-1"><a class="header-anchor" href="#isinvalid"><span>isInvalid()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isInvalid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code is invalid.</p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is invalid, otherwise false.</p><hr><h3 id="isnoterror" tabindex="-1"><a class="header-anchor" href="#isnoterror"><span>isNotError()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isNotError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code is not an error (i.e., not 4xx or 5xx).</p><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is not an error, otherwise false.</p><hr><h3 id="isnotfound" tabindex="-1"><a class="header-anchor" href="#isnotfound"><span>isNotFound()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isNotFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code is 404 (Not Found).</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is 404, otherwise false.</p><hr><h3 id="isok" tabindex="-1"><a class="header-anchor" href="#isok"><span>isOk()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code is 200 (OK).</p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is 200, otherwise false.</p><hr><h3 id="isunauthorized" tabindex="-1"><a class="header-anchor" href="#isunauthorized"><span>isUnauthorized()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isUnauthorized</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if the status code is 401 (Unauthorized).</p><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is 401, otherwise false.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token function">create</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> OutgoingBrowserResponse<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create an instance of OutgoingBrowserResponse.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1"><span>options</span></a></h5>`,112)),e("p",null,[t(a,{to:"/api/browser-core/OutgoingBrowserResponse/interfaces/OutgoingBrowserResponseOptions.html"},{default:r(()=>s[2]||(s[2]=[e("code",null,"OutgoingBrowserResponseOptions",-1)])),_:1,__:[2]})]),s[6]||(s[6]=n(`<p>Options for the outgoing browser response.</p><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14"><span>Returns</span></a></h4><p><code>OutgoingBrowserResponse</code></p><p>A new instance of OutgoingBrowserResponse.</p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1"><span>Overrides</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">OutgoingResponse<span class="token punctuation">.</span>create</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,6))])}const b=i(l,[["render",d]]),m=JSON.parse('{"path":"/api/browser-core/OutgoingBrowserResponse/classes/OutgoingBrowserResponse.html","title":"Class: OutgoingBrowserResponse","lang":"en-US","frontmatter":{"description":"Class: OutgoingBrowserResponse Extends OutgoingResponse Extended by Constructors Constructor Constructor for OutgoingBrowserResponse. Initializes headers and cookies based on th...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: OutgoingBrowserResponse\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/browser-core/OutgoingBrowserResponse/classes/OutgoingBrowserResponse.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: OutgoingBrowserResponse"}],["meta",{"property":"og:description","content":"Class: OutgoingBrowserResponse Extends OutgoingResponse Extended by Constructors Constructor Constructor for OutgoingBrowserResponse. Initializes headers and cookies based on th..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":1.5,"words":451},"filePathRelative":"api/browser-core/OutgoingBrowserResponse/classes/OutgoingBrowserResponse.md","autoDesc":true}');export{b as comp,m as data};
