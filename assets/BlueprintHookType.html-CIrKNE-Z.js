import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as r,a as n,d as t,e as s,w as p,r as l,o as u}from"./app-CsZBgwJX.js";const d={};function c(y,e){const a=l("RouteLink");return u(),i("div",null,[e[19]||(e[19]=r('<h1 id="interface-blueprinthooktype-blueprinttype-contexttype" tabindex="-1"><a class="header-anchor" href="#interface-blueprinthooktype-blueprinttype-contexttype"><span>Interface: BlueprintHookType&lt;BlueprintType, ContextType&gt;</span></a></h1><p>Blueprint Hook Type.</p><p>Represents a hook that can either be synchronous or asynchronous.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="blueprinttype" tabindex="-1"><a class="header-anchor" href="#blueprinttype"><span>BlueprintType</span></a></h3>',5)),n("p",null,[e[2]||(e[2]=n("code",null,"BlueprintType",-1)),e[3]||(e[3]=t()),e[4]||(e[4]=n("em",null,"extends",-1)),e[5]||(e[5]=t()),s(a,{to:"/api/core/declarations/type-aliases/IBlueprint.html"},{default:p(()=>e[0]||(e[0]=[n("code",null,"IBlueprint",-1)])),_:1,__:[0]}),e[6]||(e[6]=t(" = ")),s(a,{to:"/api/core/declarations/type-aliases/IBlueprint.html"},{default:p(()=>e[1]||(e[1]=[n("code",null,"IBlueprint",-1)])),_:1,__:[1]})]),e[20]||(e[20]=n("h3",{id:"contexttype",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#contexttype"},[n("span",null,"ContextType")])],-1)),n("p",null,[e[9]||(e[9]=n("code",null,"ContextType",-1)),e[10]||(e[10]=t()),e[11]||(e[11]=n("em",null,"extends",-1)),e[12]||(e[12]=t()),s(a,{to:"/api/core/declarations/interfaces/BlueprintContext.html"},{default:p(()=>e[7]||(e[7]=[n("code",null,"BlueprintContext",-1)])),_:1,__:[7]}),e[13]||(e[13]=t("<")),e[14]||(e[14]=n("code",null,"BlueprintType",-1)),e[15]||(e[15]=t("> = ")),s(a,{to:"/api/core/declarations/interfaces/BlueprintContext.html"},{default:p(()=>e[8]||(e[8]=[n("code",null,"BlueprintContext",-1)])),_:1,__:[8]}),e[16]||(e[16]=t("<")),e[17]||(e[17]=n("code",null,"BlueprintType",-1)),e[18]||(e[18]=t(">"))]),e[21]||(e[21]=r(`<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="onblueprintmiddlewareprocessed" tabindex="-1"><a class="header-anchor" href="#onblueprintmiddlewareprocessed"><span>onBlueprintMiddlewareProcessed?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional onBlueprintMiddlewareProcessed<span class="token operator">:</span> PipelineHookListener<span class="token operator">&lt;</span>ContextType<span class="token punctuation">,</span> BlueprintType<span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="onblueprintprepared" tabindex="-1"><a class="header-anchor" href="#onblueprintprepared"><span>onBlueprintPrepared?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional onBlueprintPrepared<span class="token operator">:</span> BlueprintHookListener<span class="token operator">&lt;</span>BlueprintType<span class="token punctuation">,</span> ContextType<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="onpreparingblueprint" tabindex="-1"><a class="header-anchor" href="#onpreparingblueprint"><span>onPreparingBlueprint?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional onPreparingBlueprint<span class="token operator">:</span> BlueprintHookListener<span class="token operator">&lt;</span>BlueprintType<span class="token punctuation">,</span> ContextType<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="onprocessingblueprintmiddleware" tabindex="-1"><a class="header-anchor" href="#onprocessingblueprintmiddleware"><span>onProcessingBlueprintMiddleware?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional onProcessingBlueprintMiddleware<span class="token operator">:</span> PipelineHookListener<span class="token operator">&lt;</span>ContextType<span class="token punctuation">,</span> BlueprintType<span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,12))])}const h=o(d,[["render",c]]),B=JSON.parse('{"path":"/api/core/declarations/interfaces/BlueprintHookType.html","title":"Interface: BlueprintHookType<BlueprintType, ContextType>","lang":"en-US","frontmatter":{"description":"Interface: BlueprintHookType<BlueprintType, ContextType> Blueprint Hook Type. Represents a hook that can either be synchronous or asynchronous. Type Parameters BlueprintType Blu...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: BlueprintHookType<BlueprintType, ContextType>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/declarations/interfaces/BlueprintHookType.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: BlueprintHookType<BlueprintType, ContextType>"}],["meta",{"property":"og:description","content":"Interface: BlueprintHookType<BlueprintType, ContextType> Blueprint Hook Type. Represents a hook that can either be synchronous or asynchronous. Type Parameters BlueprintType Blu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.23,"words":68},"filePathRelative":"api/core/declarations/interfaces/BlueprintHookType.md","autoDesc":true}');export{h as comp,B as data};
