import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as t,b as i,e as n,w as a,d as o,r as c,o as d}from"./app-7vCtLRjQ.js";const l={};function h(u,e){const r=c("RouteLink");return d(),p("div",null,[t("p",null,[n(r,{to:"/api/http-core/"},{default:a(()=>e[0]||(e[0]=[t("strong",null,"HTTP Core Documentation",-1)])),_:1,__:[0]})]),e[5]||(e[5]=t("hr",null,null,-1)),t("p",null,[n(r,{to:"/api/http-core/"},{default:a(()=>e[1]||(e[1]=[o("HTTP Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=o(" / ")),n(r,{to:"/api/http-core/utils/"},{default:a(()=>e[2]||(e[2]=[o("utils")])),_:1,__:[2]}),e[4]||(e[4]=o(" / getProtocol"))]),e[6]||(e[6]=i('<h1 id="function-getprotocol" tabindex="-1"><a class="header-anchor" href="#function-getprotocol"><span>Function: getProtocol()</span></a></h1><blockquote><p><strong>getProtocol</strong>(<code>ip</code>, <code>headers</code>, <code>encrypted</code>, <code>options</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/utils.ts#L105" target="_blank" rel="noopener noreferrer">src/utils.ts:105</a></p><p>Get protocol.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="ip" tabindex="-1"><a class="header-anchor" href="#ip"><span>ip</span></a></h3><p><code>string</code></p><p>The IP address of the request.</p><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>headers</span></a></h3><p><code>IncomingHttpHeaders</code></p><p>The headers from the incoming request.</p><h3 id="encrypted" tabindex="-1"><a class="header-anchor" href="#encrypted"><span>encrypted</span></a></h3><p><code>boolean</code></p><p>Whether the connection is encrypted (HTTPS).</p><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3><p>Options for trusted and untrusted IPs.</p><h4 id="trustedip" tabindex="-1"><a class="header-anchor" href="#trustedip"><span>trustedIp</span></a></h4><p><code>string</code>[]</p><h4 id="untrustedip" tabindex="-1"><a class="header-anchor" href="#untrustedip"><span>untrustedIp</span></a></h4><p><code>string</code>[]</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>string</code></p><p>The protocol (http or https).</p>',23))])}const f=s(l,[["render",h]]),P=JSON.parse('{"path":"/api/http-core/utils/functions/getProtocol.html","title":"Function: getProtocol()","lang":"en-US","frontmatter":{"description":"/ / getProtocol Function: getProtocol() getProtocol(ip, headers, encrypted, options): string Defined in: src/utils.ts:105 Get protocol. Parameters ip string The IP address of th...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: getProtocol()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/http-core/utils/functions/getProtocol.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: getProtocol()"}],["meta",{"property":"og:description","content":"/ / getProtocol Function: getProtocol() getProtocol(ip, headers, encrypted, options): string Defined in: src/utils.ts:105 Get protocol. Parameters ip string The IP address of th..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.25,"words":76},"filePathRelative":"api/http-core/utils/functions/getProtocol.md","autoDesc":true}');export{f as comp,P as data};
