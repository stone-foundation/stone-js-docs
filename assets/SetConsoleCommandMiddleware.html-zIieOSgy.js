import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as a,o}from"./app-CIBZQWs4.js";const s={};function r(d,e){return o(),n("div",null,e[0]||(e[0]=[a(`<h1 id="function-setconsolecommandmiddleware" tabindex="-1"><a class="header-anchor" href="#function-setconsolecommandmiddleware"><span>Function: SetConsoleCommandMiddleware()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token function">SetConsoleCommandMiddleware</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>IBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Middleware to process and register modules as command handlers.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context"><span>context</span></a></h3><p><code>BlueprintContext</code>&lt;<code>IBlueprint</code>, <code>ClassType</code>&gt;</p><p>The configuration context containing the modules and blueprint.</p><h3 id="next" tabindex="-1"><a class="header-anchor" href="#next"><span>next</span></a></h3><p><code>NextMiddleware</code>&lt;<code>BlueprintContext</code>&lt;<code>IBlueprint</code>, <code>ClassType</code>&gt;, <code>IBlueprint</code>&gt;</p><p>The next middleware in the pipeline to call.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>Promise</code>&lt;<code>IBlueprint</code>&gt;</p><p>The updated blueprint or a promise resolving to it.</p>`,13)]))}const l=t(s,[["render",r]]),c=JSON.parse('{"path":"/api/node-cli-adapter/middleware/BlueprintMiddleware/functions/SetConsoleCommandMiddleware.html","title":"Function: SetConsoleCommandMiddleware()","lang":"en-US","frontmatter":{"description":"Function: SetConsoleCommandMiddleware() Middleware to process and register modules as command handlers. Parameters context BlueprintContext<IBlueprint, ClassType> The configurat...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: SetConsoleCommandMiddleware()\\",\\"image\\":[\\"/logo.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/node-cli-adapter/middleware/BlueprintMiddleware/functions/SetConsoleCommandMiddleware.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: SetConsoleCommandMiddleware()"}],["meta",{"property":"og:description","content":"Function: SetConsoleCommandMiddleware() Middleware to process and register modules as command handlers. Parameters context BlueprintContext<IBlueprint, ClassType> The configurat..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.19,"words":57},"filePathRelative":"api/node-cli-adapter/middleware/BlueprintMiddleware/functions/SetConsoleCommandMiddleware.md","autoDesc":true}');export{l as comp,c as data};
