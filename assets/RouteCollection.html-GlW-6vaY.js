import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as p,a as n,d as s,e as t,w as o,r as l,o as d}from"./app-D3YQYQ8j.js";const u={};function c(g,e){const a=l("RouteLink");return d(),i("div",null,[e[67]||(e[67]=p('<h1 id="class-routecollection-incomingeventtype-outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#class-routecollection-incomingeventtype-outgoingresponsetype"><span>Class: RouteCollection&lt;IncomingEventType, OutgoingResponseType&gt;</span></a></h1><p>Manages a collection of <code>Route</code> instances.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="incomingeventtype" tabindex="-1"><a class="header-anchor" href="#incomingeventtype"><span>IncomingEventType</span></a></h3>',4)),n("p",null,[e[2]||(e[2]=n("code",null,"IncomingEventType",-1)),e[3]||(e[3]=s()),e[4]||(e[4]=n("em",null,"extends",-1)),e[5]||(e[5]=s()),t(a,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:o(()=>e[0]||(e[0]=[n("code",null,"IIncomingEvent",-1)])),_:1,__:[0]}),e[6]||(e[6]=s(" = ")),t(a,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:o(()=>e[1]||(e[1]=[n("code",null,"IIncomingEvent",-1)])),_:1,__:[1]})]),e[68]||(e[68]=p(`<p>The type of incoming HTTP events.</p><h3 id="outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#outgoingresponsetype"><span>OutgoingResponseType</span></a></h3><p><code>OutgoingResponseType</code> = <code>unknown</code></p><p>The type of outgoing HTTP responses.</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">new</span> <span class="token class-name">RouteCollection<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>routes<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> RouteCollection<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Constructs a <code>RouteCollection</code> instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="routes" tabindex="-1"><a class="header-anchor" href="#routes"><span>routes?</span></a></h5>`,10)),n("p",null,[t(a,{to:"/api/router/Route/classes/Route.html"},{default:o(()=>e[7]||(e[7]=[n("code",null,"Route",-1)])),_:1,__:[7]}),e[8]||(e[8]=s("<")),e[9]||(e[9]=n("code",null,"IncomingEventType",-1)),e[10]||(e[10]=s(", ")),e[11]||(e[11]=n("code",null,"OutgoingResponseType",-1)),e[12]||(e[12]=s(">[]"))]),e[69]||(e[69]=p(`<p>Optional array of <code>Route</code> instances to initialize the collection.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>RouteCollection</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;</p><h2 id="accessors" tabindex="-1"><a class="header-anchor" href="#accessors"><span>Accessors</span></a></h2><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size"><span>size</span></a></h3><h4 id="get-signature" tabindex="-1"><a class="header-anchor" href="#get-signature"><span>Get Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">get</span> <span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves the total number of routes in the collection.</p><h5 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h5><p><code>number</code></p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="iterator" tabindex="-1"><a class="header-anchor" href="#iterator"><span>[iterator]()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">iterator<span class="token operator">:</span> Iterator<span class="token operator">&lt;</span>Route<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Implements the iterable protocol for iterating over routes.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4>`,15)),n("p",null,[e[14]||(e[14]=n("code",null,"Iterator",-1)),e[15]||(e[15]=s("<")),t(a,{to:"/api/router/Route/classes/Route.html"},{default:o(()=>e[13]||(e[13]=[n("code",null,"Route",-1)])),_:1,__:[13]}),e[16]||(e[16]=s("<")),e[17]||(e[17]=n("code",null,"IncomingEventType",-1)),e[18]||(e[18]=s(", ")),e[19]||(e[19]=n("code",null,"OutgoingResponseType",-1)),e[20]||(e[20]=s(">>"))]),e[70]||(e[70]=p(`<p>An iterator for the routes.</p><hr><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add"><span>add()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">add</span><span class="token punctuation">(</span>route<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Adds a <code>Route</code> to the collection.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="route" tabindex="-1"><a class="header-anchor" href="#route"><span>route</span></a></h5>`,7)),n("p",null,[t(a,{to:"/api/router/Route/classes/Route.html"},{default:o(()=>e[21]||(e[21]=[n("code",null,"Route",-1)])),_:1,__:[21]}),e[22]||(e[22]=s("<")),e[23]||(e[23]=n("code",null,"IncomingEventType",-1)),e[24]||(e[24]=s(", ")),e[25]||(e[25]=n("code",null,"OutgoingResponseType",-1)),e[26]||(e[26]=s(">"))]),e[71]||(e[71]=p(`<p>The <code>Route</code> to add.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>this</code></p><p>The updated <code>RouteCollection</code> instance.</p><hr><h3 id="dump" tabindex="-1"><a class="header-anchor" href="#dump"><span>dump()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">dump</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Dumps all routes as an array of JSON objects.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;[]&gt;</p><p>An array of route definitions.</p><hr><h3 id="getbyname" tabindex="-1"><a class="header-anchor" href="#getbyname"><span>getByName()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getByName</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token operator">:</span> </span>
<span class="line">  <span class="token operator">|</span> <span class="token keyword">undefined</span></span>
<span class="line"><span class="token operator">|</span> Route<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Retrieves a route by name.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h5><p><code>string</code></p><p>The name of the route.</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4>`,20)),n("p",null,[e[28]||(e[28]=s("| ")),e[29]||(e[29]=n("code",null,"undefined",-1)),e[30]||(e[30]=s(" | ")),t(a,{to:"/api/router/Route/classes/Route.html"},{default:o(()=>e[27]||(e[27]=[n("code",null,"Route",-1)])),_:1,__:[27]}),e[31]||(e[31]=s("<")),e[32]||(e[32]=n("code",null,"IncomingEventType",-1)),e[33]||(e[33]=s(", ")),e[34]||(e[34]=n("code",null,"OutgoingResponseType",-1)),e[35]||(e[35]=s(">"))]),e[72]||(e[72]=p(`<p>The corresponding <code>Route</code>, or <code>undefined</code> if not found.</p><hr><h3 id="getroutes" tabindex="-1"><a class="header-anchor" href="#getroutes"><span>getRoutes()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getRoutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Route<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves all registered routes as an array.</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h4>`,6)),n("p",null,[t(a,{to:"/api/router/Route/classes/Route.html"},{default:o(()=>e[36]||(e[36]=[n("code",null,"Route",-1)])),_:1,__:[36]}),e[37]||(e[37]=s("<")),e[38]||(e[38]=n("code",null,"IncomingEventType",-1)),e[39]||(e[39]=s(", ")),e[40]||(e[40]=n("code",null,"OutgoingResponseType",-1)),e[41]||(e[41]=s(">[]"))]),e[73]||(e[73]=p(`<p>An array of all routes.</p><hr><h3 id="getroutesbymethod" tabindex="-1"><a class="header-anchor" href="#getroutesbymethod"><span>getRoutesByMethod()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getRoutesByMethod</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token operator">:</span> Route<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves all routes for a given HTTP method.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="method" tabindex="-1"><a class="header-anchor" href="#method"><span>method</span></a></h5><p><code>string</code></p><p>The HTTP method.</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h4>`,10)),n("p",null,[t(a,{to:"/api/router/Route/classes/Route.html"},{default:o(()=>e[42]||(e[42]=[n("code",null,"Route",-1)])),_:1,__:[42]}),e[43]||(e[43]=s("<")),e[44]||(e[44]=n("code",null,"IncomingEventType",-1)),e[45]||(e[45]=s(", ")),e[46]||(e[46]=n("code",null,"OutgoingResponseType",-1)),e[47]||(e[47]=s(">[]"))]),e[74]||(e[74]=p(`<p>An array of matching routes.</p><hr><h3 id="hasnamedroute" tabindex="-1"><a class="header-anchor" href="#hasnamedroute"><span>hasNamedRoute()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">hasNamedRoute</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if a named route exists.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="name-1" tabindex="-1"><a class="header-anchor" href="#name-1"><span>name</span></a></h5><p><code>string</code></p><p>The name of the route.</p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the named route exists, <code>false</code> otherwise.</p><hr><h3 id="match" tabindex="-1"><a class="header-anchor" href="#match"><span>match()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">match</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> includingMethod<span class="token punctuation">)</span><span class="token operator">:</span> Route<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Matches a <code>Route</code> based on an incoming event.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="event" tabindex="-1"><a class="header-anchor" href="#event"><span>event</span></a></h5><p><code>IncomingEventType</code></p><p>The incoming HTTP event.</p><h5 id="includingmethod" tabindex="-1"><a class="header-anchor" href="#includingmethod"><span>includingMethod</span></a></h5><p><code>boolean</code> = <code>true</code></p><p>Whether to consider the HTTP method during matching. Defaults to <code>true</code>.</p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4>`,24)),n("p",null,[t(a,{to:"/api/router/Route/classes/Route.html"},{default:o(()=>e[48]||(e[48]=[n("code",null,"Route",-1)])),_:1,__:[48]}),e[49]||(e[49]=s("<")),e[50]||(e[50]=n("code",null,"IncomingEventType",-1)),e[51]||(e[51]=s(", ")),e[52]||(e[52]=n("code",null,"OutgoingResponseType",-1)),e[53]||(e[53]=s(">"))]),e[75]||(e[75]=p(`<p>The matched <code>Route</code>.</p><h4 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h4><p>If no route matches the event.</p><hr><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring"><span>toString()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Converts all routes to a JSON string.</p><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>string</code>&gt;</p><p>A JSON string representing all routes.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token generic-function"><span class="token function">create</span><span class="token generic class-name"><span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>routes<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> RouteCollection<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Factory method to create a <code>RouteCollection</code> instance.</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h4><h5 id="incomingeventtype-1" tabindex="-1"><a class="header-anchor" href="#incomingeventtype-1"><span>IncomingEventType</span></a></h5>`,16)),n("p",null,[e[56]||(e[56]=n("code",null,"IncomingEventType",-1)),e[57]||(e[57]=s()),e[58]||(e[58]=n("em",null,"extends",-1)),e[59]||(e[59]=s()),t(a,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:o(()=>e[54]||(e[54]=[n("code",null,"IIncomingEvent",-1)])),_:1,__:[54]}),e[60]||(e[60]=s(" = ")),t(a,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:o(()=>e[55]||(e[55]=[n("code",null,"IIncomingEvent",-1)])),_:1,__:[55]})]),e[76]||(e[76]=p('<h5 id="outgoingresponsetype-1" tabindex="-1"><a class="header-anchor" href="#outgoingresponsetype-1"><span>OutgoingResponseType</span></a></h5><p><code>OutgoingResponseType</code> = <code>unknown</code></p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="routes-1" tabindex="-1"><a class="header-anchor" href="#routes-1"><span>routes?</span></a></h5>',4)),n("p",null,[t(a,{to:"/api/router/Route/classes/Route.html"},{default:o(()=>e[61]||(e[61]=[n("code",null,"Route",-1)])),_:1,__:[61]}),e[62]||(e[62]=s("<")),e[63]||(e[63]=n("code",null,"IncomingEventType",-1)),e[64]||(e[64]=s(", ")),e[65]||(e[65]=n("code",null,"OutgoingResponseType",-1)),e[66]||(e[66]=s(">[]"))]),e[77]||(e[77]=p('<p>Optional array of <code>Route</code> instances to initialize the collection.</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11"><span>Returns</span></a></h4><p><code>RouteCollection</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;</p><p>A new <code>RouteCollection</code> instance.</p>',4))])}const y=r(u,[["render",c]]),v=JSON.parse('{"path":"/api/router/RouteCollection/classes/RouteCollection.html","title":"Class: RouteCollection<IncomingEventType, OutgoingResponseType>","lang":"en-US","frontmatter":{"description":"Class: RouteCollection<IncomingEventType, OutgoingResponseType> Manages a collection of Route instances. Type Parameters IncomingEventType IncomingEventType extends = The type o...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: RouteCollection<IncomingEventType, OutgoingResponseType>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/router/RouteCollection/classes/RouteCollection.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: RouteCollection<IncomingEventType, OutgoingResponseType>"}],["meta",{"property":"og:description","content":"Class: RouteCollection<IncomingEventType, OutgoingResponseType> Manages a collection of Route instances. Type Parameters IncomingEventType IncomingEventType extends = The type o..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":1.37,"words":412},"filePathRelative":"api/router/RouteCollection/classes/RouteCollection.md","autoDesc":true}');export{y as comp,v as data};
