import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as t,o as s}from"./app-CsZBgwJX.js";const o={};function r(p,e){return s(),n("div",null,e[0]||(e[0]=[t(`<h1 id="type-alias-functionalcommandhandler-w-x" tabindex="-1"><a class="header-anchor" href="#type-alias-functionalcommandhandler-w-x"><span>Type Alias: FunctionalCommandHandler()&lt;W, X&gt;</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">type</span> <span class="token class-name">FunctionalCommandHandler<span class="token operator">&lt;</span><span class="token constant">W</span><span class="token punctuation">,</span> <span class="token constant">X</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>incomingEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promiseable<span class="token operator">&lt;</span><span class="token constant">X</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Represents FunctionalCommandHandler.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="w" tabindex="-1"><a class="header-anchor" href="#w"><span>W</span></a></h3><p><code>W</code> <em>extends</em> <code>IncomingEvent</code> = <code>IncomingEvent</code></p><h3 id="x" tabindex="-1"><a class="header-anchor" href="#x"><span>X</span></a></h3><p><code>X</code> = <code>unknown</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="incomingevent" tabindex="-1"><a class="header-anchor" href="#incomingevent"><span>incomingEvent</span></a></h3><p><code>W</code></p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>Promiseable</code>&lt;<code>X</code>&gt;</p>`,13)]))}const d=a(o,[["render",r]]),l=JSON.parse('{"path":"/api/node-cli-adapter/declarations/type-aliases/FunctionalCommandHandler.html","title":"Type Alias: FunctionalCommandHandler()<W, X>","lang":"en-US","frontmatter":{"description":"Type Alias: FunctionalCommandHandler()<W, X> Represents FunctionalCommandHandler. Type Parameters W W extends IncomingEvent = IncomingEvent X X = unknown Parameters incomingEven...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: FunctionalCommandHandler()<W, X>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/node-cli-adapter/declarations/type-aliases/FunctionalCommandHandler.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: FunctionalCommandHandler()<W, X>"}],["meta",{"property":"og:description","content":"Type Alias: FunctionalCommandHandler()<W, X> Represents FunctionalCommandHandler. Type Parameters W W extends IncomingEvent = IncomingEvent X X = unknown Parameters incomingEven..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.1,"words":31},"filePathRelative":"api/node-cli-adapter/declarations/type-aliases/FunctionalCommandHandler.md","autoDesc":true}');export{d as comp,l as data};
