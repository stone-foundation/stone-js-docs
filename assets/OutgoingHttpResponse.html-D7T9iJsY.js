import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as t,b as r,e as s,w as a,d as o,r as h,o as i}from"./app-7vCtLRjQ.js";const c={};function l(u,e){const n=h("RouteLink");return i(),d("div",null,[t("p",null,[s(n,{to:"/api/http-core/"},{default:a(()=>e[0]||(e[0]=[t("strong",null,"HTTP Core Documentation",-1)])),_:1,__:[0]})]),e[61]||(e[61]=t("hr",null,null,-1)),t("p",null,[s(n,{to:"/api/http-core/"},{default:a(()=>e[1]||(e[1]=[o("HTTP Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=o(" / ")),s(n,{to:"/api/http-core/OutgoingHttpResponse/"},{default:a(()=>e[2]||(e[2]=[o("OutgoingHttpResponse")])),_:1,__:[2]}),e[4]||(e[4]=o(" / OutgoingHttpResponse"))]),e[62]||(e[62]=r('<h1 id="class-outgoinghttpresponse" tabindex="-1"><a class="header-anchor" href="#class-outgoinghttpresponse"><span>Class: OutgoingHttpResponse</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L28" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:28</a></p><p>Class representing an Outgoing HTTP Response. Extends the OutgoingResponse class and provides additional features such as setting headers, cookies, and interacting with IncomingHttpEvent.</p><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends"><span>Extends</span></a></h2><ul><li><code>OutgoingResponse</code></li></ul><h2 id="extended-by" tabindex="-1"><a class="header-anchor" href="#extended-by"><span>Extended by</span></a></h2>',6)),t("ul",null,[t("li",null,[s(n,{to:"/api/http-core/BinaryFileResponse/classes/BinaryFileResponse.html"},{default:a(()=>e[5]||(e[5]=[t("code",null,"BinaryFileResponse",-1)])),_:1,__:[5]})]),t("li",null,[s(n,{to:"/api/http-core/JsonResponse/classes/JsonResponse.html"},{default:a(()=>e[6]||(e[6]=[t("code",null,"JsonResponse",-1)])),_:1,__:[6]})]),t("li",null,[s(n,{to:"/api/http-core/RedirectResponse/classes/RedirectResponse.html"},{default:a(()=>e[7]||(e[7]=[t("code",null,"RedirectResponse",-1)])),_:1,__:[7]})])]),e[63]||(e[63]=t("h2",{id:"implements",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#implements"},[t("span",null,"Implements")])],-1)),t("ul",null,[t("li",null,[s(n,{to:"/api/http-core/declarations/interfaces/IOutgoingHttpResponse.html"},{default:a(()=>e[8]||(e[8]=[t("code",null,"IOutgoingHttpResponse",-1)])),_:1,__:[8]})])]),e[64]||(e[64]=r('<h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><blockquote><p><strong>new OutgoingHttpResponse</strong>(<code>options</code>): <code>OutgoingHttpResponse</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L55" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:55</a></p><p>Constructor for OutgoingHttpResponse. Initializes headers and cookies based on the provided options.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5>',7)),t("p",null,[s(n,{to:"/api/http-core/OutgoingHttpResponse/interfaces/OutgoingHttpResponseOptions.html"},{default:a(()=>e[9]||(e[9]=[t("code",null,"OutgoingHttpResponseOptions",-1)])),_:1,__:[9]})]),e[65]||(e[65]=r('<p>Options for the outgoing HTTP response.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>OutgoingHttpResponse</code></p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides"><span>Overrides</span></a></h4><p><code>OutgoingResponse.constructor</code></p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="blueprintresolver" tabindex="-1"><a class="header-anchor" href="#blueprintresolver"><span>_blueprintResolver()?</span></a></h3><blockquote><p><code>protected</code> <code>optional</code> <strong>_blueprintResolver</strong>: () =&gt; <code>undefined</code> | <code>IBlueprint</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L34" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:34</a></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>undefined</code> | <code>IBlueprint</code></p><hr><h3 id="charset" tabindex="-1"><a class="header-anchor" href="#charset"><span>_charset?</span></a></h3><blockquote><p><code>protected</code> <code>optional</code> <strong>_charset</strong>: <code>Encoding</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L31" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:31</a></p><hr><h3 id="cookiecollection" tabindex="-1"><a class="header-anchor" href="#cookiecollection"><span>_cookieCollection</span></a></h3>',17)),t("blockquote",null,[t("p",null,[e[11]||(e[11]=t("code",null,"protected",-1)),e[12]||(e[12]=o()),e[13]||(e[13]=t("code",null,"readonly",-1)),e[14]||(e[14]=o()),e[15]||(e[15]=t("strong",null,"_cookieCollection",-1)),e[16]||(e[16]=o(": ")),s(n,{to:"/api/http-core/cookies/CookieCollection/classes/CookieCollection.html"},{default:a(()=>e[10]||(e[10]=[t("code",null,"CookieCollection",-1)])),_:1,__:[10]})])]),e[66]||(e[66]=r('<p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L37" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:37</a></p><hr><h3 id="formats" tabindex="-1"><a class="header-anchor" href="#formats"><span>_formats?</span></a></h3><blockquote><p><code>protected</code> <code>optional</code> <strong>_formats</strong>: <code>Record</code>&lt;<code>string</code>, () =&gt; <code>unknown</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L32" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:32</a></p><hr><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>_headers</span></a></h3><blockquote><p><code>protected</code> <code>readonly</code> <strong>_headers</strong>: <code>Headers</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L36" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:36</a></p><hr><h3 id="incomingeventresolver" tabindex="-1"><a class="header-anchor" href="#incomingeventresolver"><span>_incomingEventResolver()?</span></a></h3>',11)),t("blockquote",null,[t("p",null,[e[18]||(e[18]=t("code",null,"protected",-1)),e[19]||(e[19]=o()),e[20]||(e[20]=t("code",null,"optional",-1)),e[21]||(e[21]=o()),e[22]||(e[22]=t("strong",null,"_incomingEventResolver",-1)),e[23]||(e[23]=o(": () => ")),s(n,{to:"/api/http-core/IncomingHttpEvent/classes/IncomingHttpEvent.html"},{default:a(()=>e[17]||(e[17]=[t("code",null,"IncomingHttpEvent",-1)])),_:1,__:[17]})])]),e[67]||(e[67]=t("p",null,[o("Defined in: "),t("a",{href:"https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L33",target:"_blank",rel:"noopener noreferrer"},"src/OutgoingHttpResponse.ts:33")],-1)),e[68]||(e[68]=t("h4",{id:"returns-2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-2"},[t("span",null,"Returns")])],-1)),t("p",null,[s(n,{to:"/api/http-core/IncomingHttpEvent/classes/IncomingHttpEvent.html"},{default:a(()=>e[24]||(e[24]=[t("code",null,"IncomingHttpEvent",-1)])),_:1,__:[24]})]),e[69]||(e[69]=r('<hr><h3 id="outgoing-http-response" tabindex="-1"><a class="header-anchor" href="#outgoing-http-response"><span>OUTGOING_HTTP_RESPONSE</span></a></h3><blockquote><p><code>static</code> <strong>OUTGOING_HTTP_RESPONSE</strong>: <code>string</code> = <code>&#39;stonejs@outgoing_http_response&#39;</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L29" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:29</a></p><h2 id="accessors" tabindex="-1"><a class="header-anchor" href="#accessors"><span>Accessors</span></a></h2><h3 id="blueprint" tabindex="-1"><a class="header-anchor" href="#blueprint"><span>blueprint</span></a></h3><h4 id="get-signature" tabindex="-1"><a class="header-anchor" href="#get-signature"><span>Get Signature</span></a></h4><blockquote><p><strong>get</strong> <strong>blueprint</strong>(): <code>undefined</code> | <code>IBlueprint</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L138" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:138</a></p><p>Get the blueprint associated with the response.</p><h5 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h5><p><code>undefined</code> | <code>IBlueprint</code></p><p>The blueprint or undefined if not set.</p><hr><h3 id="charset-1" tabindex="-1"><a class="header-anchor" href="#charset-1"><span>charset</span></a></h3><h4 id="get-signature-1" tabindex="-1"><a class="header-anchor" href="#get-signature-1"><span>Get Signature</span></a></h4><blockquote><p><strong>get</strong> <strong>charset</strong>(): <code>Encoding</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L89" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:89</a></p><p>Get the character set encoding. Defaults to &#39;utf-8&#39; if not explicitly set.</p><h5 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h5><p><code>Encoding</code></p><p>The character set encoding.</p><hr><h3 id="charsetregexp" tabindex="-1"><a class="header-anchor" href="#charsetregexp"><span>charsetRegExp</span></a></h3><h4 id="get-signature-2" tabindex="-1"><a class="header-anchor" href="#get-signature-2"><span>Get Signature</span></a></h4><blockquote><p><strong>get</strong> <code>protected</code> <strong>charsetRegExp</strong>(): <code>RegExp</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L148" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:148</a></p><p>Get the regular expression for matching charset in content type.</p><h5 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h5><p><code>RegExp</code></p><p>The regular expression for matching charset in content type.</p><hr><h3 id="etag" tabindex="-1"><a class="header-anchor" href="#etag"><span>etag</span></a></h3><h4 id="get-signature-3" tabindex="-1"><a class="header-anchor" href="#get-signature-3"><span>Get Signature</span></a></h4><blockquote><p><strong>get</strong> <strong>etag</strong>(): <code>undefined</code> | <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L98" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:98</a></p><p>Get the ETag of the response.</p><h5 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h5><p><code>undefined</code> | <code>string</code></p><p>The value of the ETag header, if present.</p><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of"><span>Implementation of</span></a></h4>',41)),t("p",null,[s(n,{to:"/api/http-core/declarations/interfaces/IOutgoingHttpResponse.html"},{default:a(()=>e[25]||(e[25]=[t("code",null,"IOutgoingHttpResponse",-1)])),_:1,__:[25]}),e[27]||(e[27]=o(".")),s(n,{to:"/api/http-core/declarations/interfaces/IOutgoingHttpResponse.html#etag"},{default:a(()=>e[26]||(e[26]=[t("code",null,"etag",-1)])),_:1,__:[26]})]),e[70]||(e[70]=r('<hr><h3 id="headers-1" tabindex="-1"><a class="header-anchor" href="#headers-1"><span>headers</span></a></h3><h4 id="get-signature-4" tabindex="-1"><a class="header-anchor" href="#get-signature-4"><span>Get Signature</span></a></h4><blockquote><p><strong>get</strong> <strong>headers</strong>(): <code>Headers</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L79" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:79</a></p><p>Get the headers of the response.</p><h5 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h5><p><code>Headers</code></p><p>The headers of the response as a Headers object.</p><hr><h3 id="incomingevent" tabindex="-1"><a class="header-anchor" href="#incomingevent"><span>incomingEvent</span></a></h3><h4 id="get-signature-5" tabindex="-1"><a class="header-anchor" href="#get-signature-5"><span>Get Signature</span></a></h4>',12)),t("blockquote",null,[t("p",null,[e[29]||(e[29]=t("strong",null,"get",-1)),e[30]||(e[30]=o()),e[31]||(e[31]=t("strong",null,"incomingEvent",-1)),e[32]||(e[32]=o("(): ")),s(n,{to:"/api/http-core/IncomingHttpEvent/classes/IncomingHttpEvent.html"},{default:a(()=>e[28]||(e[28]=[t("code",null,"IncomingHttpEvent",-1)])),_:1,__:[28]})])]),e[71]||(e[71]=r('<p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L126" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:126</a></p><p>Get the associated IncomingHttpEvent.</p><h5 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h5><p>InternalServerError if the IncomingHttpEvent resolver is not set.</p><h5 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h5>',5)),t("p",null,[s(n,{to:"/api/http-core/IncomingHttpEvent/classes/IncomingHttpEvent.html"},{default:a(()=>e[33]||(e[33]=[t("code",null,"IncomingHttpEvent",-1)])),_:1,__:[33]})]),e[72]||(e[72]=r('<p>The associated IncomingHttpEvent.</p><hr><h3 id="lastmodified" tabindex="-1"><a class="header-anchor" href="#lastmodified"><span>lastModified</span></a></h3><h4 id="get-signature-6" tabindex="-1"><a class="header-anchor" href="#get-signature-6"><span>Get Signature</span></a></h4><blockquote><p><strong>get</strong> <strong>lastModified</strong>(): <code>undefined</code> | <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L116" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:116</a></p><p>Get the Last-Modified date of the response.</p><h5 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h5><p><code>undefined</code> | <code>string</code></p><p>The value of the Last-Modified header, if present.</p><h4 id="implementation-of-1" tabindex="-1"><a class="header-anchor" href="#implementation-of-1"><span>Implementation of</span></a></h4>',11)),t("p",null,[s(n,{to:"/api/http-core/declarations/interfaces/IOutgoingHttpResponse.html"},{default:a(()=>e[34]||(e[34]=[t("code",null,"IOutgoingHttpResponse",-1)])),_:1,__:[34]}),e[36]||(e[36]=o(".")),s(n,{to:"/api/http-core/declarations/interfaces/IOutgoingHttpResponse.html#lastmodified"},{default:a(()=>e[35]||(e[35]=[t("code",null,"lastModified",-1)])),_:1,__:[35]})]),e[73]||(e[73]=r('<hr><h3 id="status" tabindex="-1"><a class="header-anchor" href="#status"><span>status</span></a></h3><h4 id="get-signature-7" tabindex="-1"><a class="header-anchor" href="#get-signature-7"><span>Get Signature</span></a></h4><blockquote><p><strong>get</strong> <strong>status</strong>(): <code>undefined</code> | <code>number</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L70" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:70</a></p><p>Get the HTTP status code.</p><h5 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h5><p><code>undefined</code> | <code>number</code></p><p>The HTTP status code.</p><h4 id="implementation-of-2" tabindex="-1"><a class="header-anchor" href="#implementation-of-2"><span>Implementation of</span></a></h4>',10)),t("p",null,[s(n,{to:"/api/http-core/declarations/interfaces/IOutgoingHttpResponse.html"},{default:a(()=>e[37]||(e[37]=[t("code",null,"IOutgoingHttpResponse",-1)])),_:1,__:[37]}),e[39]||(e[39]=o(".")),s(n,{to:"/api/http-core/declarations/interfaces/IOutgoingHttpResponse.html#status"},{default:a(()=>e[38]||(e[38]=[t("code",null,"status",-1)])),_:1,__:[38]})]),e[74]||(e[74]=r('<hr><h3 id="vary" tabindex="-1"><a class="header-anchor" href="#vary"><span>vary</span></a></h3><h4 id="get-signature-8" tabindex="-1"><a class="header-anchor" href="#get-signature-8"><span>Get Signature</span></a></h4><blockquote><p><strong>get</strong> <strong>vary</strong>(): <code>undefined</code> | <code>string</code>[]</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L107" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:107</a></p><p>Get the Vary header as an array of values.</p><h5 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11"><span>Returns</span></a></h5><p><code>undefined</code> | <code>string</code>[]</p><p>The Vary header values split by comma, or undefined if not present.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="addvary" tabindex="-1"><a class="header-anchor" href="#addvary"><span>addVary()</span></a></h3><blockquote><p><strong>addVary</strong>(<code>field</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L406" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:406</a></p><p>Add a field to the Vary header.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="field" tabindex="-1"><a class="header-anchor" href="#field"><span>field</span></a></h5><p>The field to add to the Vary header.</p><p><code>string</code> | <code>string</code>[]</p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="appendheader" tabindex="-1"><a class="header-anchor" href="#appendheader"><span>appendHeader()</span></a></h3><blockquote><p><strong>appendHeader</strong>(<code>key</code>, <code>value</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L190" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:190</a></p><p>Append a value to an existing header or create a new header.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="key" tabindex="-1"><a class="header-anchor" href="#key"><span>key</span></a></h5><p><code>string</code></p><p>The header name.</p><h5 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value</span></a></h5><p><code>string</code></p><p>The value to append.</p><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="calculatecontentlength" tabindex="-1"><a class="header-anchor" href="#calculatecontentlength"><span>calculateContentLength()</span></a></h3><blockquote><p><code>protected</code> <strong>calculateContentLength</strong>(<code>generateETag</code>): <code>number</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L769" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:769</a></p><p>Calculate the content length.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="generateetag" tabindex="-1"><a class="header-anchor" href="#generateetag"><span>generateETag</span></a></h5><p><code>boolean</code></p><p>Whether to generate an ETag for the content.</p><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14"><span>Returns</span></a></h4><p><code>number</code></p><p>The content length.</p><hr><h3 id="clearcookie" tabindex="-1"><a class="header-anchor" href="#clearcookie"><span>clearCookie()</span></a></h3><blockquote><p><strong>clearCookie</strong>(<code>name</code>, <code>options</code>, <code>force</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L311" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:311</a></p><p>Clear a specific cookie from the response.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h5><p><code>string</code></p><p>The name of the cookie to be cleared.</p><h5 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1"><span>options</span></a></h5>',58)),t("p",null,[s(n,{to:"/api/http-core/declarations/interfaces/CookieOptions.html"},{default:a(()=>e[40]||(e[40]=[t("code",null,"CookieOptions",-1)])),_:1,__:[40]}),e[41]||(e[41]=o(" = ")),e[42]||(e[42]=t("code",null,"{}",-1))]),e[75]||(e[75]=r('<p>Optional settings for the cookie.</p><h5 id="force" tabindex="-1"><a class="header-anchor" href="#force"><span>force</span></a></h5><p><code>boolean</code> = <code>false</code></p><p>Whether to force the removal of the cookie, even if it doesn&#39;t exist.</p><h4 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="clearcookies" tabindex="-1"><a class="header-anchor" href="#clearcookies"><span>clearCookies()</span></a></h3><blockquote><p><strong>clearCookies</strong>(<code>force</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L323" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:323</a></p><p>Clear all cookies from the response.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="force-1" tabindex="-1"><a class="header-anchor" href="#force-1"><span>force</span></a></h5><p><code>boolean</code> = <code>false</code></p><p>Whether to force the removal of all cookies.</p><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="defaultetagfn" tabindex="-1"><a class="header-anchor" href="#defaultetagfn"><span>defaultEtagFn()</span></a></h3><blockquote><p><code>protected</code> <strong>defaultEtagFn</strong>(<code>content</code>, <code>encoding</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L854" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:854</a></p><p>Generate a default ETag for the given content.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="content" tabindex="-1"><a class="header-anchor" href="#content"><span>content</span></a></h5><p><code>string</code></p><p>The content to generate an ETag for.</p><h5 id="encoding" tabindex="-1"><a class="header-anchor" href="#encoding"><span>encoding</span></a></h5><p><code>Encoding</code></p><p>The encoding to use.</p><h4 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17"><span>Returns</span></a></h4><p><code>string</code></p><p>The generated ETag as a base64 string.</p><hr><h3 id="ensurecharset" tabindex="-1"><a class="header-anchor" href="#ensurecharset"><span>ensureCharset()</span></a></h3><blockquote><p><code>protected</code> <strong>ensureCharset</strong>(<code>value</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L787" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:787</a></p><p>Ensure that the &quot;Content-Type&quot; header has a charset specified.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h4><h5 id="value-1" tabindex="-1"><a class="header-anchor" href="#value-1"><span>value</span></a></h5><p><code>string</code></p><p>The &quot;Content-Type&quot; header value.</p><h4 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="format" tabindex="-1"><a class="header-anchor" href="#format"><span>format()</span></a></h3><blockquote><p><strong>format</strong>(<code>formats</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L395" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:395</a></p><p>Handles content negotiation based on the <code>Accept</code> header of the incoming request.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h4><h5 id="formats-1" tabindex="-1"><a class="header-anchor" href="#formats-1"><span>formats</span></a></h5><p><code>Record</code>&lt;<code>string</code>, () =&gt; <code>unknown</code>&gt;</p><p>An object where keys are MIME types and values are functions that return the content for that MIME type.</p><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="gethashedcontent" tabindex="-1"><a class="header-anchor" href="#gethashedcontent"><span>getHashedContent()</span></a></h3><blockquote><p><code>protected</code> <strong>getHashedContent</strong>(<code>content</code>, <code>encoding</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L865" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:865</a></p><p>Get the hashed content using the specified encoding.</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h4><h5 id="content-1" tabindex="-1"><a class="header-anchor" href="#content-1"><span>content</span></a></h5><p><code>string</code></p><p>The content to hash.</p><h5 id="encoding-1" tabindex="-1"><a class="header-anchor" href="#encoding-1"><span>encoding</span></a></h5><p><code>Encoding</code></p><p>The encoding to use for hashing.</p><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20"><span>Returns</span></a></h4><p><code>string</code></p><p>The hashed content as a hexadecimal string.</p><hr><h3 id="getheader" tabindex="-1"><a class="header-anchor" href="#getheader"><span>getHeader()</span></a></h3><p>Get a header value.</p><h4 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h4><p>The header name.</p><h4 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h4><p>A fallback value if the header is not found.</p><h4 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h4><blockquote><p><strong>getHeader</strong>&lt;<code>TReturn</code>&gt;(<code>name</code>): <code>undefined</code> | <code>TReturn</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L206" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:206</a></p><p>Get a header value.</p><h5 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h5><h6 id="treturn" tabindex="-1"><a class="header-anchor" href="#treturn"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>string</code></p><h5 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10"><span>Parameters</span></a></h5><h6 id="name-1" tabindex="-1"><a class="header-anchor" href="#name-1"><span>name</span></a></h6><p><code>string</code></p><p>The header name.</p><h5 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21"><span>Returns</span></a></h5><p><code>undefined</code> | <code>TReturn</code></p><p>The header value or the fallback value.</p><h5 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h5><p>The header name.</p><h5 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h5><p>A fallback value if the header is not found.</p><h4 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h4><blockquote><p><strong>getHeader</strong>&lt;<code>TReturn</code>&gt;(<code>name</code>, <code>fallback</code>): <code>TReturn</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L215" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:215</a></p><p>Get a header value.</p><h5 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h5><h6 id="treturn-1" tabindex="-1"><a class="header-anchor" href="#treturn-1"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>string</code></p><h5 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11"><span>Parameters</span></a></h5><h6 id="name-2" tabindex="-1"><a class="header-anchor" href="#name-2"><span>name</span></a></h6><p><code>string</code></p><p>The header name.</p><h6 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>fallback</span></a></h6><p><code>TReturn</code></p><p>A fallback value if the header is not found.</p><h5 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22"><span>Returns</span></a></h5><p><code>TReturn</code></p><p>The header value or the fallback value.</p><h5 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h5><p>The header name.</p><h5 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h5><p>A fallback value if the header is not found.</p><hr><h3 id="getheadernames" tabindex="-1"><a class="header-anchor" href="#getheadernames"><span>getHeaderNames()</span></a></h3><blockquote><p><strong>getHeaderNames</strong>(): <code>string</code>[]</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L233" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:233</a></p><p>Get all header names.</p><h4 id="returns-23" tabindex="-1"><a class="header-anchor" href="#returns-23"><span>Returns</span></a></h4><p><code>string</code>[]</p><p>An array of all header names.</p><hr><h3 id="handlecacheheaders" tabindex="-1"><a class="header-anchor" href="#handlecacheheaders"><span>handleCacheHeaders()</span></a></h3><blockquote><p><code>protected</code> <strong>handleCacheHeaders</strong>(): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L705" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:705</a></p><p>Handle cache headers like ETag and Last-Modified.</p><h4 id="returns-24" tabindex="-1"><a class="header-anchor" href="#returns-24"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of the response for chaining.</p><hr><h3 id="handlecontentnegotiation" tabindex="-1"><a class="header-anchor" href="#handlecontentnegotiation"><span>handleContentNegotiation()</span></a></h3><blockquote><p><code>protected</code> <strong>handleContentNegotiation</strong>(): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L657" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:657</a></p><p>Handles content negotiation based on the <code>Accept</code> header of the incoming request.</p><h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="hasheader" tabindex="-1"><a class="header-anchor" href="#hasheader"><span>hasHeader()</span></a></h3><blockquote><p><strong>hasHeader</strong>(<code>key</code>): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L243" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:243</a></p><p>Check if a specific header exists.</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12"><span>Parameters</span></a></h4><h5 id="key-1" tabindex="-1"><a class="header-anchor" href="#key-1"><span>key</span></a></h5><p><code>string</code></p><p>The header name to check.</p><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the header exists, false otherwise.</p><hr><h3 id="is1xx" tabindex="-1"><a class="header-anchor" href="#is1xx"><span>is1xx()</span></a></h3><blockquote><p><strong>is1xx</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L492" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:492</a></p><p>Check if the status code represents an informational response (1xx).</p><h4 id="returns-27" tabindex="-1"><a class="header-anchor" href="#returns-27"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is informational, otherwise false.</p><hr><h3 id="is2xx" tabindex="-1"><a class="header-anchor" href="#is2xx"><span>is2xx()</span></a></h3><blockquote><p><strong>is2xx</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L501" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:501</a></p><p>Check if the status code represents a successful response (2xx).</p><h4 id="returns-28" tabindex="-1"><a class="header-anchor" href="#returns-28"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is successful, otherwise false.</p><hr><h3 id="is3xx" tabindex="-1"><a class="header-anchor" href="#is3xx"><span>is3xx()</span></a></h3><blockquote><p><strong>is3xx</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L510" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:510</a></p><p>Check if the status code represents a redirection response (3xx).</p><h4 id="returns-29" tabindex="-1"><a class="header-anchor" href="#returns-29"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is a redirection, otherwise false.</p><hr><h3 id="is4xx" tabindex="-1"><a class="header-anchor" href="#is4xx"><span>is4xx()</span></a></h3><blockquote><p><strong>is4xx</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L519" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:519</a></p><p>Check if the status code represents a client error response (4xx).</p><h4 id="returns-30" tabindex="-1"><a class="header-anchor" href="#returns-30"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is a client error, otherwise false.</p><hr><h3 id="is5xx" tabindex="-1"><a class="header-anchor" href="#is5xx"><span>is5xx()</span></a></h3><blockquote><p><strong>is5xx</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L528" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:528</a></p><p>Check if the status code represents a server error response (5xx).</p><h4 id="returns-31" tabindex="-1"><a class="header-anchor" href="#returns-31"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is a server error, otherwise false.</p><hr><h3 id="isempty" tabindex="-1"><a class="header-anchor" href="#isempty"><span>isEmpty()</span></a></h3><blockquote><p><strong>isEmpty</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L573" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:573</a></p><p>Check if the response is empty.</p><h4 id="returns-32" tabindex="-1"><a class="header-anchor" href="#returns-32"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code indicates an empty response, otherwise false.</p><hr><h3 id="iserror" tabindex="-1"><a class="header-anchor" href="#iserror"><span>isError()</span></a></h3><blockquote><p><strong>isError</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L546" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:546</a></p><p>Check if the status code is an error (i.e., 4xx or 5xx).</p><h4 id="returns-33" tabindex="-1"><a class="header-anchor" href="#returns-33"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is an error, otherwise false.</p><hr><h3 id="isforbidden" tabindex="-1"><a class="header-anchor" href="#isforbidden"><span>isForbidden()</span></a></h3><blockquote><p><strong>isForbidden</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L611" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:611</a></p><p>Check if the status code is 403 (Forbidden).</p><h4 id="returns-34" tabindex="-1"><a class="header-anchor" href="#returns-34"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is 403, otherwise false.</p><hr><h3 id="isinstatusrange" tabindex="-1"><a class="header-anchor" href="#isinstatusrange"><span>isInStatusRange()</span></a></h3><blockquote><p><strong>isInStatusRange</strong>(<code>start</code>, <code>end</code>): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L472" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:472</a></p><p>Check if the status code falls within the specified range.</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13"><span>Parameters</span></a></h4><h5 id="start" tabindex="-1"><a class="header-anchor" href="#start"><span>start</span></a></h5><p><code>number</code></p><p>The starting value of the range (inclusive).</p><h5 id="end" tabindex="-1"><a class="header-anchor" href="#end"><span>end</span></a></h5><p><code>number</code></p><p>The ending value of the range (exclusive).</p><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is within the specified range, otherwise false.</p><hr><h3 id="isinvalid" tabindex="-1"><a class="header-anchor" href="#isinvalid"><span>isInvalid()</span></a></h3><blockquote><p><strong>isInvalid</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L482" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:482</a></p><p>Check if the status code is invalid.</p><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is invalid, otherwise false.</p><hr><h3 id="ismovedpermanently" tabindex="-1"><a class="header-anchor" href="#ismovedpermanently"><span>isMovedPermanently()</span></a></h3><blockquote><p><strong>isMovedPermanently</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L593" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:593</a></p><p>Check if the status code is 301 (Moved Permanently).</p><h4 id="returns-37" tabindex="-1"><a class="header-anchor" href="#returns-37"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is 301, otherwise false.</p><hr><h3 id="isnoterror" tabindex="-1"><a class="header-anchor" href="#isnoterror"><span>isNotError()</span></a></h3><blockquote><p><strong>isNotError</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L537" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:537</a></p><p>Check if the status code is not an error (i.e., not 4xx or 5xx).</p><h4 id="returns-38" tabindex="-1"><a class="header-anchor" href="#returns-38"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is not an error, otherwise false.</p><hr><h3 id="isnotfound" tabindex="-1"><a class="header-anchor" href="#isnotfound"><span>isNotFound()</span></a></h3><blockquote><p><strong>isNotFound</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L620" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:620</a></p><p>Check if the status code is 404 (Not Found).</p><h4 id="returns-39" tabindex="-1"><a class="header-anchor" href="#returns-39"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is 404, otherwise false.</p><hr><h3 id="isok" tabindex="-1"><a class="header-anchor" href="#isok"><span>isOk()</span></a></h3><blockquote><p><strong>isOk</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L555" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:555</a></p><p>Check if the status code is 200 (OK).</p><h4 id="returns-40" tabindex="-1"><a class="header-anchor" href="#returns-40"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is 200, otherwise false.</p><hr><h3 id="isredirect" tabindex="-1"><a class="header-anchor" href="#isredirect"><span>isRedirect()</span></a></h3><blockquote><p><strong>isRedirect</strong>(<code>location?</code>): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L583" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:583</a></p><p>Check if the response is a redirect.</p><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14"><span>Parameters</span></a></h4><h5 id="location" tabindex="-1"><a class="header-anchor" href="#location"><span>location?</span></a></h5><p><code>string</code></p><p>The optional location to check for redirection.</p><h4 id="returns-41" tabindex="-1"><a class="header-anchor" href="#returns-41"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code indicates a redirect, otherwise false.</p><hr><h3 id="isresetcontent" tabindex="-1"><a class="header-anchor" href="#isresetcontent"><span>isResetContent()</span></a></h3><blockquote><p><strong>isResetContent</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L564" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:564</a></p><p>Check if the status code is 205 (Reset Content).</p><h4 id="returns-42" tabindex="-1"><a class="header-anchor" href="#returns-42"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is 205, otherwise false.</p><hr><h3 id="isunauthorized" tabindex="-1"><a class="header-anchor" href="#isunauthorized"><span>isUnauthorized()</span></a></h3><blockquote><p><strong>isUnauthorized</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L602" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:602</a></p><p>Check if the status code is 401 (Unauthorized).</p><h4 id="returns-43" tabindex="-1"><a class="header-anchor" href="#returns-43"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the status code is 401, otherwise false.</p><hr><h3 id="isvalidateable" tabindex="-1"><a class="header-anchor" href="#isvalidateable"><span>isValidateable()</span></a></h3><blockquote><p><strong>isValidateable</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L629" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:629</a></p><p>Check if the response is validateable.</p><h4 id="returns-44" tabindex="-1"><a class="header-anchor" href="#returns-44"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the response has Last-Modified or ETag headers, otherwise false.</p><hr><h3 id="morphtojson" tabindex="-1"><a class="header-anchor" href="#morphtojson"><span>morphToJson()</span></a></h3><blockquote><p><code>protected</code> <strong>morphToJson</strong>(<code>content</code>, <code>options</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L818" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:818</a></p><p>Convert the given content to a JSON string.</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15"><span>Parameters</span></a></h4><h5 id="content-2" tabindex="-1"><a class="header-anchor" href="#content-2"><span>content</span></a></h5><p><code>unknown</code></p><p>The content to convert.</p><h5 id="options-2" tabindex="-1"><a class="header-anchor" href="#options-2"><span>options</span></a></h5>',320)),t("p",null,[e[44]||(e[44]=t("code",null,"Partial",-1)),e[45]||(e[45]=o("<")),s(n,{to:"/api/http-core/options/HttpConfig/interfaces/HttpJsonConfig.html"},{default:a(()=>e[43]||(e[43]=[t("code",null,"HttpJsonConfig",-1)])),_:1,__:[43]}),e[46]||(e[46]=o("> = ")),e[47]||(e[47]=t("code",null,"{}",-1))]),e[76]||(e[76]=r('<p>Options to customize the serialization process.</p><h4 id="returns-45" tabindex="-1"><a class="header-anchor" href="#returns-45"><span>Returns</span></a></h4><p><code>string</code></p><p>A JSON string representation of the content.</p><h4 id="throws-1" tabindex="-1"><a class="header-anchor" href="#throws-1"><span>Throws</span></a></h4><p>InternalServerError if the content cannot be converted to JSON.</p><hr><h3 id="prepare" tabindex="-1"><a class="header-anchor" href="#prepare"><span>prepare()</span></a></h3><blockquote><p><strong>prepare</strong>(<code>event</code>, <code>container?</code>): <code>OutgoingHttpResponse</code> | <code>Promise</code>&lt;<code>OutgoingHttpResponse</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L640" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:640</a></p><p>Prepare the response before sending.</p><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16"><span>Parameters</span></a></h4><h5 id="event" tabindex="-1"><a class="header-anchor" href="#event"><span>event</span></a></h5>',13)),t("p",null,[s(n,{to:"/api/http-core/IncomingHttpEvent/classes/IncomingHttpEvent.html"},{default:a(()=>e[48]||(e[48]=[t("code",null,"IncomingHttpEvent",-1)])),_:1,__:[48]})]),e[77]||(e[77]=r('<p>The incoming HTTP event.</p><h5 id="container" tabindex="-1"><a class="header-anchor" href="#container"><span>container?</span></a></h5><p><code>Container</code></p><p>The service container.</p><h4 id="returns-46" tabindex="-1"><a class="header-anchor" href="#returns-46"><span>Returns</span></a></h4><p><code>OutgoingHttpResponse</code> | <code>Promise</code>&lt;<code>OutgoingHttpResponse</code>&gt;</p><p>The current instance of the response for chaining.</p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1"><span>Overrides</span></a></h4><p><code>OutgoingResponse.prepare</code></p><hr><h3 id="preparecontentheaders" tabindex="-1"><a class="header-anchor" href="#preparecontentheaders"><span>prepareContentHeaders()</span></a></h3><blockquote><p><code>protected</code> <strong>prepareContentHeaders</strong>(): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L717" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:717</a></p><p>Prepare content-related headers such as Content-Length and ETag.</p><h4 id="returns-47" tabindex="-1"><a class="header-anchor" href="#returns-47"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of the response for chaining.</p><hr><h3 id="preparecookies" tabindex="-1"><a class="header-anchor" href="#preparecookies"><span>prepareCookies()</span></a></h3><blockquote><p><code>protected</code> <strong>prepareCookies</strong>(): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L831" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:831</a></p><p>Prepare cookies by setting the appropriate headers.</p><h4 id="returns-48" tabindex="-1"><a class="header-anchor" href="#returns-48"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of the response for chaining.</p><hr><h3 id="removeheader" tabindex="-1"><a class="header-anchor" href="#removeheader"><span>removeHeader()</span></a></h3><blockquote><p><strong>removeHeader</strong>(<code>key</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L253" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:253</a></p><p>Remove headers from the response.</p><h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17"><span>Parameters</span></a></h4><h5 id="key-2" tabindex="-1"><a class="header-anchor" href="#key-2"><span>key</span></a></h5><p>The header or headers to be removed.</p><p><code>string</code> | <code>string</code>[]</p><h4 id="returns-49" tabindex="-1"><a class="header-anchor" href="#returns-49"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="securecookies" tabindex="-1"><a class="header-anchor" href="#securecookies"><span>secureCookies()</span></a></h3><blockquote><p><strong>secureCookies</strong>(<code>value</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L334" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:334</a></p><p>Secure all cookies by setting the &quot;Secure&quot; attribute.</p><h4 id="parameters-18" tabindex="-1"><a class="header-anchor" href="#parameters-18"><span>Parameters</span></a></h4><h5 id="value-2" tabindex="-1"><a class="header-anchor" href="#value-2"><span>value</span></a></h5><p><code>boolean</code> = <code>true</code></p><p>Whether to set or unset the &quot;Secure&quot; attribute for cookies.</p><h4 id="returns-50" tabindex="-1"><a class="header-anchor" href="#returns-50"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="setblueprintresolver" tabindex="-1"><a class="header-anchor" href="#setblueprintresolver"><span>setBlueprintResolver()</span></a></h3><blockquote><p><strong>setBlueprintResolver</strong>(<code>resolver</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L460" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:460</a></p><p>Set the resolver for the blueprint.</p><h4 id="parameters-19" tabindex="-1"><a class="header-anchor" href="#parameters-19"><span>Parameters</span></a></h4><h5 id="resolver" tabindex="-1"><a class="header-anchor" href="#resolver"><span>resolver</span></a></h5><p>() =&gt; <code>undefined</code> | <code>IBlueprint</code></p><p>A function that returns the blueprint.</p><h4 id="returns-51" tabindex="-1"><a class="header-anchor" href="#returns-51"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="setcharset" tabindex="-1"><a class="header-anchor" href="#setcharset"><span>setCharset()</span></a></h3><blockquote><p><strong>setCharset</strong>(<code>value</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L345" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:345</a></p><p>Set the character set for the response.</p><h4 id="parameters-20" tabindex="-1"><a class="header-anchor" href="#parameters-20"><span>Parameters</span></a></h4><h5 id="value-3" tabindex="-1"><a class="header-anchor" href="#value-3"><span>value</span></a></h5><p><code>string</code></p><p>The character encoding to use.</p><h4 id="returns-52" tabindex="-1"><a class="header-anchor" href="#returns-52"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="setcontent" tabindex="-1"><a class="header-anchor" href="#setcontent"><span>setContent()</span></a></h3><blockquote><p><strong>setContent</strong>(<code>value</code>, <code>options</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L284" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:284</a></p><p>Set the response content. If the content should be JSON, it will be converted appropriately.</p><h4 id="parameters-21" tabindex="-1"><a class="header-anchor" href="#parameters-21"><span>Parameters</span></a></h4><h5 id="value-4" tabindex="-1"><a class="header-anchor" href="#value-4"><span>value</span></a></h5><p><code>unknown</code></p><p>The content to set.</p><h5 id="options-3" tabindex="-1"><a class="header-anchor" href="#options-3"><span>options</span></a></h5>',83)),t("p",null,[e[50]||(e[50]=t("code",null,"Partial",-1)),e[51]||(e[51]=o("<")),s(n,{to:"/api/http-core/options/HttpConfig/interfaces/HttpJsonConfig.html"},{default:a(()=>e[49]||(e[49]=[t("code",null,"HttpJsonConfig",-1)])),_:1,__:[49]}),e[52]||(e[52]=o("> = ")),e[53]||(e[53]=t("code",null,"{}",-1))]),e[78]||(e[78]=r('<p>The JSON options.</p><h4 id="returns-53" tabindex="-1"><a class="header-anchor" href="#returns-53"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><h4 id="overrides-2" tabindex="-1"><a class="header-anchor" href="#overrides-2"><span>Overrides</span></a></h4><p><code>OutgoingResponse.setContent</code></p><hr><h3 id="setcontentheaders" tabindex="-1"><a class="header-anchor" href="#setcontentheaders"><span>setContentHeaders()</span></a></h3><blockquote><p><code>protected</code> <strong>setContentHeaders</strong>(): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L733" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:733</a></p><p>Set content headers such as Content-Length and ETag.</p><h4 id="returns-54" tabindex="-1"><a class="header-anchor" href="#returns-54"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of the response for chaining.</p><hr><h3 id="setcontenttype" tabindex="-1"><a class="header-anchor" href="#setcontenttype"><span>setContentType()</span></a></h3><blockquote><p><strong>setContentType</strong>(<code>value</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L357" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:357</a></p><p>Set the content type of the response.</p><h4 id="parameters-22" tabindex="-1"><a class="header-anchor" href="#parameters-22"><span>Parameters</span></a></h4><h5 id="value-5" tabindex="-1"><a class="header-anchor" href="#value-5"><span>value</span></a></h5><p><code>string</code></p><p>The MIME type for the response.</p><h4 id="returns-55" tabindex="-1"><a class="header-anchor" href="#returns-55"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><h4 id="throws-2" tabindex="-1"><a class="header-anchor" href="#throws-2"><span>Throws</span></a></h4><p>InternalServerError if the provided MIME type is invalid.</p><hr><h3 id="setcontenttypeifneeded" tabindex="-1"><a class="header-anchor" href="#setcontenttypeifneeded"><span>setContentTypeIfNeeded()</span></a></h3><blockquote><p><code>protected</code> <strong>setContentTypeIfNeeded</strong>(): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L679" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:679</a></p><p>Set the content type if it&#39;s not already set.</p><h4 id="returns-56" tabindex="-1"><a class="header-anchor" href="#returns-56"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of the response for chaining.</p><hr><h3 id="setcookie" tabindex="-1"><a class="header-anchor" href="#setcookie"><span>setCookie()</span></a></h3><blockquote><p><strong>setCookie</strong>(<code>name</code>, <code>value</code>, <code>options</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L297" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:297</a></p><p>Set a cookie for the response.</p><h4 id="parameters-23" tabindex="-1"><a class="header-anchor" href="#parameters-23"><span>Parameters</span></a></h4><h5 id="name-3" tabindex="-1"><a class="header-anchor" href="#name-3"><span>name</span></a></h5><p><code>string</code></p><p>The name of the cookie.</p><h5 id="value-6" tabindex="-1"><a class="header-anchor" href="#value-6"><span>value</span></a></h5><p><code>unknown</code></p><p>The value of the cookie.</p><h5 id="options-4" tabindex="-1"><a class="header-anchor" href="#options-4"><span>options</span></a></h5>',49)),t("p",null,[s(n,{to:"/api/http-core/declarations/interfaces/CookieOptions.html"},{default:a(()=>e[54]||(e[54]=[t("code",null,"CookieOptions",-1)])),_:1,__:[54]}),e[55]||(e[55]=o(" = ")),e[56]||(e[56]=t("code",null,"{}",-1))]),e[79]||(e[79]=r('<p>Optional settings for the cookie.</p><h4 id="returns-57" tabindex="-1"><a class="header-anchor" href="#returns-57"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="setetag" tabindex="-1"><a class="header-anchor" href="#setetag"><span>setEtag()</span></a></h3><blockquote><p><strong>setEtag</strong>(<code>etag?</code>, <code>weak?</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L418" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:418</a></p><p>Set the ETag for the response.</p><h4 id="parameters-24" tabindex="-1"><a class="header-anchor" href="#parameters-24"><span>Parameters</span></a></h4><h5 id="etag-1" tabindex="-1"><a class="header-anchor" href="#etag-1"><span>etag?</span></a></h5><p><code>string</code></p><p>The ETag value to set.</p><h5 id="weak" tabindex="-1"><a class="header-anchor" href="#weak"><span>weak?</span></a></h5><p><code>boolean</code> = <code>false</code></p><p>Whether the ETag should be marked as weak.</p><h4 id="returns-58" tabindex="-1"><a class="header-anchor" href="#returns-58"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="setheader" tabindex="-1"><a class="header-anchor" href="#setheader"><span>setHeader()</span></a></h3><blockquote><p><strong>setHeader</strong>(<code>key</code>, <code>value</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L172" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:172</a></p><p>Set a single header for the response. If the header is &quot;Content-Type,&quot; ensures charset is set appropriately.</p><h4 id="parameters-25" tabindex="-1"><a class="header-anchor" href="#parameters-25"><span>Parameters</span></a></h4><h5 id="key-3" tabindex="-1"><a class="header-anchor" href="#key-3"><span>key</span></a></h5><p><code>string</code></p><p>The header name.</p><h5 id="value-7" tabindex="-1"><a class="header-anchor" href="#value-7"><span>value</span></a></h5><p>The value of the header.</p><p><code>string</code> | <code>string</code>[]</p><h4 id="returns-59" tabindex="-1"><a class="header-anchor" href="#returns-59"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="setheaders" tabindex="-1"><a class="header-anchor" href="#setheaders"><span>setHeaders()</span></a></h3><blockquote><p><strong>setHeaders</strong>(<code>values</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L158" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:158</a></p><p>Set multiple headers for the response.</p><h4 id="parameters-26" tabindex="-1"><a class="header-anchor" href="#parameters-26"><span>Parameters</span></a></h4><h5 id="values" tabindex="-1"><a class="header-anchor" href="#values"><span>values</span></a></h5>',41)),t("p",null,[s(n,{to:"/api/http-core/declarations/type-aliases/HeadersType.html"},{default:a(()=>e[57]||(e[57]=[t("code",null,"HeadersType",-1)])),_:1,__:[57]})]),e[80]||(e[80]=r('<p>A key-value pair of headers to be set.</p><h4 id="returns-60" tabindex="-1"><a class="header-anchor" href="#returns-60"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="setincomingeventresolver" tabindex="-1"><a class="header-anchor" href="#setincomingeventresolver"><span>setIncomingEventResolver()</span></a></h3><blockquote><p><strong>setIncomingEventResolver</strong>(<code>resolver</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L449" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:449</a></p><p>Set the resolver for the incoming HTTP event.</p><h4 id="parameters-27" tabindex="-1"><a class="header-anchor" href="#parameters-27"><span>Parameters</span></a></h4><h5 id="resolver-1" tabindex="-1"><a class="header-anchor" href="#resolver-1"><span>resolver</span></a></h5>',11)),t("p",null,[e[59]||(e[59]=o("() => ")),s(n,{to:"/api/http-core/IncomingHttpEvent/classes/IncomingHttpEvent.html"},{default:a(()=>e[58]||(e[58]=[t("code",null,"IncomingHttpEvent",-1)])),_:1,__:[58]})]),e[81]||(e[81]=r('<p>A function that returns the incoming HTTP event.</p><h4 id="returns-61" tabindex="-1"><a class="header-anchor" href="#returns-61"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="setlastmodified" tabindex="-1"><a class="header-anchor" href="#setlastmodified"><span>setLastModified()</span></a></h3><blockquote><p><strong>setLastModified</strong>(<code>date?</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L434" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:434</a></p><p>Set the Last-Modified header for the response.</p><h4 id="parameters-28" tabindex="-1"><a class="header-anchor" href="#parameters-28"><span>Parameters</span></a></h4><h5 id="date" tabindex="-1"><a class="header-anchor" href="#date"><span>date?</span></a></h5><p><code>Date</code></p><p>The date to set as the Last-Modified header.</p><h4 id="returns-62" tabindex="-1"><a class="header-anchor" href="#returns-62"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="setlinks" tabindex="-1"><a class="header-anchor" href="#setlinks"><span>setLinks()</span></a></h3><blockquote><p><strong>setLinks</strong>(<code>links</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L382" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:382</a></p><p>Set link headers for the response.</p><h4 id="parameters-29" tabindex="-1"><a class="header-anchor" href="#parameters-29"><span>Parameters</span></a></h4><h5 id="links" tabindex="-1"><a class="header-anchor" href="#links"><span>links</span></a></h5><p><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p><p>An object representing links to set.</p><h4 id="returns-63" tabindex="-1"><a class="header-anchor" href="#returns-63"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="setstatus" tabindex="-1"><a class="header-anchor" href="#setstatus"><span>setStatus()</span></a></h3><blockquote><p><strong>setStatus</strong>(<code>code</code>, <code>text?</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L267" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:267</a></p><p>Set the HTTP status code of the response. Also sets a default status message if none is provided.</p><h4 id="parameters-30" tabindex="-1"><a class="header-anchor" href="#parameters-30"><span>Parameters</span></a></h4><h5 id="code" tabindex="-1"><a class="header-anchor" href="#code"><span>code</span></a></h5><p><code>number</code></p><p>The HTTP status code.</p><h5 id="text" tabindex="-1"><a class="header-anchor" href="#text"><span>text?</span></a></h5><p><code>string</code></p><p>Optional status message.</p><h4 id="returns-64" tabindex="-1"><a class="header-anchor" href="#returns-64"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><h4 id="throws-3" tabindex="-1"><a class="header-anchor" href="#throws-3"><span>Throws</span></a></h4><p>InternalServerError if the status code is invalid.</p><h4 id="overrides-3" tabindex="-1"><a class="header-anchor" href="#overrides-3"><span>Overrides</span></a></h4><p><code>OutgoingResponse.setStatus</code></p><hr><h3 id="settype" tabindex="-1"><a class="header-anchor" href="#settype"><span>setType()</span></a></h3><blockquote><p><strong>setType</strong>(<code>value</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L372" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:372</a></p><p>Set the content type by file extension.</p><h4 id="parameters-31" tabindex="-1"><a class="header-anchor" href="#parameters-31"><span>Parameters</span></a></h4><h5 id="value-8" tabindex="-1"><a class="header-anchor" href="#value-8"><span>value</span></a></h5><p><code>string</code></p><p>The file extension.</p><h4 id="returns-65" tabindex="-1"><a class="header-anchor" href="#returns-65"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance of OutgoingHttpResponse for chaining.</p><hr><h3 id="shouldbejson" tabindex="-1"><a class="header-anchor" href="#shouldbejson"><span>shouldBeJson()</span></a></h3><blockquote><p><code>protected</code> <strong>shouldBeJson</strong>(<code>content</code>): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L806" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:806</a></p><p>Determine if the content should be serialized as JSON.</p><h4 id="parameters-32" tabindex="-1"><a class="header-anchor" href="#parameters-32"><span>Parameters</span></a></h4><h5 id="content-3" tabindex="-1"><a class="header-anchor" href="#content-3"><span>content</span></a></h5><p><code>unknown</code></p><p>The content to check.</p><h4 id="returns-66" tabindex="-1"><a class="header-anchor" href="#returns-66"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the content should be serialized as JSON, otherwise false.</p><hr><h3 id="stringify" tabindex="-1"><a class="header-anchor" href="#stringify"><span>stringify()</span></a></h3><blockquote><p><code>protected</code> <strong>stringify</strong>(<code>value</code>, <code>replacer?</code>, <code>spaces?</code>, <code>escape?</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L878" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:878</a></p><p>Convert the given value to a JSON string with optional escaping.</p><h4 id="parameters-33" tabindex="-1"><a class="header-anchor" href="#parameters-33"><span>Parameters</span></a></h4><h5 id="value-9" tabindex="-1"><a class="header-anchor" href="#value-9"><span>value</span></a></h5><p><code>unknown</code></p><p>The value to convert.</p><h5 id="replacer" tabindex="-1"><a class="header-anchor" href="#replacer"><span>replacer?</span></a></h5><p>(<code>this</code>, <code>key</code>, <code>value</code>) =&gt; <code>unknown</code></p><p>A function or array that alters the behavior of the stringification process.</p><h5 id="spaces" tabindex="-1"><a class="header-anchor" href="#spaces"><span>spaces?</span></a></h5><p><code>string</code></p><p>The number of spaces to use for pretty-printing the JSON string.</p><h5 id="escape" tabindex="-1"><a class="header-anchor" href="#escape"><span>escape?</span></a></h5><p><code>boolean</code></p><p>Whether to escape special characters.</p><h4 id="returns-67" tabindex="-1"><a class="header-anchor" href="#returns-67"><span>Returns</span></a></h4><p><code>string</code></p><p>The JSON string representation of the value.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><blockquote><p><code>static</code> <strong>create</strong>&lt;<code>T</code>&gt;(<code>options</code>): <code>T</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/OutgoingHttpResponse.ts#L45" target="_blank" rel="noopener noreferrer">src/OutgoingHttpResponse.ts:45</a></p><p>Create an instance of OutgoingHttpResponse.</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h4><h5 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h5><p><code>T</code> <em>extends</em> <code>OutgoingHttpResponse</code> = <code>OutgoingHttpResponse</code></p><h4 id="parameters-34" tabindex="-1"><a class="header-anchor" href="#parameters-34"><span>Parameters</span></a></h4><h5 id="options-5" tabindex="-1"><a class="header-anchor" href="#options-5"><span>options</span></a></h5>',102)),t("p",null,[s(n,{to:"/api/http-core/OutgoingHttpResponse/interfaces/OutgoingHttpResponseOptions.html"},{default:a(()=>e[60]||(e[60]=[t("code",null,"OutgoingHttpResponseOptions",-1)])),_:1,__:[60]})]),e[82]||(e[82]=t("p",null,"Options for the outgoing HTTP response.",-1)),e[83]||(e[83]=t("h4",{id:"returns-68",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-68"},[t("span",null,"Returns")])],-1)),e[84]||(e[84]=t("p",null,[t("code",null,"T")],-1)),e[85]||(e[85]=t("p",null,"A new instance of OutgoingHttpResponse.",-1)),e[86]||(e[86]=t("h4",{id:"overrides-4",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#overrides-4"},[t("span",null,"Overrides")])],-1)),e[87]||(e[87]=t("p",null,[t("code",null,"OutgoingResponse.create")],-1))])}const f=p(c,[["render",l]]),m=JSON.parse('{"path":"/api/http-core/OutgoingHttpResponse/classes/OutgoingHttpResponse.html","title":"Class: OutgoingHttpResponse","lang":"en-US","frontmatter":{"description":"/ / OutgoingHttpResponse Class: OutgoingHttpResponse Defined in: src/OutgoingHttpResponse.ts:28 Class representing an Outgoing HTTP Response. Extends the OutgoingResponse class ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: OutgoingHttpResponse\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/http-core/OutgoingHttpResponse/classes/OutgoingHttpResponse.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: OutgoingHttpResponse"}],["meta",{"property":"og:description","content":"/ / OutgoingHttpResponse Class: OutgoingHttpResponse Defined in: src/OutgoingHttpResponse.ts:28 Class representing an Outgoing HTTP Response. Extends the OutgoingResponse class ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":9.62,"words":2887},"filePathRelative":"api/http-core/OutgoingHttpResponse/classes/OutgoingHttpResponse.md","autoDesc":true}');export{f as comp,m as data};
