import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a,b as o,e as t,w as p,d as e,r as i,o as d}from"./app-7vCtLRjQ.js";const u={};function c(m,s){const n=i("RouteLink");return d(),l("div",null,[a("p",null,[t(n,{to:"/api/aws-lambda-adapter/"},{default:p(()=>s[0]||(s[0]=[a("strong",null,"AWS Lambda Adapter Documentation v0.0.2",-1)])),_:1,__:[0]})]),s[25]||(s[25]=a("hr",null,null,-1)),a("p",null,[t(n,{to:"/api/aws-lambda-adapter/modules.html"},{default:p(()=>s[1]||(s[1]=[e("AWS Lambda Adapter Documentation")])),_:1,__:[1]}),s[3]||(s[3]=e(" / ")),t(n,{to:"/api/aws-lambda-adapter/RawHttpResponseWrapper/"},{default:p(()=>s[2]||(s[2]=[e("RawHttpResponseWrapper")])),_:1,__:[2]}),s[4]||(s[4]=e(" / RawHttpResponseWrapper"))]),s[26]||(s[26]=o('<h1 id="class-rawhttpresponsewrapper" tabindex="-1"><a class="header-anchor" href="#class-rawhttpresponsewrapper"><span>Class: RawHttpResponseWrapper</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/aws-lambda-adapter/blob/9de4b38bb7a5afd4d5599dae1399969698a2422d/src/RawHttpResponseWrapper.ts#L12" target="_blank" rel="noopener noreferrer">src/RawHttpResponseWrapper.ts:12</a></p><p>Wrapper for HTTP raw responses in AWS Lambda.</p><p>The <code>RawHttpResponseWrapper</code> is responsible for constructing and returning a raw HTTP response that conforms to the expected structure for AWS Lambda. It implements the <code>IRawResponseWrapper</code> interface, ensuring compatibility with the Stone.js framework.</p><h2 id="implements" tabindex="-1"><a class="header-anchor" href="#implements"><span>Implements</span></a></h2>',5)),a("ul",null,[a("li",null,[s[6]||(s[6]=a("code",null,"IRawResponseWrapper",-1)),s[7]||(s[7]=e("<")),t(n,{to:"/api/aws-lambda-adapter/declarations/type-aliases/RawHttpResponse.html"},{default:p(()=>s[5]||(s[5]=[a("code",null,"RawHttpResponse",-1)])),_:1,__:[5]}),s[8]||(s[8]=e(">"))])]),s[27]||(s[27]=a("h2",{id:"methods",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#methods"},[a("span",null,"Methods")])],-1)),s[28]||(s[28]=a("h3",{id:"respond",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#respond"},[a("span",null,"respond()")])],-1)),a("blockquote",null,[a("p",null,[s[10]||(s[10]=a("strong",null,"respond",-1)),s[11]||(s[11]=e("(): ")),t(n,{to:"/api/aws-lambda-adapter/declarations/interfaces/RawHttpResponseOptions.html"},{default:p(()=>s[9]||(s[9]=[a("code",null,"RawHttpResponseOptions",-1)])),_:1,__:[9]})])]),s[29]||(s[29]=o('<p>Defined in: <a href="https://github.com/stonemjs/aws-lambda-adapter/blob/9de4b38bb7a5afd4d5599dae1399969698a2422d/src/RawHttpResponseWrapper.ts#L66" target="_blank" rel="noopener noreferrer">src/RawHttpResponseWrapper.ts:66</a></p><p>Constructs and returns the raw HTTP response.</p><p>The <code>respond</code> method generates a <code>RawHttpResponse</code> object based on the provided options. If any required fields are missing, it assigns default values:</p><ul><li><code>statusCode</code>: Defaults to <code>500</code>.</li><li><code>statusMessage</code>: Defaults to an empty string.</li><li><code>body</code>: Converts non-string bodies to a JSON string.</li></ul><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4>',5)),a("p",null,[t(n,{to:"/api/aws-lambda-adapter/declarations/interfaces/RawHttpResponseOptions.html"},{default:p(()=>s[12]||(s[12]=[a("code",null,"RawHttpResponseOptions",-1)])),_:1,__:[12]})]),s[30]||(s[30]=o(`<p>A <code>RawHttpResponse</code> object.</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> responseWrapper <span class="token operator">=</span> RawHttpResponseWrapper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> body<span class="token operator">:</span> <span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">,</span> statusCode<span class="token operator">:</span> <span class="token number">200</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> response <span class="token operator">=</span> responseWrapper<span class="token punctuation">.</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { statusCode: 500, statusMessage: &#39;&#39;, body: &#39;Hello, world!&#39;, headers: undefined }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of"><span>Implementation of</span></a></h4><p><code>IRawResponseWrapper.respond</code></p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3>`,7)),a("blockquote",null,[a("p",null,[s[14]||(s[14]=a("code",null,"static",-1)),s[15]||(s[15]=e()),s[16]||(s[16]=a("strong",null,"create",-1)),s[17]||(s[17]=e("(")),s[18]||(s[18]=a("code",null,"options",-1)),s[19]||(s[19]=e("): ")),t(n,{to:"/api/aws-lambda-adapter/RawHttpResponseWrapper/classes/RawHttpResponseWrapper.html"},{default:p(()=>s[13]||(s[13]=[a("code",null,"RawHttpResponseWrapper",-1)])),_:1,__:[13]})])]),s[31]||(s[31]=o('<p>Defined in: <a href="https://github.com/stonemjs/aws-lambda-adapter/blob/9de4b38bb7a5afd4d5599dae1399969698a2422d/src/RawHttpResponseWrapper.ts#L34" target="_blank" rel="noopener noreferrer">src/RawHttpResponseWrapper.ts:34</a></p><p>Factory method to create an instance of <code>RawHttpResponseWrapper</code>.</p><p>This method accepts partial response options, allowing the user to configure only the required fields. It initializes the wrapper with these options.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5>',5)),a("p",null,[s[21]||(s[21]=a("code",null,"Partial",-1)),s[22]||(s[22]=e("<")),t(n,{to:"/api/aws-lambda-adapter/declarations/interfaces/RawHttpResponseOptions.html"},{default:p(()=>s[20]||(s[20]=[a("code",null,"RawHttpResponseOptions",-1)])),_:1,__:[20]}),s[23]||(s[23]=e(">"))]),s[32]||(s[32]=a("p",null,"Partial options to configure the HTTP response.",-1)),s[33]||(s[33]=a("h4",{id:"returns-1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#returns-1"},[a("span",null,"Returns")])],-1)),a("p",null,[t(n,{to:"/api/aws-lambda-adapter/RawHttpResponseWrapper/classes/RawHttpResponseWrapper.html"},{default:p(()=>s[24]||(s[24]=[a("code",null,"RawHttpResponseWrapper",-1)])),_:1,__:[24]})]),s[34]||(s[34]=o(`<p>A new instance of <code>RawHttpResponseWrapper</code>.</p><h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> responseWrapper <span class="token operator">=</span> RawHttpResponseWrapper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  statusCode<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line">  body<span class="token operator">:</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;Success&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  headers<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> response <span class="token operator">=</span> responseWrapper<span class="token punctuation">.</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { statusCode: 200, body: &#39;{&quot;message&quot;:&quot;Success&quot;}&#39;, headers: { &#39;Content-Type&#39;: &#39;application/json&#39; } }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3))])}const b=r(u,[["render",c]]),k=JSON.parse('{"path":"/api/aws-lambda-adapter/RawHttpResponseWrapper/classes/RawHttpResponseWrapper.html","title":"Class: RawHttpResponseWrapper","lang":"en-US","frontmatter":{"description":"/ / RawHttpResponseWrapper Class: RawHttpResponseWrapper Defined in: src/RawHttpResponseWrapper.ts:12 Wrapper for HTTP raw responses in AWS Lambda. The RawHttpResponseWrapper is...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: RawHttpResponseWrapper\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/aws-lambda-adapter/RawHttpResponseWrapper/classes/RawHttpResponseWrapper.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: RawHttpResponseWrapper"}],["meta",{"property":"og:description","content":"/ / RawHttpResponseWrapper Class: RawHttpResponseWrapper Defined in: src/RawHttpResponseWrapper.ts:12 Wrapper for HTTP raw responses in AWS Lambda. The RawHttpResponseWrapper is..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.88,"words":264},"filePathRelative":"api/aws-lambda-adapter/RawHttpResponseWrapper/classes/RawHttpResponseWrapper.md","autoDesc":true}');export{b as comp,k as data};
