import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as t,o as p}from"./app-BJyWHIWB.js";const r={};function n(c,e){return p(),s("div",null,e[0]||(e[0]=[t(`<h1 id="type-alias-abstractclasstype-type" tabindex="-1"><a class="header-anchor" href="#type-alias-abstractclasstype-type"><span>Type Alias: AbstractClassType()&lt;Type&gt;</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">type</span> <span class="token class-name">AbstractClassType<span class="token operator">&lt;</span>Type<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Type<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Abstract ClassType Type.</p><p>Represents a class type, including abstract classes.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type"><span>Type</span></a></h3><p><code>Type</code> = <code>any</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="args" tabindex="-1"><a class="header-anchor" href="#args"><span>args</span></a></h3><p>...<code>any</code>[]</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>Type</code></p>`,12)]))}const l=a(r,[["render",n]]),y=JSON.parse('{"path":"/api/core/declarations/type-aliases/AbstractClassType.html","title":"Type Alias: AbstractClassType()<Type>","lang":"en-US","frontmatter":{"description":"Type Alias: AbstractClassType()<Type> Abstract ClassType Type. Represents a class type, including abstract classes. Type Parameters Type Type = any Parameters args ...any[] Retu...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: AbstractClassType()<Type>\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/declarations/type-aliases/AbstractClassType.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: AbstractClassType()<Type>"}],["meta",{"property":"og:description","content":"Type Alias: AbstractClassType()<Type> Abstract ClassType Type. Represents a class type, including abstract classes. Type Parameters Type Type = any Parameters args ...any[] Retu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.1,"words":31},"filePathRelative":"api/core/declarations/type-aliases/AbstractClassType.md","autoDesc":true}');export{l as comp,y as data};
