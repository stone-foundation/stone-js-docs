import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as n,o}from"./app-D3YQYQ8j.js";const s={};function r(c,e){return o(),a("div",null,e[0]||(e[0]=[n(`<h1 id="function-setmethodmetadata" tabindex="-1"><a class="header-anchor" href="#function-setmethodmetadata"><span>Function: setMethodMetadata()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">setMethodMetadata</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token operator">:</span> MethodDecorator<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Set metadata on a class method using a method decorator.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3><p><code>T</code> <em>extends</em> <code>Function</code> = <code>Function</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="key" tabindex="-1"><a class="header-anchor" href="#key"><span>key</span></a></h3><p><code>PropertyKey</code></p><p>The key for the metadata entry.</p><h3 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value</span></a></h3><p><code>unknown</code></p><p>The value of the metadata entry.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>MethodDecorator</code></p><p>A method decorator function that sets the metadata.</p>`,16)]))}const i=t(s,[["render",r]]),h=JSON.parse('{"path":"/api/core/decorators/Metadata/functions/setMethodMetadata.html","title":"Function: setMethodMetadata()","lang":"en-US","frontmatter":{"description":"Function: setMethodMetadata() Set metadata on a class method using a method decorator. Type Parameters T T extends Function = Function Parameters key PropertyKey The key for the...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: setMethodMetadata()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/decorators/Metadata/functions/setMethodMetadata.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: setMethodMetadata()"}],["meta",{"property":"og:description","content":"Function: setMethodMetadata() Set metadata on a class method using a method decorator. Type Parameters T T extends Function = Function Parameters key PropertyKey The key for the..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.18,"words":53},"filePathRelative":"api/core/decorators/Metadata/functions/setMethodMetadata.md","autoDesc":true}');export{i as comp,h as data};
