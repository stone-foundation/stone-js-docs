import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as i,a as s,e as a,w as o,d as n,r as l,o as d}from"./app-CrbMk51G.js";const c={};function m(u,e){const t=l("RouteLink");return d(),p("div",null,[e[11]||(e[11]=i(`<h1 id="class-compressionmiddleware" tabindex="-1"><a class="header-anchor" href="#class-compressionmiddleware"><span>Class: CompressionMiddleware</span></a></h1><p>Kernel Middleware to compress response content based on the Accept-Encoding header.</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">new</span> <span class="token class-name">CompressionMiddleware</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> CompressionMiddleware<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>CompressionMiddleware</code></p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="handle" tabindex="-1"><a class="header-anchor" href="#handle"><span>handle()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>OutgoingHttpResponse<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Compress the response content based on the Accept-Encoding header.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="event" tabindex="-1"><a class="header-anchor" href="#event"><span>event</span></a></h5>`,13)),s("p",null,[a(t,{to:"/api/http-core/IncomingHttpEvent/classes/IncomingHttpEvent.html"},{default:o(()=>e[0]||(e[0]=[s("code",null,"IncomingHttpEvent",-1)])),_:1,__:[0]})]),e[12]||(e[12]=s("p",null,"The incoming HTTP event.",-1)),e[13]||(e[13]=s("h5",{id:"next",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#next"},[s("span",null,"next")])],-1)),s("p",null,[e[3]||(e[3]=s("code",null,"NextMiddleware",-1)),e[4]||(e[4]=n("<")),a(t,{to:"/api/http-core/IncomingHttpEvent/classes/IncomingHttpEvent.html"},{default:o(()=>e[1]||(e[1]=[s("code",null,"IncomingHttpEvent",-1)])),_:1,__:[1]}),e[5]||(e[5]=n(", ")),a(t,{to:"/api/http-core/OutgoingHttpResponse/classes/OutgoingHttpResponse.html"},{default:o(()=>e[2]||(e[2]=[s("code",null,"OutgoingHttpResponse",-1)])),_:1,__:[2]}),e[6]||(e[6]=n(">"))]),e[14]||(e[14]=s("p",null,"The next middleware in the pipeline.",-1)),e[15]||(e[15]=s("h4",{id:"returns-1",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#returns-1"},[s("span",null,"Returns")])],-1)),s("p",null,[e[8]||(e[8]=s("code",null,"Promise",-1)),e[9]||(e[9]=n("<")),a(t,{to:"/api/http-core/OutgoingHttpResponse/classes/OutgoingHttpResponse.html"},{default:o(()=>e[7]||(e[7]=[s("code",null,"OutgoingHttpResponse",-1)])),_:1,__:[7]}),e[10]||(e[10]=n(">"))]),e[16]||(e[16]=s("p",null,"The outgoing HTTP response.",-1))])}const w=r(c,[["render",m]]),C=JSON.parse('{"path":"/api/http-core/middleware/CompressionMiddleware/classes/CompressionMiddleware.html","title":"Class: CompressionMiddleware","lang":"en-US","frontmatter":{"description":"Class: CompressionMiddleware Kernel Middleware to compress response content based on the Accept-Encoding header. Constructors Constructor Returns CompressionMiddleware Methods h...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: CompressionMiddleware\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/http-core/middleware/CompressionMiddleware/classes/CompressionMiddleware.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: CompressionMiddleware"}],["meta",{"property":"og:description","content":"Class: CompressionMiddleware Kernel Middleware to compress response content based on the Accept-Encoding header. Constructors Constructor Returns CompressionMiddleware Methods h..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.23,"words":68},"filePathRelative":"api/http-core/middleware/CompressionMiddleware/classes/CompressionMiddleware.md","autoDesc":true}');export{w as comp,C as data};
