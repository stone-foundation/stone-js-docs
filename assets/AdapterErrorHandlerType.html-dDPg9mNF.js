import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as t,o as p}from"./app-CrbMk51G.js";const s={};function r(o,e){return p(),n("div",null,e[0]||(e[0]=[t(`<h1 id="type-alias-adaptererrorhandlertype-raweventtype-rawresponsetype-executioncontexttype" tabindex="-1"><a class="header-anchor" href="#type-alias-adaptererrorhandlertype-raweventtype-rawresponsetype-executioncontexttype"><span>Type Alias: AdapterErrorHandlerType&lt;RawEventType, RawResponseType, ExecutionContextType&gt;</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">type</span> <span class="token class-name">AdapterErrorHandlerType<span class="token operator">&lt;</span>RawEventType<span class="token punctuation">,</span> RawResponseType<span class="token punctuation">,</span> ExecutionContextType<span class="token operator">&gt;</span></span> <span class="token operator">=</span> </span>
<span class="line">  <span class="token operator">|</span> IAdapterErrorHandlerClass<span class="token operator">&lt;</span>RawEventType<span class="token punctuation">,</span> RawResponseType<span class="token punctuation">,</span> ExecutionContextType<span class="token operator">&gt;</span></span>
<span class="line">  <span class="token operator">|</span> FactoryAdapterErrorHandler<span class="token operator">&lt;</span>RawEventType<span class="token punctuation">,</span> RawResponseType<span class="token punctuation">,</span> ExecutionContextType<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">|</span> FunctionalAdapterErrorHandler<span class="token operator">&lt;</span>RawEventType<span class="token punctuation">,</span> RawResponseType<span class="token punctuation">,</span> ExecutionContextType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>AdapterErrorHandler Type.</p><p>Represents an error handler which can either be a class, a simple function or a factory function.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="raweventtype" tabindex="-1"><a class="header-anchor" href="#raweventtype"><span>RawEventType</span></a></h3><p><code>RawEventType</code></p><h3 id="rawresponsetype" tabindex="-1"><a class="header-anchor" href="#rawresponsetype"><span>RawResponseType</span></a></h3><p><code>RawResponseType</code></p><h3 id="executioncontexttype" tabindex="-1"><a class="header-anchor" href="#executioncontexttype"><span>ExecutionContextType</span></a></h3><p><code>ExecutionContextType</code></p>`,11)]))}const l=a(s,[["render",r]]),d=JSON.parse('{"path":"/api/core/declarations/type-aliases/AdapterErrorHandlerType.html","title":"Type Alias: AdapterErrorHandlerType<RawEventType, RawResponseType, ExecutionContextType>","lang":"en-US","frontmatter":{"description":"Type Alias: AdapterErrorHandlerType<RawEventType, RawResponseType, ExecutionContextType> AdapterErrorHandler Type. Represents an error handler which can either be a class, a sim...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: AdapterErrorHandlerType<RawEventType, RawResponseType, ExecutionContextType>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/declarations/type-aliases/AdapterErrorHandlerType.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: AdapterErrorHandlerType<RawEventType, RawResponseType, ExecutionContextType>"}],["meta",{"property":"og:description","content":"Type Alias: AdapterErrorHandlerType<RawEventType, RawResponseType, ExecutionContextType> AdapterErrorHandler Type. Represents an error handler which can either be a class, a sim..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.17,"words":51},"filePathRelative":"api/core/declarations/type-aliases/AdapterErrorHandlerType.md","autoDesc":true}');export{l as comp,d as data};
