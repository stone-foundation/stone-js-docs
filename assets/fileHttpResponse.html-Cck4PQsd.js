import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as s,a as t,e as a,d as r,w as o,r as l,o as d}from"./app-D3YQYQ8j.js";const c={};function u(h,e){const n=l("RouteLink");return d(),i("div",null,[e[4]||(e[4]=s(`<h1 id="function-filehttpresponse" tabindex="-1"><a class="header-anchor" href="#function-filehttpresponse"><span>Function: fileHttpResponse()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token function">fileHttpResponse</span><span class="token punctuation">(</span></span>
<span class="line">   file<span class="token punctuation">,</span> </span>
<span class="line">   statusCode<span class="token punctuation">,</span> </span>
<span class="line">   headers<span class="token punctuation">,</span> </span>
<span class="line">   contentDispositionType<span class="token punctuation">,</span> </span>
<span class="line">   autoEtag<span class="token punctuation">,</span> </span>
<span class="line">   autoLastModified<span class="token punctuation">)</span><span class="token operator">:</span> BinaryFileResponse<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Create a 200(OK) file OutgoingHttpResponse.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="file" tabindex="-1"><a class="header-anchor" href="#file"><span>file</span></a></h3><p>The file to send as the response.</p><p><code>string</code> | <code>File</code></p><h3 id="statuscode" tabindex="-1"><a class="header-anchor" href="#statuscode"><span>statusCode</span></a></h3><p><code>number</code> = <code>HTTP_OK</code></p><p>The status code of the response.</p><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>headers</span></a></h3>`,11)),t("p",null,[a(n,{to:"/api/http-core/declarations/type-aliases/HeadersType.html"},{default:o(()=>e[0]||(e[0]=[t("code",null,"HeadersType",-1)])),_:1,__:[0]}),e[1]||(e[1]=r(" = ")),e[2]||(e[2]=t("code",null,"{}",-1))]),e[5]||(e[5]=s('<p>The headers for the response.</p><h3 id="contentdispositiontype" tabindex="-1"><a class="header-anchor" href="#contentdispositiontype"><span>contentDispositionType</span></a></h3><p>The content disposition type (e.g., &quot;inline&quot; or &quot;attachment&quot;).</p><p><code>null</code> | <code>string</code></p><h3 id="autoetag" tabindex="-1"><a class="header-anchor" href="#autoetag"><span>autoEtag</span></a></h3><p><code>boolean</code> = <code>false</code></p><p>Whether to automatically generate an ETag.</p><h3 id="autolastmodified" tabindex="-1"><a class="header-anchor" href="#autolastmodified"><span>autoLastModified</span></a></h3><p><code>boolean</code> = <code>true</code></p><p>Whether to automatically set the Last-Modified header.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2>',11)),t("p",null,[a(n,{to:"/api/http-core/BinaryFileResponse/classes/BinaryFileResponse.html"},{default:o(()=>e[3]||(e[3]=[t("code",null,"BinaryFileResponse",-1)])),_:1,__:[3]})]),e[6]||(e[6]=t("p",null,"A new instance of BinaryFileResponse.",-1))])}const g=p(c,[["render",u]]),y=JSON.parse('{"path":"/api/http-core/HttpResponse/functions/fileHttpResponse.html","title":"Function: fileHttpResponse()","lang":"en-US","frontmatter":{"description":"Function: fileHttpResponse() Create a 200(OK) file OutgoingHttpResponse. Parameters file The file to send as the response. string | File statusCode number = HTTP_OK The status c...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: fileHttpResponse()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/http-core/HttpResponse/functions/fileHttpResponse.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: fileHttpResponse()"}],["meta",{"property":"og:description","content":"Function: fileHttpResponse() Create a 200(OK) file OutgoingHttpResponse. Parameters file The file to send as the response. string | File statusCode number = HTTP_OK The status c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.29,"words":87},"filePathRelative":"api/http-core/HttpResponse/functions/fileHttpResponse.md","autoDesc":true}');export{g as comp,y as data};
