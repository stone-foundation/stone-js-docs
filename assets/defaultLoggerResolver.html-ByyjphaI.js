import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as i,a as t,e as n,w as r,d as a,r as p,o as u}from"./app-CrbMk51G.js";const c={};function g(d,e){const o=p("RouteLink");return u(),l("div",null,[e[2]||(e[2]=i(`<h1 id="function-defaultloggerresolver" tabindex="-1"><a class="header-anchor" href="#function-defaultloggerresolver"><span>Function: defaultLoggerResolver()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token function">defaultLoggerResolver</span><span class="token punctuation">(</span>blueprint<span class="token punctuation">)</span><span class="token operator">:</span> ConsoleLogger<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Default logger resolver function.</p><p>This function resolves the logger for the application, using the blueprint configuration. By default, it creates a <code>ConsoleLogger</code> instance with the provided blueprint.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="blueprint" tabindex="-1"><a class="header-anchor" href="#blueprint"><span>blueprint</span></a></h3>`,6)),t("p",null,[n(o,{to:"/api/core/declarations/type-aliases/IBlueprint.html"},{default:r(()=>e[0]||(e[0]=[t("code",null,"IBlueprint",-1)])),_:1,__:[0]})]),e[3]||(e[3]=t("p",null,"The blueprint configuration to use for the logger.",-1)),e[4]||(e[4]=t("h2",{id:"returns",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns"},[t("span",null,"Returns")])],-1)),t("p",null,[n(o,{to:"/api/core/logger/ConsoleLogger/classes/ConsoleLogger.html"},{default:r(()=>e[1]||(e[1]=[t("code",null,"ConsoleLogger",-1)])),_:1,__:[1]})]),e[5]||(e[5]=t("p",null,[a("A "),t("code",null,"ConsoleLogger"),a(" instance.")],-1))])}const h=s(c,[["render",g]]),v=JSON.parse('{"path":"/api/core/resolvers/functions/defaultLoggerResolver.html","title":"Function: defaultLoggerResolver()","lang":"en-US","frontmatter":{"description":"Function: defaultLoggerResolver() Default logger resolver function. This function resolves the logger for the application, using the blueprint configuration. By default, it crea...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: defaultLoggerResolver()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/resolvers/functions/defaultLoggerResolver.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: defaultLoggerResolver()"}],["meta",{"property":"og:description","content":"Function: defaultLoggerResolver() Default logger resolver function. This function resolves the logger for the application, using the blueprint configuration. By default, it crea..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.18,"words":53},"filePathRelative":"api/core/resolvers/functions/defaultLoggerResolver.md","autoDesc":true}');export{h as comp,v as data};
