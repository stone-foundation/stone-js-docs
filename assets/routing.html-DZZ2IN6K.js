import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as i,e as l,a as n,w as e,d as s,r as c,o as k}from"./app-C80Pz9_H.js";const m={};function v(b,a){const p=c("CodeTabs"),r=c("RouteLink");return k(),d("div",null,[a[29]||(a[29]=i('<p>The Stone Router is a flexible routing system for defining routes to application functionalities. It offers a robust API for defining routes, both implicitly and explicitly, using decorators, handling nested routes, and managing route parameters, aliases, and middleware, ensuring a smooth development experience.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><div class="hint-container important"><p class="hint-container-title">info</p><p>If you created your Stone.js project using the <code>create-stone</code> utility and chose the <code>api</code> template, the router should already be installed and ready to use.</p></div><p>Stone Router is available on the <a href="https://www.npmjs.com" target="_blank" rel="noopener noreferrer">npm registry</a> and can be installed as follows:</p>',4)),l(p,{data:[{id:"npm"},{id:"yarn"},{id:"pnpm"}],active:0,"tab-id":"shell"},{title0:e(({value:t,isActive:o})=>a[0]||(a[0]=[s("npm")])),title1:e(({value:t,isActive:o})=>a[1]||(a[1]=[s("yarn")])),title2:e(({value:t,isActive:o})=>a[2]||(a[2]=[s("pnpm")])),tab0:e(({value:t,isActive:o})=>a[3]||(a[3]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"npm"),s(" i @stone-js/router")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab1:e(({value:t,isActive:o})=>a[4]||(a[4]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(" @stone-js/router")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),tab2:e(({value:t,isActive:o})=>a[5]||(a[5]=[n("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh"},[n("pre",null,[n("code",{class:"language-bash"},[n("span",{class:"line"},[n("span",{class:"token function"},"pnpm"),s(),n("span",{class:"token function"},"add"),s(" @stone-js/router")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"})])],-1)])),_:1}),a[30]||(a[30]=i(`<h2 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration"><span>Configuration</span></a></h2><p>Given that Stone.js adopts an adaptive configuration approach, there are two ways to configure the router. Choose the one that suits you best:</p><h3 id="implicit-configuration" tabindex="-1"><a class="header-anchor" href="#implicit-configuration"><span>Implicit Configuration</span></a></h3><p>The simplest way is implicit configuration, which involves using the <code>RouterProvider</code> decorator.</p><p>An example with the decorator:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> StoneApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/core/decorators&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> RouterProvider <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/router/decorators&#39;</span></span>
<span class="line"></span>
<span class="line">@<span class="token function">StoneApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">@<span class="token function">RouterProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="explicit-configuration" tabindex="-1"><a class="header-anchor" href="#explicit-configuration"><span>Explicit Configuration</span></a></h3><p>The other way is through explicit configuration, which involves exporting the router&#39;s configuration and adapting it as needed.</p><p>Here is the command to export the configuration to the <code>config</code> directory:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> run <span class="token builtin class-name">export</span> @stone-js/router</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This script will create the file <code>config/router.mjs</code> or <code>config/router.ts</code> for TypeScript applications with default configurations, but you can adapt it to your needs as all configuration fields are documented within the file.</p><h2 id="route-definition" tabindex="-1"><a class="header-anchor" href="#route-definition"><span>Route Definition</span></a></h2><p>Stone.js, being a flexible framework, allows you to define your routes either explicitly or implicitly. You are free to choose the method that best suits your needs. For simplicity, we will focus on explicit definitions for now and cover implicit definitions in the controller section.</p><div class="hint-container important"><p class="hint-container-title">Important</p><p>For best practices, uniformity, and coherence, it is recommended to adopt and maintain a single approach to route definition per project.</p></div><h3 id="explicit-route-definition" tabindex="-1"><a class="header-anchor" href="#explicit-route-definition"><span>Explicit Route Definition</span></a></h3><p>The router provides several APIs for defining routes explicitly:</p><ul><li><code>router.get({})</code></li><li><code>router.post({})</code></li><li><code>router.put({})</code></li><li><code>router.patch({})</code></li><li><code>router.delete({})</code></li><li><code>router.options({})</code></li><li><code>router.any({})</code></li><li><code>router.match({})</code></li><li><code>router.register([])</code></li></ul><p>Here is a simple example of defining routes:</p>`,18)),l(p,{data:[{id:"JavaScript"},{id:"TypeScript"}],active:0,"tab-id":"js"},{title0:e(({value:t,isActive:o})=>a[6]||(a[6]=[s("JavaScript")])),title1:e(({value:t,isActive:o})=>a[7]||(a[7]=[s("TypeScript")])),tab0:e(({value:t,isActive:o})=>a[8]||(a[8]=[n("div",{class:"language-javascript line-numbers-mode","data-highlighter":"prismjs","data-ext":"js"},[n("pre",null,[n("code",{class:"language-javascript"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" HttpResponse "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone/http-core'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" StoneApp "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/core/decorators'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" RouterProvider "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/router/decorators'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" NodeHttpAdapter "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/node-adapter/decorators'")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("@"),n("span",{class:"token function"},"StoneApp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("@"),n("span",{class:"token function"},"RouterProvider"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("@"),n("span",{class:"token function"},"NodeHttpAdapter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"default"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Application"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"container"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("container "),n("span",{class:"token operator"},"="),s(" container")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("container"),n("span",{class:"token punctuation"},"."),s("router"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token function-variable function"},"action"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"eventContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" HttpResponse"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"json"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:t,isActive:o})=>a[9]||(a[9]=[n("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts"},[n("pre",null,[n("code",{class:"language-typescript"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" EventContext "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone/router'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" HttpResponse "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone/http-core'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" StoneApp "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/core/decorators'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" RouterProvider "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/router/decorators'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" NodeHttpAdapter "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/node-adapter/decorators'")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"CustomBinding"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  router"),n("span",{class:"token operator"},":"),s(" Router")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token decorator"},[n("span",{class:"token at operator"},"@"),n("span",{class:"token function"},"StoneApp")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token decorator"},[n("span",{class:"token at operator"},"@"),n("span",{class:"token function"},"RouterProvider")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token decorator"},[n("span",{class:"token at operator"},"@"),n("span",{class:"token function"},"NodeHttpAdapter")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"default"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Application"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"readonly"),s(" container"),n("span",{class:"token operator"},":"),s(" CustomBinding")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"constructor"),n("span",{class:"token punctuation"},"("),s("container"),n("span",{class:"token operator"},":"),s(" CustomBinding"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("container "),n("span",{class:"token operator"},"="),s(" container")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("container"),n("span",{class:"token punctuation"},"."),s("router"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("      path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token function-variable function"},"action"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),s("eventContext"),n("span",{class:"token operator"},":"),s(" EventContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" HttpResponse"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"json"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[31]||(a[31]=n("h4",{id:"register",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#register"},[n("span",null,"Register")])],-1)),a[32]||(a[32]=n("p",null,[s("The "),n("code",null,"register"),s(" API offers greater flexibility in defining routes, allowing us to group our routes in a hierarchical parent-child structure, which will be discussed later.")],-1)),a[33]||(a[33]=n("p",null,[s("Here is a simple example using the "),n("code",null,"register"),s(" API:")],-1)),l(p,{data:[{id:"JavaScript"},{id:"TypeScript"}],active:0,"tab-id":"js"},{title0:e(({value:t,isActive:o})=>a[10]||(a[10]=[s("JavaScript")])),title1:e(({value:t,isActive:o})=>a[11]||(a[11]=[s("TypeScript")])),tab0:e(({value:t,isActive:o})=>a[12]||(a[12]=[n("div",{class:"language-javascript line-numbers-mode","data-highlighter":"prismjs","data-ext":"js"},[n("pre",null,[n("code",{class:"language-javascript"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" HttpResponse "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone/http-core'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" StoneApp "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/core/decorators'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" RouterProvider "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/router/decorators'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" NodeHttpAdapter "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/node-adapter/decorators'")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("@"),n("span",{class:"token function"},"StoneApp"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("@"),n("span",{class:"token function"},"RouterProvider"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("@"),n("span",{class:"token function"},"NodeHttpAdapter"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"default"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Application"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("container"),n("span",{class:"token punctuation"},"."),s("router"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"register"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"routeDefinitions"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"routeDefinitions"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"[")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token literal-property property"},"method"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'GET'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token function-variable function"},"action"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"eventContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" HttpResponse"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"json"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:t,isActive:o})=>a[13]||(a[13]=[n("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts"},[n("pre",null,[n("code",{class:"language-typescript"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" StoneApp "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/core/decorators'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Router"),n("span",{class:"token punctuation"},","),s(" EventContext "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone/router'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" RouterProvider "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/router/decorators'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" NodeHttpAdapter "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/node-adapter/decorators'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" HttpResponse"),n("span",{class:"token punctuation"},","),s(" OutgoingHttpResponse "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone/http-core'")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"interface"),s(),n("span",{class:"token class-name"},"CustomBinding"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  router"),n("span",{class:"token operator"},":"),s(" Router")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token decorator"},[n("span",{class:"token at operator"},"@"),n("span",{class:"token function"},"StoneApp")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token decorator"},[n("span",{class:"token at operator"},"@"),n("span",{class:"token function"},"RouterProvider")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token decorator"},[n("span",{class:"token at operator"},"@"),n("span",{class:"token function"},"NodeHttpAdapter")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token keyword"},"default"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token boolean"},"true"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"Application"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"readonly"),s(" container"),n("span",{class:"token operator"},":"),s(" CustomBinding")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"boot"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),s("container"),n("span",{class:"token punctuation"},"."),s("router"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"register"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"this"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"routeDefinitions"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"routeDefinitions"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"[")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        method"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'GET'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token function-variable function"},"action"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),s("eventContext"),n("span",{class:"token operator"},":"),s(" EventContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" HttpResponse"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"json"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[34]||(a[34]=i('<p>As you can see, the routes are registered within the <code>boot</code> method because by the time this hook is executed, all services are registered and ready to be used.</p><h3 id="controller" tabindex="-1"><a class="header-anchor" href="#controller"><span>Controller</span></a></h3><p>The previous example served as a starting point to facilitate understanding, but the best way to use routes is with controllers. Controllers help you organize your application&#39;s functionalities and keep your main handler clean.</p><h4 id="implicit" tabindex="-1"><a class="header-anchor" href="#implicit"><span>Implicit</span></a></h4><p>The router provides several decorators for defining routes implicitly:</p><ul><li><code>Get({})</code></li><li><code>Post({})</code></li><li><code>Put({})</code></li><li><code>Patch({})</code></li><li><code>Delete({})</code></li><li><code>Options({})</code></li><li><code>Any({})</code></li><li><code>Match({})</code></li><li><code>Group({})</code></li><li><code>Controller({})</code></li></ul><div class="hint-container important"><p class="hint-container-title">info</p><p>All decorators are method decorators, except for <code>Controller</code>. The <code>Controller</code> decorator is mandatory in the context of implicit route definitions.</p></div><p>Here is a simple example of usage:</p>',8)),l(p,{data:[{id:"JavaScript"},{id:"TypeScript"}],active:0,"tab-id":"js"},{title0:e(({value:t,isActive:o})=>a[14]||(a[14]=[s("JavaScript")])),title1:e(({value:t,isActive:o})=>a[15]||(a[15]=[s("TypeScript")])),tab0:e(({value:t,isActive:o})=>a[16]||(a[16]=[n("div",{class:"language-javascript line-numbers-mode","data-highlighter":"prismjs","data-ext":"js"},[n("pre",null,[n("code",{class:"language-javascript"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" EventContext "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone/router'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" HttpResponse "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone/http-core'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Get"),n("span",{class:"token punctuation"},","),s(" Post"),n("span",{class:"token punctuation"},","),s(" Controller "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/router/decorators'")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("@"),n("span",{class:"token function"},"Controller"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserController"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  @"),n("span",{class:"token function"},"Get"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"getUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" event "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(" HttpResponse"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"json"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  @"),n("span",{class:"token function"},"Post"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},[n("span",{class:"token punctuation"},"{"),s(" event "),n("span",{class:"token punctuation"},"}")]),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(" HttpResponse"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"noContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:t,isActive:o})=>a[17]||(a[17]=[n("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts"},[n("pre",null,[n("code",{class:"language-typescript"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" EventContext "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone/router'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Get"),n("span",{class:"token punctuation"},","),s(" Post"),n("span",{class:"token punctuation"},","),s(" Controller "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/router/decorators'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" HttpResponse"),n("span",{class:"token punctuation"},","),s(" OutgoingHttpResponse "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone/http-core'")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token decorator"},[n("span",{class:"token at operator"},"@"),n("span",{class:"token function"},"Controller")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserController"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token decorator"},[n("span",{class:"token at operator"},"@"),n("span",{class:"token function"},"Get")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"getUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" event "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token operator"},":"),s(" EventContext"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(" OutgoingHttpResponse "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(" HttpResponse"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"json"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token decorator"},[n("span",{class:"token at operator"},"@"),n("span",{class:"token function"},"Post")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"saveUser"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" event "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token operator"},":"),s(" EventContext"),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(" OutgoingHttpResponse "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(" HttpResponse"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"noContent"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[35]||(a[35]=n("h4",{id:"explicit",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#explicit"},[n("span",null,"Explicit")])],-1)),a[36]||(a[36]=n("p",null,[s("Routes can also be explicitly defined for controllers to offer greater flexibility. To do this, we use a class with the mandatory "),n("code",null,"definitions"),s(" method that returns the route definitions. The "),n("code",null,"Routes"),s(" decorator ensures the automatic registration of routes and takes global options to apply to the routes as parameters.")],-1)),l(p,{data:[{id:"JavaScript"},{id:"TypeScript"}],active:0,"tab-id":"js"},{title0:e(({value:t,isActive:o})=>a[18]||(a[18]=[s("JavaScript")])),title1:e(({value:t,isActive:o})=>a[19]||(a[19]=[s("TypeScript")])),tab0:e(({value:t,isActive:o})=>a[20]||(a[20]=[n("div",{class:"language-javascript line-numbers-mode","data-highlighter":"prismjs","data-ext":"js"},[n("pre",null,[n("code",{class:"language-javascript"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token constant"},"GET"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"POST"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/http-core'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Routes "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/router/decorators'")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("@"),n("span",{class:"token function"},"Routes"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"prefix"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/v1'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// Define global routes config here")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"AppRoutes"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"definitions"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"[")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token literal-property property"},"method"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"GET"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token literal-property property"},"action"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"getUsers"),n("span",{class:"token operator"},":"),s(" UserController "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token literal-property property"},"method"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"POST"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token literal-property property"},"action"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token literal-property property"},"saveUser"),n("span",{class:"token operator"},":"),s(" UserController "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:t,isActive:o})=>a[21]||(a[21]=[n("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts"},[n("pre",null,[n("code",{class:"language-typescript"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(),n("span",{class:"token constant"},"GET"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token constant"},"POST"),s(),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/http-core'")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" Routes"),n("span",{class:"token punctuation"},","),s(" Definition "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/router/decorators'")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token decorator"},[n("span",{class:"token at operator"},"@"),n("span",{class:"token function"},"Routes")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},"{"),s(" prefix"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/v1'"),s(),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token comment"},"// Define global routes config here")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"AppRoutes"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"definitions"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token operator"},":"),s(" Definition"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(),n("span",{class:"token punctuation"},"[")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        method"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"GET"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        action"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(" getUsers"),n("span",{class:"token operator"},":"),s(" UserController "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"}"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        method"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token constant"},"POST"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("        action"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"{"),s(" saveUser"),n("span",{class:"token operator"},":"),s(" UserController "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"]")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[37]||(a[37]=i(`<p>As you can see, for a controller, the <code>action</code> takes a key-value literal object, with the key being the method to call and the value being the class that contains the method.</p><h3 id="naming-routes" tabindex="-1"><a class="header-anchor" href="#naming-routes"><span>Naming Routes</span></a></h3><p>To name our routes, we use the <code>name</code> property in the definition.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/v1/users&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;users.list&#39;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>Fallback</span></a></h3><p>To define a route as a fallback, simply add <code>fallback: true</code> in the definition.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/v1/:fallback*&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="grouping-routes" tabindex="-1"><a class="header-anchor" href="#grouping-routes"><span>Grouping Routes</span></a></h3><p>To group route definitions, use the <code>children</code> property, which takes an array of route definitions.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/users&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;users&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;list&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">getUsers</span><span class="token operator">:</span> UserController <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="route-parameters" tabindex="-1"><a class="header-anchor" href="#route-parameters"><span>Route Parameters</span></a></h2><p>Sometimes, we need to define dynamic segments for the path of our routes to have different matches for the same route. These dynamic segments are known as route parameters.</p><p>To define route parameters, simply use colons <code>:</code>.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line">  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/users/:id&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="optional-parameters" tabindex="-1"><a class="header-anchor" href="#optional-parameters"><span>Optional Parameters</span></a></h3><p>To define optional route parameters, we use a question mark <code>?</code>.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line">  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/users/:id?&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="validation-rules" tabindex="-1"><a class="header-anchor" href="#validation-rules"><span>Validation Rules</span></a></h3><p>We can apply validation rules to our route parameters:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/users/:id(\\\\d+)&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notes:</p><ul><li>Rules are defined within parentheses <code>(\\\\d+)</code>.</li><li>Rules must be Regex.</li><li>Backslashes in Regex must be escaped, so instead of <code>\\d+</code> we use <code>\\\\d+</code>.</li><li>Rules can be used with optional parameters <code>:id(\\\\d+)?</code>.</li></ul><h3 id="default-value" tabindex="-1"><a class="header-anchor" href="#default-value"><span>Default Value</span></a></h3><p>We can define default values for optional parameters. This value will be assigned to the route parameter when it is not defined in the request.</p><p>Default values are defined within route parameters using the <code>=</code> mark.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/users/:id(\\\\d+)?=defaultValue&#39;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notes:</p><ul><li>Default values are defined after the equal mark <code>=defaultValue</code>.</li><li>Default values must be the last item in the definition <code>:id(\\\\d+)?=defaultValue</code>.</li></ul><h2 id="eventcontext" tabindex="-1"><a class="header-anchor" href="#eventcontext"><span>EventContext</span></a></h2><p>When in the context of the Router, an <code>EventContext</code> instead of an <code>event</code> is passed as a parameter to all route actions.</p>`,30)),l(p,{data:[{id:"JavaScript"},{id:"TypeScript"}],active:0,"tab-id":"js"},{title0:e(({value:t,isActive:o})=>a[22]||(a[22]=[s("JavaScript")])),title1:e(({value:t,isActive:o})=>a[23]||(a[23]=[s("TypeScript")])),tab0:e(({value:t,isActive:o})=>a[24]||(a[24]=[n("div",{class:"language-javascript line-numbers-mode","data-highlighter":"prismjs","data-ext":"js"},[n("pre",null,[n("code",{class:"language-javascript"},[n("span",{class:"line"},[n("span",{class:"token comment"},"// Controller")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserController"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"getUsers"),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"eventContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("eventContext"),n("span",{class:"token punctuation"},"."),s("event"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Route definitions")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token literal-property property"},"path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function-variable function"},"action"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token parameter"},"eventContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(" console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("eventContext"),n("span",{class:"token punctuation"},"."),s("event"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab1:e(({value:t,isActive:o})=>a[25]||(a[25]=[n("div",{class:"language-typescript line-numbers-mode","data-highlighter":"prismjs","data-ext":"ts"},[n("pre",null,[n("code",{class:"language-typescript"},[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token punctuation"},"{"),s(" EventContext "),n("span",{class:"token punctuation"},"}"),s(),n("span",{class:"token keyword"},"from"),s(),n("span",{class:"token string"},"'@stone-js/router'"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Controller")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"export"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"UserController"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function"},"getUsers"),n("span",{class:"token punctuation"},"("),s("eventContext"),n("span",{class:"token operator"},":"),s(" EventContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token builtin"},"console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("eventContext"),n("span",{class:"token punctuation"},"."),s("event"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token comment"},"// Route definitions")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  path"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token string"},"'/users'"),n("span",{class:"token punctuation"},",")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token function-variable function"},"action"),n("span",{class:"token operator"},":"),s(),n("span",{class:"token punctuation"},"("),s("eventContext"),n("span",{class:"token operator"},":"),s(" EventContext"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token operator"},"=>"),s(),n("span",{class:"token builtin"},"console"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"log"),n("span",{class:"token punctuation"},"("),s("eventContext"),n("span",{class:"token punctuation"},"."),s("event"),n("span",{class:"token punctuation"},")")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1}),a[38]||(a[38]=i(`<p>Here is what the <code>EventContext</code> object looks like:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">type</span> <span class="token class-name">EventContext</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  route<span class="token operator">:</span> Route<span class="token punctuation">;</span> <span class="token comment">// Current route</span></span>
<span class="line">  event<span class="token operator">:</span> IncomingEvent <span class="token operator">|</span> IncomingHttpEvent<span class="token punctuation">;</span> <span class="token comment">// Current incoming event</span></span>
<span class="line">  request<span class="token operator">:</span> IncomingEvent <span class="token operator">|</span> IncomingHttpEvent<span class="token punctuation">;</span> <span class="token comment">// An alias of event</span></span>
<span class="line">  parameters<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// Route parameters if exist</span></span>
<span class="line">  params<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// An alias of parameters</span></span>
<span class="line">  body<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span> <span class="token comment">// Event body if exists</span></span>
<span class="line">  payload<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span> <span class="token comment">// An alias of body</span></span>
<span class="line">  query<span class="token operator">:</span> URLSearchParams<span class="token punctuation">;</span> <span class="token comment">// Event query parameters if exist</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="accessing-the-current-route" tabindex="-1"><a class="header-anchor" href="#accessing-the-current-route"><span>Accessing the Current Route</span></a></h2><p>You can access the current route from the router using the <code>current</code> method:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">router<span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You can access the name of the current route using the <code>currentRouteName</code> method:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">router<span class="token punctuation">.</span><span class="token function">currentRouteName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You can inspect the name of the current route using the <code>isCurrentRouteNamed</code> method:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">router<span class="token punctuation">.</span><span class="token function">isCurrentRouteNamed</span><span class="token punctuation">(</span><span class="token string">&#39;users.list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="middleware" tabindex="-1"><a class="header-anchor" href="#middleware"><span>Middleware</span></a></h2><p>To apply middleware directly to routes, use the <code>middleware</code> property, which takes an array of middleware.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line">  <span class="token literal-property property">middleware</span><span class="token operator">:</span> <span class="token punctuation">[</span>AuthMiddleware<span class="token punctuation">,</span> AdminMiddleware<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="generating-routes" tabindex="-1"><a class="header-anchor" href="#generating-routes"><span>Generating Routes</span></a></h2><p>To generate a URL from a route name, use the <code>generate</code> method from the router:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">router<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token string">&#39;users.list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="model-binding" tabindex="-1"><a class="header-anchor" href="#model-binding"><span>Model Binding</span></a></h2><p>Often, the values of route parameters are used to fetch models from the database. With model binding, Stone Router can fetch models for you and inject them directly into the routes. Instead of injecting a user ID, the router will inject the user model fetched from the database.</p><p>Let&#39;s define your model:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// Your model or service</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">resolveRouteBinding</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">findOneBy</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Fetch data example</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now let&#39;s define your controller:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line">@<span class="token function">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span></span>
<span class="line">  @<span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">{</span> </span>
<span class="line">    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/users/:user@id(\\\\d+)&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">bindings</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> User <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">getUsers</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> params <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span>user<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> HttpResponse<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In this example <code>:user@id(\\\\d+)</code>, the model will be injected into <code>params.user</code> and <code>id</code> will be used as the key for the <code>resolveRouteBinding</code> method to resolve the model.</p><p>Notes:</p><ul><li>The <code>bindings</code> option is used to bind models or services to route parameter values.</li><li>The <code>bindings</code> option takes a literal object as a value, with keys corresponding to parameter values and the model or service as the value.</li><li>The keys&#39; values in <code>bindings</code> must be classes.</li><li>The <code>resolveRouteBinding</code> method must be present in the model or service and can be a static or instance method.</li><li>The logic for fetching the model should be implemented in the <code>resolveRouteBinding</code> method.</li><li>It should return the model or null if no model is found.</li></ul><h2 id="listing-routes-from-the-cli" tabindex="-1"><a class="header-anchor" href="#listing-routes-from-the-cli"><span>Listing Routes from the CLI</span></a></h2><p>The Router allows you to list all the routes exposed within your application using the Stone.js CLI:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">stone router list</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="global-configuration" tabindex="-1"><a class="header-anchor" href="#global-configuration"><span>Global Configuration</span></a></h2><p>All global parameters can be defined via <code>RouterProvider</code> or <code>Routes</code>.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line"><span class="token comment">// Example with RouterProvider</span></span>
<span class="line">@<span class="token function">RouterProvider</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/v1&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">strict</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">skipMiddleware</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Example with Routes</span></span>
<span class="line">@<span class="token function">Routes</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">&#39;/v1&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">strict</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">skipMiddleware</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token operator">...</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppRoutes</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="further-reading" tabindex="-1"><a class="header-anchor" href="#further-reading"><span>Further Reading</span></a></h2>`,31)),n("p",null,[a[27]||(a[27]=s("We strongly recommend looking into the ")),l(r,{to:"/packages/router/getting-started.html"},{default:e(()=>a[26]||(a[26]=[s("router documentation")])),_:1,__:[26]}),a[28]||(a[28]=s(", as this section provides only a brief overview of the router's features. The documentation is very detailed and offers many use cases."))])])}const y=u(m,[["render",v]]),f=JSON.parse('{"path":"/docs/essentials/routing.html","title":"Routing","lang":"en-US","frontmatter":{"title":"Routing","description":"The Stone Router is a flexible routing system for defining routes to application functionalities. It offers a robust API for defining routes, both implicitly and explicitly, usi...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Routing\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/docs/essentials/routing.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Routing"}],["meta",{"property":"og:description","content":"The Stone Router is a flexible routing system for defining routes to application functionalities. It offers a robust API for defining routes, both implicitly and explicitly, usi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":5.94,"words":1783},"filePathRelative":"docs/essentials/routing.md","autoDesc":true}');export{y as comp,f as data};
