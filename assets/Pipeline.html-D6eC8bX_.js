import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,b as i,e as r,w as p,d as t,r as l,o as d}from"./app-B3SZc_3K.js";const u={};function h(b,e){const s=l("RouteLink");return d(),a("div",null,[n("p",null,[r(s,{to:"/api/pipeline/"},{default:p(()=>e[0]||(e[0]=[n("strong",null,"Pipeline Documentation",-1)])),_:1,__:[0]})]),e[84]||(e[84]=n("hr",null,null,-1)),n("p",null,[r(s,{to:"/api/pipeline/"},{default:p(()=>e[1]||(e[1]=[t("Pipeline Documentation")])),_:1,__:[1]}),e[3]||(e[3]=t(" / ")),r(s,{to:"/api/pipeline/Pipeline/"},{default:p(()=>e[2]||(e[2]=[t("Pipeline")])),_:1,__:[2]}),e[4]||(e[4]=t(" / Pipeline"))]),e[85]||(e[85]=i('<h1 id="class-pipeline-t-r-args" tabindex="-1"><a class="header-anchor" href="#class-pipeline-t-r-args"><span>Class: Pipeline&lt;T, R, Args&gt;</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L31" target="_blank" rel="noopener noreferrer">Pipeline.ts:31</a></p><p>Class representing a Pipeline.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3><p><code>T</code> = <code>unknown</code></p><p>The type of the passable object in the pipeline.</p><h3 id="r" tabindex="-1"><a class="header-anchor" href="#r"><span>R</span></a></h3><p><code>R</code> = <code>T</code></p><p>The type of the return value from the pipeline execution.</p><p>This class is responsible for managing and executing a series of operations on a set of passable values through multiple configurable pipes.</p><h3 id="args" tabindex="-1"><a class="header-anchor" href="#args"><span>Args</span></a></h3><p><code>Args</code> <em>extends</em> <code>any</code>[] = <code>any</code>[]</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><blockquote><p><code>protected</code> <strong>new Pipeline</strong>&lt;<code>T</code>, <code>R</code>, <code>Args</code>&gt;(<code>options?</code>): <code>Pipeline</code>&lt;<code>T</code>, <code>R</code>, <code>Args</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L68" target="_blank" rel="noopener noreferrer">Pipeline.ts:68</a></p><p>Initialize a new Pipeline instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options?</span></a></h5>',20)),n("p",null,[r(s,{to:"/api/pipeline/declarations/interfaces/PipelineOptions.html"},{default:p(()=>e[5]||(e[5]=[n("code",null,"PipelineOptions",-1)])),_:1,__:[5]}),e[6]||(e[6]=t("<")),e[7]||(e[7]=n("code",null,"T",-1)),e[8]||(e[8]=t(", ")),e[9]||(e[9]=n("code",null,"R",-1)),e[10]||(e[10]=t(", ")),e[11]||(e[11]=n("code",null,"Args",-1)),e[12]||(e[12]=t(">"))]),e[86]||(e[86]=i('<p>Optional Pipeline options.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Pipeline</code>&lt;<code>T</code>, <code>R</code>, <code>Args</code>&gt;</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="defaultpriority" tabindex="-1"><a class="header-anchor" href="#defaultpriority"><span>defaultPriority()</span></a></h3><blockquote><p><strong>defaultPriority</strong>(<code>value</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L83" target="_blank" rel="noopener noreferrer">Pipeline.ts:83</a></p><p>Set the default priority for pipes in the pipeline.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value</span></a></h5><p><code>number</code></p><p>The priority value to set.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Pipeline instance.</p><hr><h3 id="on" tabindex="-1"><a class="header-anchor" href="#on"><span>on()</span></a></h3><blockquote><p><strong>on</strong>(<code>name</code>, <code>listener</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L158" target="_blank" rel="noopener noreferrer">Pipeline.ts:158</a></p><p>Add a hook to the pipeline.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h5>',22)),n("p",null,[r(s,{to:"/api/pipeline/declarations/type-aliases/HookName.html"},{default:p(()=>e[13]||(e[13]=[n("code",null,"HookName",-1)])),_:1,__:[13]})]),e[87]||(e[87]=n("p",null,"The name of the hook.",-1)),e[88]||(e[88]=n("h5",{id:"listener",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#listener"},[n("span",null,"listener")])],-1)),e[89]||(e[89]=n("p",null,"The hook listener function.",-1)),n("p",null,[r(s,{to:"/api/pipeline/declarations/type-aliases/PipelineHookListener.html"},{default:p(()=>e[14]||(e[14]=[n("code",null,"PipelineHookListener",-1)])),_:1,__:[14]}),e[16]||(e[16]=t("<")),e[17]||(e[17]=n("code",null,"T",-1)),e[18]||(e[18]=t(", ")),e[19]||(e[19]=n("code",null,"R",-1)),e[20]||(e[20]=t(", ")),e[21]||(e[21]=n("code",null,"Args",-1)),e[22]||(e[22]=t("> | ")),r(s,{to:"/api/pipeline/declarations/type-aliases/PipelineHookListener.html"},{default:p(()=>e[15]||(e[15]=[n("code",null,"PipelineHookListener",-1)])),_:1,__:[15]}),e[23]||(e[23]=t("<")),e[24]||(e[24]=n("code",null,"T",-1)),e[25]||(e[25]=t(", ")),e[26]||(e[26]=n("code",null,"R",-1)),e[27]||(e[27]=t(", ")),e[28]||(e[28]=n("code",null,"Args",-1)),e[29]||(e[29]=t(">[]"))]),e[90]||(e[90]=i('<h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Pipeline instance.</p><hr><h3 id="pipe" tabindex="-1"><a class="header-anchor" href="#pipe"><span>pipe()</span></a></h3><blockquote><p><strong>pipe</strong>(...<code>pipe</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L125" target="_blank" rel="noopener noreferrer">Pipeline.ts:125</a></p><p>Add additional pipes to the pipeline.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="pipe-1" tabindex="-1"><a class="header-anchor" href="#pipe-1"><span>pipe</span></a></h5>',10)),n("p",null,[e[31]||(e[31]=t("...")),r(s,{to:"/api/pipeline/declarations/type-aliases/MixedPipe.html"},{default:p(()=>e[30]||(e[30]=[n("code",null,"MixedPipe",-1)])),_:1,__:[30]}),e[32]||(e[32]=t("<")),e[33]||(e[33]=n("code",null,"T",-1)),e[34]||(e[34]=t(", ")),e[35]||(e[35]=n("code",null,"R",-1)),e[36]||(e[36]=t(", ")),e[37]||(e[37]=n("code",null,"Args",-1)),e[38]||(e[38]=t(">[]"))]),e[91]||(e[91]=i('<p>A single pipe or a list of pipes to add.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Pipeline instance.</p><hr><h3 id="send" tabindex="-1"><a class="header-anchor" href="#send"><span>send()</span></a></h3><blockquote><p><strong>send</strong>(<code>passable</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L94" target="_blank" rel="noopener noreferrer">Pipeline.ts:94</a></p><p>Set the passable objects being sent through the pipeline.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="passable" tabindex="-1"><a class="header-anchor" href="#passable"><span>passable</span></a></h5><p><code>T</code></p><p>The single object to pass through the pipeline. This object will be processed by the pipeline&#39;s configured operations.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Pipeline instance.</p><hr><h3 id="sync" tabindex="-1"><a class="header-anchor" href="#sync"><span>sync()</span></a></h3><blockquote><p><strong>sync</strong>(<code>value</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L146" target="_blank" rel="noopener noreferrer">Pipeline.ts:146</a></p><p>Configure the pipeline to run synchronously or asynchronously.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="value-1" tabindex="-1"><a class="header-anchor" href="#value-1"><span>value</span></a></h5><p><code>boolean</code> = <code>true</code></p><p>Set true for sync, false for async (default is true).</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Pipeline instance.</p><hr><h3 id="then" tabindex="-1"><a class="header-anchor" href="#then"><span>then()</span></a></h3>',30)),n("blockquote",null,[n("p",null,[e[40]||(e[40]=n("strong",null,"then",-1)),e[41]||(e[41]=t("(")),e[42]||(e[42]=n("code",null,"destination",-1)),e[43]||(e[43]=t("): ")),r(s,{to:"/api/pipeline/declarations/type-aliases/Promiseable.html"},{default:p(()=>e[39]||(e[39]=[n("code",null,"Promiseable",-1)])),_:1,__:[39]}),e[44]||(e[44]=t("<")),e[45]||(e[45]=n("code",null,"R",-1)),e[46]||(e[46]=t(">"))])]),e[92]||(e[92]=i('<p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L171" target="_blank" rel="noopener noreferrer">Pipeline.ts:171</a></p><p>Run the pipeline with a final destination callback.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="destination" tabindex="-1"><a class="header-anchor" href="#destination"><span>destination</span></a></h5>',4)),n("p",null,[r(s,{to:"/api/pipeline/declarations/type-aliases/PipeExecutor.html"},{default:p(()=>e[47]||(e[47]=[n("code",null,"PipeExecutor",-1)])),_:1,__:[47]}),e[48]||(e[48]=t("<")),e[49]||(e[49]=n("code",null,"T",-1)),e[50]||(e[50]=t(", ")),e[51]||(e[51]=n("code",null,"R",-1)),e[52]||(e[52]=t(">"))]),e[93]||(e[93]=n("p",null,"The final function to execute.",-1)),e[94]||(e[94]=n("h4",{id:"returns-6",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-6"},[n("span",null,"Returns")])],-1)),n("p",null,[r(s,{to:"/api/pipeline/declarations/type-aliases/Promiseable.html"},{default:p(()=>e[53]||(e[53]=[n("code",null,"Promiseable",-1)])),_:1,__:[53]}),e[54]||(e[54]=t("<")),e[55]||(e[55]=n("code",null,"R",-1)),e[56]||(e[56]=t(">"))]),e[95]||(e[95]=n("p",null,"The result of the pipeline, either synchronously or as a Promise.",-1)),e[96]||(e[96]=n("hr",null,null,-1)),e[97]||(e[97]=n("h3",{id:"thenreturn",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#thenreturn"},[n("span",null,"thenReturn()")])],-1)),n("blockquote",null,[n("p",null,[e[58]||(e[58]=n("strong",null,"thenReturn",-1)),e[59]||(e[59]=t("(): ")),r(s,{to:"/api/pipeline/declarations/type-aliases/Promiseable.html"},{default:p(()=>e[57]||(e[57]=[n("code",null,"Promiseable",-1)])),_:1,__:[57]}),e[60]||(e[60]=t("<")),e[61]||(e[61]=n("code",null,"R",-1)),e[62]||(e[62]=t(">"))])]),e[98]||(e[98]=n("p",null,[t("Defined in: "),n("a",{href:"https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L189",target:"_blank",rel:"noopener noreferrer"},"Pipeline.ts:189")],-1)),e[99]||(e[99]=n("p",null,"Run the pipeline and return the result.",-1)),e[100]||(e[100]=n("h4",{id:"returns-7",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-7"},[n("span",null,"Returns")])],-1)),n("p",null,[r(s,{to:"/api/pipeline/declarations/type-aliases/Promiseable.html"},{default:p(()=>e[63]||(e[63]=[n("code",null,"Promiseable",-1)])),_:1,__:[63]}),e[64]||(e[64]=t("<")),e[65]||(e[65]=n("code",null,"R",-1)),e[66]||(e[66]=t(">"))]),e[101]||(e[101]=i('<p>The result of the pipeline, either synchronously or as a Promise.</p><hr><h3 id="through" tabindex="-1"><a class="header-anchor" href="#through"><span>through()</span></a></h3><blockquote><p><strong>through</strong>(...<code>pipes</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L105" target="_blank" rel="noopener noreferrer">Pipeline.ts:105</a></p><p>Set the pipes for the pipeline.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h4><h5 id="pipes" tabindex="-1"><a class="header-anchor" href="#pipes"><span>pipes</span></a></h5>',8)),n("p",null,[e[68]||(e[68]=t("...")),r(s,{to:"/api/pipeline/declarations/type-aliases/MixedPipe.html"},{default:p(()=>e[67]||(e[67]=[n("code",null,"MixedPipe",-1)])),_:1,__:[67]}),e[69]||(e[69]=t("<")),e[70]||(e[70]=n("code",null,"T",-1)),e[71]||(e[71]=t(", ")),e[72]||(e[72]=n("code",null,"R",-1)),e[73]||(e[73]=t(", ")),e[74]||(e[74]=n("code",null,"Args",-1)),e[75]||(e[75]=t(">[]"))]),e[102]||(e[102]=i('<p>The pipes or MetaPipe instances.</p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Pipeline instance.</p><hr><h3 id="via" tabindex="-1"><a class="header-anchor" href="#via"><span>via()</span></a></h3><blockquote><p><strong>via</strong>(<code>method</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L135" target="_blank" rel="noopener noreferrer">Pipeline.ts:135</a></p><p>Set the method to call on each pipe.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h4><h5 id="method" tabindex="-1"><a class="header-anchor" href="#method"><span>method</span></a></h5><p><code>string</code></p><p>The method name to use on each pipe.</p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Pipeline instance.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><blockquote><p><code>static</code> <strong>create</strong>&lt;<code>T</code>, <code>R</code>, <code>Args</code>&gt;(<code>options?</code>): <code>Pipeline</code>&lt;<code>T</code>, <code>R</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/pipeline/blob/4373463e5220be8ed997c5e4b7e1c704715db014/src/Pipeline.ts#L59" target="_blank" rel="noopener noreferrer">Pipeline.ts:59</a></p><p>Create a pipeline instance.</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h4><h5 id="t-1" tabindex="-1"><a class="header-anchor" href="#t-1"><span>T</span></a></h5><p><code>T</code> = <code>unknown</code></p><h5 id="r-1" tabindex="-1"><a class="header-anchor" href="#r-1"><span>R</span></a></h5><p><code>R</code> = <code>T</code></p><h5 id="args-1" tabindex="-1"><a class="header-anchor" href="#args-1"><span>Args</span></a></h5><p><code>Args</code> <em>extends</em> <code>any</code>[] = <code>any</code>[]</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h4><h5 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1"><span>options?</span></a></h5>',30)),n("p",null,[r(s,{to:"/api/pipeline/declarations/interfaces/PipelineOptions.html"},{default:p(()=>e[76]||(e[76]=[n("code",null,"PipelineOptions",-1)])),_:1,__:[76]}),e[77]||(e[77]=t("<")),e[78]||(e[78]=n("code",null,"T",-1)),e[79]||(e[79]=t(", ")),e[80]||(e[80]=n("code",null,"R",-1)),e[81]||(e[81]=t(", ")),e[82]||(e[82]=n("code",null,"Args",-1)),e[83]||(e[83]=t(">"))]),e[103]||(e[103]=n("p",null,"Optional Pipeline options.",-1)),e[104]||(e[104]=n("h4",{id:"returns-10",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-10"},[n("span",null,"Returns")])],-1)),e[105]||(e[105]=n("p",null,[n("code",null,"Pipeline"),t("<"),n("code",null,"T"),t(", "),n("code",null,"R"),t(">")],-1)),e[106]||(e[106]=n("p",null,"The pipeline instance.",-1))])}const g=o(u,[["render",h]]),P=JSON.parse('{"path":"/api/pipeline/Pipeline/classes/Pipeline.html","title":"Class: Pipeline<T, R, Args>","lang":"en-US","frontmatter":{"description":"/ / Pipeline Class: Pipeline<T, R, Args> Defined in: Pipeline.ts:31 Class representing a Pipeline. Type Parameters T T = unknown The type of the passable object in the pipeline....","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: Pipeline<T, R, Args>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/pipeline/Pipeline/classes/Pipeline.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: Pipeline<T, R, Args>"}],["meta",{"property":"og:description","content":"/ / Pipeline Class: Pipeline<T, R, Args> Defined in: Pipeline.ts:31 Class representing a Pipeline. Type Parameters T T = unknown The type of the passable object in the pipeline...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":1.83,"words":549},"filePathRelative":"api/pipeline/Pipeline/classes/Pipeline.md","autoDesc":true}');export{g as comp,P as data};
