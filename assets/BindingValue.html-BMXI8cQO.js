import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as n,b as l,e as o,w as a,d as t,r as d,o as c}from"./app-7vCtLRjQ.js";const p={};function u(m,e){const i=d("RouteLink");return c(),s("div",null,[n("p",null,[o(i,{to:"/api/service-container/"},{default:a(()=>e[0]||(e[0]=[n("strong",null,"Service Container Documentation v0.0.44",-1)])),_:1,__:[0]})]),e[5]||(e[5]=n("hr",null,null,-1)),n("p",null,[o(i,{to:"/api/service-container/modules.html"},{default:a(()=>e[1]||(e[1]=[t("Service Container Documentation")])),_:1,__:[1]}),e[3]||(e[3]=t(" / ")),o(i,{to:"/api/service-container/declarations/"},{default:a(()=>e[2]||(e[2]=[t("declarations")])),_:1,__:[2]}),e[4]||(e[4]=t(" / BindingValue"))]),e[6]||(e[6]=l('<h1 id="type-alias-bindingvalue" tabindex="-1"><a class="header-anchor" href="#type-alias-bindingvalue"><span>Type Alias: BindingValue</span></a></h1><blockquote><p><strong>BindingValue</strong>: <code>number</code> | <code>boolean</code> | <code>string</code> | <code>Function</code> | <code>object</code> | <code>symbol</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/service-container/blob/249b060f7936ebb0ea1e26fa167dc5f8fc0b9bc3/src/declarations.ts#L48" target="_blank" rel="noopener noreferrer">declarations.ts:48</a></p><p>A union type representing the possible values that can be bound in the container.</p><p>Binding values can be of various types, including numbers, booleans, strings, functions, objects, or symbols. Unlike <code>BindingKey</code>, <code>BindingValue</code> represents the actual data or instance being bound, while <code>BindingKey</code> represents the identifier used to access that data.</p>',5))])}const y=r(p,[["render",u]]),f=JSON.parse('{"path":"/api/service-container/declarations/type-aliases/BindingValue.html","title":"Type Alias: BindingValue","lang":"en-US","frontmatter":{"description":"/ / BindingValue Type Alias: BindingValue BindingValue: number | boolean | string | Function | object | symbol Defined in: declarations.ts:48 A union type representing the possi...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: BindingValue\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/service-container/declarations/type-aliases/BindingValue.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: BindingValue"}],["meta",{"property":"og:description","content":"/ / BindingValue Type Alias: BindingValue BindingValue: number | boolean | string | Function | object | symbol Defined in: declarations.ts:48 A union type representing the possi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.27,"words":82},"filePathRelative":"api/service-container/declarations/type-aliases/BindingValue.md","autoDesc":true}');export{y as comp,f as data};
