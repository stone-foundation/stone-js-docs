import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as e,b as s,e as r,w as d,d as n,r as i,o as p}from"./app-C80Pz9_H.js";const u={};function m(f,t){const o=i("RouteLink");return p(),l("div",null,[e("p",null,[r(o,{to:"/api/core/"},{default:d(()=>t[0]||(t[0]=[e("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),t[37]||(t[37]=e("hr",null,null,-1)),e("p",null,[r(o,{to:"/api/core/"},{default:d(()=>t[1]||(t[1]=[n("Core Documentation")])),_:1,__:[1]}),t[3]||(t[3]=n(" / ")),r(o,{to:"/api/core/decorators/Metadata/"},{default:d(()=>t[2]||(t[2]=[n("decorators/Metadata")])),_:1,__:[2]}),t[4]||(t[4]=n(" / addBlueprint"))]),t[38]||(t[38]=s('<h1 id="function-addblueprint" tabindex="-1"><a class="header-anchor" href="#function-addblueprint"><span>Function: addBlueprint()</span></a></h1><blockquote><p><strong>addBlueprint</strong>&lt;<code>T</code>, <code>U</code>, <code>V</code>&gt;(<code>_Class</code>, <code>context</code>, ...<code>blueprints</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/decorators/Metadata.ts#L174" target="_blank" rel="noopener noreferrer">decorators/Metadata.ts:174</a></p><p>Add Blueprint on a given decorator context.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3>',6)),e("p",null,[t[6]||(t[6]=e("code",null,"T",-1)),t[7]||(t[7]=n()),t[8]||(t[8]=e("em",null,"extends",-1)),t[9]||(t[9]=n()),r(o,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:d(()=>t[5]||(t[5]=[e("code",null,"ClassType",-1)])),_:1,__:[5]})]),t[39]||(t[39]=e("h3",{id:"u",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#u"},[e("span",null,"U")])],-1)),e("p",null,[t[12]||(t[12]=e("code",null,"U",-1)),t[13]||(t[13]=n()),t[14]||(t[14]=e("em",null,"extends",-1)),t[15]||(t[15]=n()),r(o,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:d(()=>t[10]||(t[10]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[10]}),t[16]||(t[16]=n(" = ")),r(o,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:d(()=>t[11]||(t[11]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[11]})]),t[40]||(t[40]=e("h3",{id:"v",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#v"},[e("span",null,"V")])],-1)),e("p",null,[t[19]||(t[19]=e("code",null,"V",-1)),t[20]||(t[20]=n()),t[21]||(t[21]=e("em",null,"extends",-1)),t[22]||(t[22]=n()),r(o,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:d(()=>t[17]||(t[17]=[e("code",null,"OutgoingResponse",-1)])),_:1,__:[17]}),t[23]||(t[23]=n(" = ")),r(o,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:d(()=>t[18]||(t[18]=[e("code",null,"OutgoingResponse",-1)])),_:1,__:[18]})]),t[41]||(t[41]=s('<h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="class" tabindex="-1"><a class="header-anchor" href="#class"><span>_Class</span></a></h3><p><code>T</code></p><p>The class to get all metadata from.</p><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context"><span>context</span></a></h3><p><code>DecoratorContext</code></p><p>The decorator context where metadata is being set.</p><h3 id="blueprints" tabindex="-1"><a class="header-anchor" href="#blueprints"><span>blueprints</span></a></h3>',8)),e("p",null,[t[25]||(t[25]=n("...(")),t[26]||(t[26]=e("code",null,"Record",-1)),t[27]||(t[27]=n("<")),t[28]||(t[28]=e("code",null,"string",-1)),t[29]||(t[29]=n(", ")),t[30]||(t[30]=e("code",null,"any",-1)),t[31]||(t[31]=n("> | ")),r(o,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:d(()=>t[24]||(t[24]=[e("code",null,"StoneBlueprint",-1)])),_:1,__:[24]}),t[32]||(t[32]=n("<")),t[33]||(t[33]=e("code",null,"U",-1)),t[34]||(t[34]=n(", ")),t[35]||(t[35]=e("code",null,"V",-1)),t[36]||(t[36]=n(">)[]"))]),t[42]||(t[42]=e("p",null,"The list of blueprints.",-1)),t[43]||(t[43]=e("h2",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns"},[e("span",null,"Returns")])],-1)),t[44]||(t[44]=e("p",null,[e("code",null,"void")],-1))])}const x=a(u,[["render",m]]),B=JSON.parse('{"path":"/api/core/decorators/Metadata/functions/addBlueprint.html","title":"Function: addBlueprint()","lang":"en-US","frontmatter":{"description":"/ / addBlueprint Function: addBlueprint() addBlueprint<T, U, V>(_Class, context, ...blueprints): void Defined in: decorators/Metadata.ts:174 Add Blueprint on a given decorator c...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: addBlueprint()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/decorators/Metadata/functions/addBlueprint.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: addBlueprint()"}],["meta",{"property":"og:description","content":"/ / addBlueprint Function: addBlueprint() addBlueprint<T, U, V>(_Class, context, ...blueprints): void Defined in: decorators/Metadata.ts:174 Add Blueprint on a given decorator c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.31,"words":93},"filePathRelative":"api/core/decorators/Metadata/functions/addBlueprint.md","autoDesc":true}');export{x as comp,B as data};
