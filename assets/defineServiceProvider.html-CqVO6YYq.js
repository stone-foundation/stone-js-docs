import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as n,a as e,e as t,w as r,d as i,r as l,o as c}from"./app-BJyWHIWB.js";const d={};function u(h,a){const s=l("RouteLink");return c(),o("div",null,[a[10]||(a[10]=n(`<h1 id="function-defineserviceprovider" tabindex="-1"><a class="header-anchor" href="#function-defineserviceprovider"><span>Function: defineServiceProvider()</span></a></h1><p>Defines a service provider (factory or class) for the Stone.js application.</p><p>This utility registers a provider into the <code>stone.providers</code> blueprint section. It supports both class-based and factory-based providers.</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The service provider (factory function or class).</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>Optional flag to indicate if it&#39;s a factory.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">defineServiceProvider</span><span class="token punctuation">(</span>MyServiceProviderClass<span class="token punctuation">,</span> <span class="token punctuation">{</span> isClass<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">defineServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">MyProvider</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token function">defineServiceProvider</span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StoneBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a factory-based service provider.</p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><h4 id="module" tabindex="-1"><a class="header-anchor" href="#module"><span>module</span></a></h4>`,14)),e("p",null,[t(s,{to:"/api/core/declarations/type-aliases/FactoryServiceProvider.html"},{default:r(()=>a[0]||(a[0]=[e("code",null,"FactoryServiceProvider",-1)])),_:1,__:[0]})]),a[11]||(a[11]=n('<p>The factory function that returns a service provider.</p><h4 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options?</span></a></h4><p>Optional flag indicating this is a factory-based provider.</p><h5 id="isfactory" tabindex="-1"><a class="header-anchor" href="#isfactory"><span>isFactory?</span></a></h5><p><code>true</code></p><h3 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h3>',6)),e("p",null,[a[2]||(a[2]=e("code",null,"Partial",-1)),a[3]||(a[3]=i("<")),t(s,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:r(()=>a[1]||(a[1]=[e("code",null,"StoneBlueprint",-1)])),_:1,__:[1]}),a[4]||(a[4]=i(">"))]),a[12]||(a[12]=n(`<p>A partial StoneBlueprint with the provider metadata.</p><h3 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h3><p>The service provider (factory function or class).</p><h3 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h3><p>Optional flag to indicate if it&#39;s a factory.</p><h3 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">defineServiceProvider</span><span class="token punctuation">(</span>MyServiceProviderClass<span class="token punctuation">,</span> <span class="token punctuation">{</span> isClass<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">defineServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">MyProvider</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token function">defineServiceProvider</span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StoneBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a class-based service provider.</p><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3><h4 id="module-1" tabindex="-1"><a class="header-anchor" href="#module-1"><span>module</span></a></h4>`,12)),e("p",null,[t(s,{to:"/api/core/declarations/type-aliases/IServiceProviderClass.html"},{default:r(()=>a[5]||(a[5]=[e("code",null,"IServiceProviderClass",-1)])),_:1,__:[5]})]),a[13]||(a[13]=n('<p>The class that implements a service provider.</p><h4 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1"><span>options</span></a></h4><p>Optional flag indicating this is a class-based provider.</p><h5 id="isclass" tabindex="-1"><a class="header-anchor" href="#isclass"><span>isClass</span></a></h5><p><code>true</code></p><h3 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h3>',6)),e("p",null,[a[7]||(a[7]=e("code",null,"Partial",-1)),a[8]||(a[8]=i("<")),t(s,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:r(()=>a[6]||(a[6]=[e("code",null,"StoneBlueprint",-1)])),_:1,__:[6]}),a[9]||(a[9]=i(">"))]),a[14]||(a[14]=n(`<p>A partial StoneBlueprint with the provider metadata.</p><h3 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h3><p>The service provider (factory function or class).</p><h3 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h3><p>Optional flag to indicate if it&#39;s a factory.</p><h3 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2"><span>Example</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">defineServiceProvider</span><span class="token punctuation">(</span>MyServiceProviderClass<span class="token punctuation">,</span> <span class="token punctuation">{</span> isClass<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">defineServiceProvider</span><span class="token punctuation">(</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">MyProvider</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,7))])}const f=p(d,[["render",u]]),k=JSON.parse('{"path":"/api/core/blueprint/KernelUtils/functions/defineServiceProvider.html","title":"Function: defineServiceProvider()","lang":"en-US","frontmatter":{"description":"Function: defineServiceProvider() Defines a service provider (factory or class) for the Stone.js application. This utility registers a provider into the stone.providers blueprin...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: defineServiceProvider()\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/blueprint/KernelUtils/functions/defineServiceProvider.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: defineServiceProvider()"}],["meta",{"property":"og:description","content":"Function: defineServiceProvider() Defines a service provider (factory or class) for the Stone.js application. This utility registers a provider into the stone.providers blueprin..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.74,"words":223},"filePathRelative":"api/core/blueprint/KernelUtils/functions/defineServiceProvider.md","autoDesc":true}');export{f as comp,k as data};
