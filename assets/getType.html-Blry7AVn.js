import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as a,o as s}from"./app-D3YQYQ8j.js";const o={};function p(i,e){return s(),n("div",null,e[0]||(e[0]=[a(`<h1 id="function-gettype" tabindex="-1"><a class="header-anchor" href="#function-gettype"><span>Function: getType()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token function">getType</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> fallback<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get message content type.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value</span></a></h3><p>The incoming message or content type string.</p><p><code>string</code> | <code>IncomingMessage</code></p><h3 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>fallback</span></a></h3><p><code>string</code> = <code>&#39;text/plain&#39;</code></p><p>Fallback content type if parsing fails.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>string</code></p><p>The content type of the message.</p>`,13)]))}const l=t(o,[["render",p]]),m=JSON.parse(`{"path":"/api/http-core/utils/functions/getType.html","title":"Function: getType()","lang":"en-US","frontmatter":{"description":"Function: getType() Get message content type. Parameters value The incoming message or content type string. string | IncomingMessage fallback string = 'text/plain' Fallback cont...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: getType()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/http-core/utils/functions/getType.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: getType()"}],["meta",{"property":"og:description","content":"Function: getType() Get message content type. Parameters value The incoming message or content type string. string | IncomingMessage fallback string = 'text/plain' Fallback cont..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.13,"words":40},"filePathRelative":"api/http-core/utils/functions/getType.md","autoDesc":true}`);export{l as comp,m as data};
