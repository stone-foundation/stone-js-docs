import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as t,b as p,e as n,w as s,d as a,r as d,o as l}from"./app-7vCtLRjQ.js";const c={};function u(f,e){const o=d("RouteLink");return l(),r("div",null,[t("p",null,[n(o,{to:"/api/http-core/"},{default:s(()=>e[0]||(e[0]=[t("strong",null,"HTTP Core Documentation",-1)])),_:1,__:[0]})]),e[11]||(e[11]=t("hr",null,null,-1)),t("p",null,[n(o,{to:"/api/http-core/"},{default:s(()=>e[1]||(e[1]=[a("HTTP Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=a(" / ")),n(o,{to:"/api/http-core/HttpResponse/"},{default:s(()=>e[2]||(e[2]=[a("HttpResponse")])),_:1,__:[2]}),e[4]||(e[4]=a(" / fileHttpResponse"))]),e[12]||(e[12]=t("h1",{id:"function-filehttpresponse",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#function-filehttpresponse"},[t("span",null,"Function: fileHttpResponse()")])],-1)),t("blockquote",null,[t("p",null,[e[6]||(e[6]=p("<strong>fileHttpResponse</strong>(<code>file</code>, <code>statusCode</code>, <code>headers</code>, <code>contentDispositionType</code>, <code>autoEtag</code>, <code>autoLastModified</code>): ",14)),n(o,{to:"/api/http-core/BinaryFileResponse/classes/BinaryFileResponse.html"},{default:s(()=>e[5]||(e[5]=[t("code",null,"BinaryFileResponse",-1)])),_:1,__:[5]})])]),e[13]||(e[13]=p('<p>Defined in: <a href="https://github.com/stonemjs/http-core/blob/0d369869add0f1630e9b5b2cd1421e57ee8d3865/src/HttpResponse.ts#L177" target="_blank" rel="noopener noreferrer">src/HttpResponse.ts:177</a></p><p>Create a 200(OK) file OutgoingHttpResponse.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="file" tabindex="-1"><a class="header-anchor" href="#file"><span>file</span></a></h3><p>The file to send as the response.</p><p><code>string</code> | <code>File</code></p><h3 id="statuscode" tabindex="-1"><a class="header-anchor" href="#statuscode"><span>statusCode</span></a></h3><p><code>number</code> = <code>HTTP_OK</code></p><p>The status code of the response.</p><h3 id="headers" tabindex="-1"><a class="header-anchor" href="#headers"><span>headers</span></a></h3>',10)),t("p",null,[n(o,{to:"/api/http-core/declarations/type-aliases/HeadersType.html"},{default:s(()=>e[7]||(e[7]=[t("code",null,"HeadersType",-1)])),_:1,__:[7]}),e[8]||(e[8]=a(" = ")),e[9]||(e[9]=t("code",null,"{}",-1))]),e[14]||(e[14]=p('<p>The headers for the response.</p><h3 id="contentdispositiontype" tabindex="-1"><a class="header-anchor" href="#contentdispositiontype"><span>contentDispositionType</span></a></h3><p>The content disposition type (e.g., &quot;inline&quot; or &quot;attachment&quot;).</p><p><code>null</code> | <code>string</code></p><h3 id="autoetag" tabindex="-1"><a class="header-anchor" href="#autoetag"><span>autoEtag</span></a></h3><p><code>boolean</code> = <code>false</code></p><p>Whether to automatically generate an ETag.</p><h3 id="autolastmodified" tabindex="-1"><a class="header-anchor" href="#autolastmodified"><span>autoLastModified</span></a></h3><p><code>boolean</code> = <code>true</code></p><p>Whether to automatically set the Last-Modified header.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2>',11)),t("p",null,[n(o,{to:"/api/http-core/BinaryFileResponse/classes/BinaryFileResponse.html"},{default:s(()=>e[10]||(e[10]=[t("code",null,"BinaryFileResponse",-1)])),_:1,__:[10]})]),e[15]||(e[15]=t("p",null,"A new instance of BinaryFileResponse.",-1))])}const R=i(c,[["render",u]]),g=JSON.parse('{"path":"/api/http-core/HttpResponse/functions/fileHttpResponse.html","title":"Function: fileHttpResponse()","lang":"en-US","frontmatter":{"description":"/ / fileHttpResponse Function: fileHttpResponse() fileHttpResponse(file, statusCode, headers, contentDispositionType, autoEtag, autoLastModified): Defined in: src/HttpResponse.t...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: fileHttpResponse()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/http-core/HttpResponse/functions/fileHttpResponse.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: fileHttpResponse()"}],["meta",{"property":"og:description","content":"/ / fileHttpResponse Function: fileHttpResponse() fileHttpResponse(file, statusCode, headers, contentDispositionType, autoEtag, autoLastModified): Defined in: src/HttpResponse.t..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.36,"words":107},"filePathRelative":"api/http-core/HttpResponse/functions/fileHttpResponse.md","autoDesc":true}');export{R as comp,g as data};
