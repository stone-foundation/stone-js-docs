import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a,b as n,e as s,w as i,d as r,r as d,o as p}from"./app-C80Pz9_H.js";const h={};function f(b,e){const t=d("RouteLink");return p(),o("div",null,[a("p",null,[s(t,{to:"/api/filesystem/"},{default:i(()=>e[0]||(e[0]=[a("strong",null,"Filesystem Documentation",-1)])),_:1,__:[0]})]),e[115]||(e[115]=a("hr",null,null,-1)),a("p",null,[s(t,{to:"/api/filesystem/"},{default:i(()=>e[1]||(e[1]=[r("Filesystem Documentation")])),_:1,__:[1]}),e[3]||(e[3]=r(" / ")),s(t,{to:"/api/filesystem/file/UploadedFile/"},{default:i(()=>e[2]||(e[2]=[r("file/UploadedFile")])),_:1,__:[2]}),e[4]||(e[4]=r(" / UploadedFile"))]),e[116]||(e[116]=n('<h1 id="class-uploadedfile" tabindex="-1"><a class="header-anchor" href="#class-uploadedfile"><span>Class: UploadedFile</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/UploadedFile.ts#L11" target="_blank" rel="noopener noreferrer">file/UploadedFile.ts:11</a></p><p>Class representing an UploadedFile.</p><h2 id="author" tabindex="-1"><a class="header-anchor" href="#author"><span>Author</span></a></h2><p>Mr. Stone <a href="mailto:evensstone@gmail.com" target="_blank" rel="noopener noreferrer">evensstone@gmail.com</a></p><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends"><span>Extends</span></a></h2>',6)),a("ul",null,[a("li",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[5]||(e[5]=[a("code",null,"File",-1)])),_:1,__:[5]})])]),e[117]||(e[117]=n('<h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><blockquote><p><strong>new UploadedFile</strong>(<code>path</code>, <code>originalName</code>, <code>mimeType?</code>, <code>checkPath?</code>): <code>UploadedFile</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/UploadedFile.ts#L34" target="_blank" rel="noopener noreferrer">file/UploadedFile.ts:34</a></p><p>Create an UploadedFile.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="path" tabindex="-1"><a class="header-anchor" href="#path"><span>path</span></a></h5><p><code>string</code></p><p>The file path.</p><h5 id="originalname" tabindex="-1"><a class="header-anchor" href="#originalname"><span>originalName</span></a></h5><p><code>string</code></p><p>The original name of the uploaded file.</p><h5 id="mimetype" tabindex="-1"><a class="header-anchor" href="#mimetype"><span>mimeType?</span></a></h5><p><code>string</code></p><p>The MIME type of the file.</p><h5 id="checkpath" tabindex="-1"><a class="header-anchor" href="#checkpath"><span>checkPath?</span></a></h5><p><code>boolean</code> = <code>true</code></p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>UploadedFile</code></p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides"><span>Overrides</span></a></h4>',20)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[6]||(e[6]=[a("code",null,"File",-1)])),_:1,__:[6]}),e[8]||(e[8]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#constructor"},{default:i(()=>e[7]||(e[7]=[a("code",null,"constructor",-1)])),_:1,__:[7]})]),e[118]||(e[118]=n('<h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="edit" tabindex="-1"><a class="header-anchor" href="#edit"><span>edit()</span></a></h3><blockquote><p><strong>edit</strong>(<code>callback</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L93" target="_blank" rel="noopener noreferrer">file/File.ts:93</a></p><p>Edit file content.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="callback" tabindex="-1"><a class="header-anchor" href="#callback"><span>callback</span></a></h5><p>(<code>content</code>) =&gt; <code>string</code></p><p>The callback function to modify the file content.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>this</code></p><p>The current File instance.</p><h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from"><span>Inherited from</span></a></h4>',13)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[9]||(e[9]=[a("code",null,"File",-1)])),_:1,__:[9]}),e[11]||(e[11]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#edit"},{default:i(()=>e[10]||(e[10]=[a("code",null,"edit",-1)])),_:1,__:[10]})]),e[119]||(e[119]=n('<hr><h3 id="exists" tabindex="-1"><a class="header-anchor" href="#exists"><span>exists()</span></a></h3><blockquote><p><strong>exists</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L295" target="_blank" rel="noopener noreferrer">file/File.ts:295</a></p><p>Check if the file exists.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file exists, otherwise false.</p><h4 id="inherited-from-1" tabindex="-1"><a class="header-anchor" href="#inherited-from-1"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[12]||(e[12]=[a("code",null,"File",-1)])),_:1,__:[12]}),e[14]||(e[14]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#exists"},{default:i(()=>e[13]||(e[13]=[a("code",null,"exists",-1)])),_:1,__:[13]})]),e[120]||(e[120]=n('<hr><h3 id="getabsolutepath" tabindex="-1"><a class="header-anchor" href="#getabsolutepath"><span>getAbsolutePath()</span></a></h3><blockquote><p><strong>getAbsolutePath</strong>(<code>root</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L212" target="_blank" rel="noopener noreferrer">file/File.ts:212</a></p><p>Get the absolute file path.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="root" tabindex="-1"><a class="header-anchor" href="#root"><span>root</span></a></h5><p><code>string</code> = <code>&#39;&#39;</code></p><p>The root directory to resolve from.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>string</code></p><p>The absolute file path.</p><h4 id="inherited-from-2" tabindex="-1"><a class="header-anchor" href="#inherited-from-2"><span>Inherited from</span></a></h4>',13)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[15]||(e[15]=[a("code",null,"File",-1)])),_:1,__:[15]}),e[17]||(e[17]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getabsolutepath"},{default:i(()=>e[16]||(e[16]=[a("code",null,"getAbsolutePath",-1)])),_:1,__:[16]})]),e[121]||(e[121]=n('<hr><h3 id="getatime" tabindex="-1"><a class="header-anchor" href="#getatime"><span>getATime()</span></a></h3><blockquote><p><strong>getATime</strong>(): <code>undefined</code> | <code>number</code> | <code>bigint</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L268" target="_blank" rel="noopener noreferrer">file/File.ts:268</a></p><p>Get the last access time of the file.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>undefined</code> | <code>number</code> | <code>bigint</code></p><p>The last access time in milliseconds.</p><h4 id="inherited-from-3" tabindex="-1"><a class="header-anchor" href="#inherited-from-3"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[18]||(e[18]=[a("code",null,"File",-1)])),_:1,__:[18]}),e[20]||(e[20]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getatime"},{default:i(()=>e[19]||(e[19]=[a("code",null,"getATime",-1)])),_:1,__:[19]})]),e[122]||(e[122]=n('<hr><h3 id="getbasename" tabindex="-1"><a class="header-anchor" href="#getbasename"><span>getBasename()</span></a></h3><blockquote><p><strong>getBasename</strong>(<code>exclude</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L232" target="_blank" rel="noopener noreferrer">file/File.ts:232</a></p><p>Get the basename of the file.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="exclude" tabindex="-1"><a class="header-anchor" href="#exclude"><span>exclude</span></a></h5><p><code>string</code> = <code>&#39;&#39;</code></p><p>The file extension to exclude from the basename.</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>string</code></p><p>The basename of the file.</p><h4 id="inherited-from-4" tabindex="-1"><a class="header-anchor" href="#inherited-from-4"><span>Inherited from</span></a></h4>',13)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[21]||(e[21]=[a("code",null,"File",-1)])),_:1,__:[21]}),e[23]||(e[23]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getbasename"},{default:i(()=>e[22]||(e[22]=[a("code",null,"getBasename",-1)])),_:1,__:[22]})]),e[123]||(e[123]=n('<hr><h3 id="getclientmimetype" tabindex="-1"><a class="header-anchor" href="#getclientmimetype"><span>getClientMimeType()</span></a></h3><blockquote><p><strong>getClientMimeType</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/UploadedFile.ts#L63" target="_blank" rel="noopener noreferrer">file/UploadedFile.ts:63</a></p><p>Get the MIME type of the uploaded file.</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h4><p><code>string</code></p><p>The MIME type of the file.</p><hr><h3 id="getclientoriginalextension" tabindex="-1"><a class="header-anchor" href="#getclientoriginalextension"><span>getClientOriginalExtension()</span></a></h3><blockquote><p><strong>getClientOriginalExtension</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/UploadedFile.ts#L54" target="_blank" rel="noopener noreferrer">file/UploadedFile.ts:54</a></p><p>Get the original file extension of the uploaded file.</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h4><p><code>string</code></p><p>The original file extension.</p><hr><h3 id="getclientoriginalname" tabindex="-1"><a class="header-anchor" href="#getclientoriginalname"><span>getClientOriginalName()</span></a></h3><blockquote><p><strong>getClientOriginalName</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/UploadedFile.ts#L45" target="_blank" rel="noopener noreferrer">file/UploadedFile.ts:45</a></p><p>Get the original name of the uploaded file.</p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4><p><code>string</code></p><p>The original name of the file.</p><hr><h3 id="getcontent" tabindex="-1"><a class="header-anchor" href="#getcontent"><span>getContent()</span></a></h3><blockquote><p><strong>getContent</strong>(<code>encoding</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L65" target="_blank" rel="noopener noreferrer">file/File.ts:65</a></p><p>Get file content.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="encoding" tabindex="-1"><a class="header-anchor" href="#encoding"><span>encoding</span></a></h5><p><code>BufferEncoding</code> = <code>&#39;utf-8&#39;</code></p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4><p><code>string</code></p><p>The content of the file as a string.</p><h4 id="inherited-from-5" tabindex="-1"><a class="header-anchor" href="#inherited-from-5"><span>Inherited from</span></a></h4>',36)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[24]||(e[24]=[a("code",null,"File",-1)])),_:1,__:[24]}),e[26]||(e[26]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getcontent"},{default:i(()=>e[25]||(e[25]=[a("code",null,"getContent",-1)])),_:1,__:[25]})]),e[124]||(e[124]=n('<hr><h3 id="getctime" tabindex="-1"><a class="header-anchor" href="#getctime"><span>getCTime()</span></a></h3><blockquote><p><strong>getCTime</strong>(): <code>undefined</code> | <code>number</code> | <code>bigint</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L286" target="_blank" rel="noopener noreferrer">file/File.ts:286</a></p><p>Get the created time of the file.</p><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h4><p><code>undefined</code> | <code>number</code> | <code>bigint</code></p><p>The created time in milliseconds.</p><h4 id="inherited-from-6" tabindex="-1"><a class="header-anchor" href="#inherited-from-6"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[27]||(e[27]=[a("code",null,"File",-1)])),_:1,__:[27]}),e[29]||(e[29]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getctime"},{default:i(()=>e[28]||(e[28]=[a("code",null,"getCTime",-1)])),_:1,__:[28]})]),e[125]||(e[125]=n('<hr><h3 id="getdirname" tabindex="-1"><a class="header-anchor" href="#getdirname"><span>getDirname()</span></a></h3><blockquote><p><strong>getDirname</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L184" target="_blank" rel="noopener noreferrer">file/File.ts:184</a></p><p>Get the directory name of the file.</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11"><span>Returns</span></a></h4><p><code>string</code></p><p>The directory name.</p><h4 id="inherited-from-7" tabindex="-1"><a class="header-anchor" href="#inherited-from-7"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[30]||(e[30]=[a("code",null,"File",-1)])),_:1,__:[30]}),e[32]||(e[32]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getdirname"},{default:i(()=>e[31]||(e[31]=[a("code",null,"getDirname",-1)])),_:1,__:[31]})]),e[126]||(e[126]=n('<hr><h3 id="getencodedabsolutepath" tabindex="-1"><a class="header-anchor" href="#getencodedabsolutepath"><span>getEncodedAbsolutePath()</span></a></h3><blockquote><p><strong>getEncodedAbsolutePath</strong>(<code>root</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L222" target="_blank" rel="noopener noreferrer">file/File.ts:222</a></p><p>Get the encoded absolute file path.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="root-1" tabindex="-1"><a class="header-anchor" href="#root-1"><span>root</span></a></h5><p><code>string</code> = <code>&#39;&#39;</code></p><p>The root directory to resolve from.</p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12"><span>Returns</span></a></h4><p><code>string</code></p><p>The encoded absolute file path.</p><h4 id="inherited-from-8" tabindex="-1"><a class="header-anchor" href="#inherited-from-8"><span>Inherited from</span></a></h4>',13)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[33]||(e[33]=[a("code",null,"File",-1)])),_:1,__:[33]}),e[35]||(e[35]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getencodedabsolutepath"},{default:i(()=>e[34]||(e[34]=[a("code",null,"getEncodedAbsolutePath",-1)])),_:1,__:[34]})]),e[127]||(e[127]=n('<hr><h3 id="getencodedpath" tabindex="-1"><a class="header-anchor" href="#getencodedpath"><span>getEncodedPath()</span></a></h3><blockquote><p><strong>getEncodedPath</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L202" target="_blank" rel="noopener noreferrer">file/File.ts:202</a></p><p>Get the encoded file path.</p><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13"><span>Returns</span></a></h4><p><code>string</code></p><p>The encoded file path.</p><h4 id="inherited-from-9" tabindex="-1"><a class="header-anchor" href="#inherited-from-9"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[36]||(e[36]=[a("code",null,"File",-1)])),_:1,__:[36]}),e[38]||(e[38]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getencodedpath"},{default:i(()=>e[37]||(e[37]=[a("code",null,"getEncodedPath",-1)])),_:1,__:[37]})]),e[128]||(e[128]=n('<hr><h3 id="getextension" tabindex="-1"><a class="header-anchor" href="#getextension"><span>getExtension()</span></a></h3><blockquote><p><strong>getExtension</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L259" target="_blank" rel="noopener noreferrer">file/File.ts:259</a></p><p>Get the file extension.</p><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14"><span>Returns</span></a></h4><p><code>string</code></p><p>The file extension.</p><h4 id="inherited-from-10" tabindex="-1"><a class="header-anchor" href="#inherited-from-10"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[39]||(e[39]=[a("code",null,"File",-1)])),_:1,__:[39]}),e[41]||(e[41]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getextension"},{default:i(()=>e[40]||(e[40]=[a("code",null,"getExtension",-1)])),_:1,__:[40]})]),e[129]||(e[129]=n('<hr><h3 id="getfilename" tabindex="-1"><a class="header-anchor" href="#getfilename"><span>getFilename()</span></a></h3><blockquote><p><strong>getFilename</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L241" target="_blank" rel="noopener noreferrer">file/File.ts:241</a></p><p>Get the filename of the file.</p><h4 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15"><span>Returns</span></a></h4><p><code>string</code></p><p>The filename of the file.</p><h4 id="inherited-from-11" tabindex="-1"><a class="header-anchor" href="#inherited-from-11"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[42]||(e[42]=[a("code",null,"File",-1)])),_:1,__:[42]}),e[44]||(e[44]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getfilename"},{default:i(()=>e[43]||(e[43]=[a("code",null,"getFilename",-1)])),_:1,__:[43]})]),e[130]||(e[130]=n('<hr><h3 id="gethashedcontent" tabindex="-1"><a class="header-anchor" href="#gethashedcontent"><span>getHashedContent()</span></a></h3><blockquote><p><strong>getHashedContent</strong>(<code>algo</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L139" target="_blank" rel="noopener noreferrer">file/File.ts:139</a></p><p>Get the hashed content of the file.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="algo" tabindex="-1"><a class="header-anchor" href="#algo"><span>algo</span></a></h5><p><code>string</code> = <code>&#39;sha256&#39;</code></p><p>The hashing algorithm to use.</p><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16"><span>Returns</span></a></h4><p><code>string</code></p><p>The hashed content of the file as a hex string.</p><h4 id="inherited-from-12" tabindex="-1"><a class="header-anchor" href="#inherited-from-12"><span>Inherited from</span></a></h4>',13)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[45]||(e[45]=[a("code",null,"File",-1)])),_:1,__:[45]}),e[47]||(e[47]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#gethashedcontent"},{default:i(()=>e[46]||(e[46]=[a("code",null,"getHashedContent",-1)])),_:1,__:[46]})]),e[131]||(e[131]=n('<hr><h3 id="getmimetype" tabindex="-1"><a class="header-anchor" href="#getmimetype"><span>getMimeType()</span></a></h3><p>Get the MIME type of the file.</p><h4 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h4><p>A fallback MIME type if detection fails.</p><h4 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h4><blockquote><p><strong>getMimeType</strong>(): <code>undefined</code> | <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L159" target="_blank" rel="noopener noreferrer">file/File.ts:159</a></p><p>Get the MIME type of the file.</p><h5 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17"><span>Returns</span></a></h5><p><code>undefined</code> | <code>string</code></p><p>The MIME type of the file.</p><h5 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h5><p>A fallback MIME type if detection fails.</p><h5 id="inherited-from-13" tabindex="-1"><a class="header-anchor" href="#inherited-from-13"><span>Inherited from</span></a></h5>',15)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[48]||(e[48]=[a("code",null,"File",-1)])),_:1,__:[48]}),e[50]||(e[50]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getmimetype"},{default:i(()=>e[49]||(e[49]=[a("code",null,"getMimeType",-1)])),_:1,__:[49]})]),e[132]||(e[132]=n('<h4 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h4><blockquote><p><strong>getMimeType</strong>(<code>fallback</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L167" target="_blank" rel="noopener noreferrer">file/File.ts:167</a></p><p>Get the MIME type of the file.</p><h5 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h5><h6 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>fallback</span></a></h6><p><code>string</code></p><p>A fallback MIME type if detection fails.</p><h5 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18"><span>Returns</span></a></h5><p><code>string</code></p><p>The MIME type of the file.</p><h5 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h5><p>A fallback MIME type if detection fails.</p><h5 id="inherited-from-14" tabindex="-1"><a class="header-anchor" href="#inherited-from-14"><span>Inherited from</span></a></h5>',14)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[51]||(e[51]=[a("code",null,"File",-1)])),_:1,__:[51]}),e[53]||(e[53]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getmimetype"},{default:i(()=>e[52]||(e[52]=[a("code",null,"getMimeType",-1)])),_:1,__:[52]})]),e[133]||(e[133]=n('<hr><h3 id="getmtime" tabindex="-1"><a class="header-anchor" href="#getmtime"><span>getMTime()</span></a></h3><blockquote><p><strong>getMTime</strong>(): <code>undefined</code> | <code>number</code> | <code>bigint</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L277" target="_blank" rel="noopener noreferrer">file/File.ts:277</a></p><p>Get the last modified time of the file.</p><h4 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19"><span>Returns</span></a></h4><p><code>undefined</code> | <code>number</code> | <code>bigint</code></p><p>The last modified time in milliseconds.</p><h4 id="inherited-from-15" tabindex="-1"><a class="header-anchor" href="#inherited-from-15"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[54]||(e[54]=[a("code",null,"File",-1)])),_:1,__:[54]}),e[56]||(e[56]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getmtime"},{default:i(()=>e[55]||(e[55]=[a("code",null,"getMTime",-1)])),_:1,__:[55]})]),e[134]||(e[134]=n('<hr><h3 id="getname" tabindex="-1"><a class="header-anchor" href="#getname"><span>getName()</span></a></h3><blockquote><p><strong>getName</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L250" target="_blank" rel="noopener noreferrer">file/File.ts:250</a></p><p>Get the name of the file without extension.</p><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20"><span>Returns</span></a></h4><p><code>string</code></p><p>The name of the file.</p><h4 id="inherited-from-16" tabindex="-1"><a class="header-anchor" href="#inherited-from-16"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[57]||(e[57]=[a("code",null,"File",-1)])),_:1,__:[57]}),e[59]||(e[59]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getname"},{default:i(()=>e[58]||(e[58]=[a("code",null,"getName",-1)])),_:1,__:[58]})]),e[135]||(e[135]=n('<hr><h3 id="getpath" tabindex="-1"><a class="header-anchor" href="#getpath"><span>getPath()</span></a></h3><blockquote><p><strong>getPath</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L193" target="_blank" rel="noopener noreferrer">file/File.ts:193</a></p><p>Get the file path.</p><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21"><span>Returns</span></a></h4><p><code>string</code></p><p>The file path.</p><h4 id="inherited-from-17" tabindex="-1"><a class="header-anchor" href="#inherited-from-17"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[60]||(e[60]=[a("code",null,"File",-1)])),_:1,__:[60]}),e[62]||(e[62]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getpath"},{default:i(()=>e[61]||(e[61]=[a("code",null,"getPath",-1)])),_:1,__:[61]})]),e[136]||(e[136]=n('<hr><h3 id="getsize" tabindex="-1"><a class="header-anchor" href="#getsize"><span>getSize()</span></a></h3><blockquote><p><strong>getSize</strong>(<code>formatted</code>): <code>undefined</code> | <code>string</code> | <code>number</code> | <code>bigint</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L149" target="_blank" rel="noopener noreferrer">file/File.ts:149</a></p><p>Get file size.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h4><h5 id="formatted" tabindex="-1"><a class="header-anchor" href="#formatted"><span>formatted</span></a></h5><p><code>boolean</code> = <code>false</code></p><p>Whether to return the file size as a formatted string.</p><h4 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22"><span>Returns</span></a></h4><p><code>undefined</code> | <code>string</code> | <code>number</code> | <code>bigint</code></p><p>The file size as a string or number.</p><h4 id="inherited-from-18" tabindex="-1"><a class="header-anchor" href="#inherited-from-18"><span>Inherited from</span></a></h4>',13)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[63]||(e[63]=[a("code",null,"File",-1)])),_:1,__:[63]}),e[65]||(e[65]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#getsize"},{default:i(()=>e[64]||(e[64]=[a("code",null,"getSize",-1)])),_:1,__:[64]})]),e[137]||(e[137]=n('<hr><h3 id="guessclientextension" tabindex="-1"><a class="header-anchor" href="#guessclientextension"><span>guessClientExtension()</span></a></h3><blockquote><p><strong>guessClientExtension</strong>(): <code>undefined</code> | <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/UploadedFile.ts#L72" target="_blank" rel="noopener noreferrer">file/UploadedFile.ts:72</a></p><p>Guess the client file extension based on the MIME type.</p><h4 id="returns-23" tabindex="-1"><a class="header-anchor" href="#returns-23"><span>Returns</span></a></h4><p><code>undefined</code> | <code>string</code></p><p>The guessed file extension.</p><hr><h3 id="isabsolute" tabindex="-1"><a class="header-anchor" href="#isabsolute"><span>isAbsolute()</span></a></h3><blockquote><p><strong>isAbsolute</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L349" target="_blank" rel="noopener noreferrer">file/File.ts:349</a></p><p>Check if the file path is absolute.</p><h4 id="returns-24" tabindex="-1"><a class="header-anchor" href="#returns-24"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file path is absolute, otherwise false.</p><h4 id="inherited-from-19" tabindex="-1"><a class="header-anchor" href="#inherited-from-19"><span>Inherited from</span></a></h4>',17)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[66]||(e[66]=[a("code",null,"File",-1)])),_:1,__:[66]}),e[68]||(e[68]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#isabsolute"},{default:i(()=>e[67]||(e[67]=[a("code",null,"isAbsolute",-1)])),_:1,__:[67]})]),e[138]||(e[138]=n('<hr><h3 id="iscompressed" tabindex="-1"><a class="header-anchor" href="#iscompressed"><span>isCompressed()</span></a></h3><blockquote><p><strong>isCompressed</strong>(<code>extensions</code>): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L313" target="_blank" rel="noopener noreferrer">file/File.ts:313</a></p><p>Check if the file is compressed.</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h4><h5 id="extensions" tabindex="-1"><a class="header-anchor" href="#extensions"><span>extensions</span></a></h5><p><code>string</code>[] = <code>...</code></p><h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is compressed, otherwise false.</p><h4 id="inherited-from-20" tabindex="-1"><a class="header-anchor" href="#inherited-from-20"><span>Inherited from</span></a></h4>',12)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[69]||(e[69]=[a("code",null,"File",-1)])),_:1,__:[69]}),e[71]||(e[71]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#iscompressed"},{default:i(()=>e[70]||(e[70]=[a("code",null,"isCompressed",-1)])),_:1,__:[70]})]),e[139]||(e[139]=n('<hr><h3 id="isdir" tabindex="-1"><a class="header-anchor" href="#isdir"><span>isDir()</span></a></h3><blockquote><p><strong>isDir</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L322" target="_blank" rel="noopener noreferrer">file/File.ts:322</a></p><p>Check if the file is a directory.</p><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is a directory, otherwise false.</p><h4 id="inherited-from-21" tabindex="-1"><a class="header-anchor" href="#inherited-from-21"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[72]||(e[72]=[a("code",null,"File",-1)])),_:1,__:[72]}),e[74]||(e[74]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#isdir"},{default:i(()=>e[73]||(e[73]=[a("code",null,"isDir",-1)])),_:1,__:[73]})]),e[140]||(e[140]=n('<hr><h3 id="isexecutable" tabindex="-1"><a class="header-anchor" href="#isexecutable"><span>isExecutable()</span></a></h3><blockquote><p><strong>isExecutable</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L386" target="_blank" rel="noopener noreferrer">file/File.ts:386</a></p><p>Check if the file is executable.</p><h4 id="returns-27" tabindex="-1"><a class="header-anchor" href="#returns-27"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is executable, otherwise false.</p><h4 id="inherited-from-22" tabindex="-1"><a class="header-anchor" href="#inherited-from-22"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[75]||(e[75]=[a("code",null,"File",-1)])),_:1,__:[75]}),e[77]||(e[77]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#isexecutable"},{default:i(()=>e[76]||(e[76]=[a("code",null,"isExecutable",-1)])),_:1,__:[76]})]),e[141]||(e[141]=n('<hr><h3 id="isfile" tabindex="-1"><a class="header-anchor" href="#isfile"><span>isFile()</span></a></h3><blockquote><p><strong>isFile</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L331" target="_blank" rel="noopener noreferrer">file/File.ts:331</a></p><p>Check if the file is a regular file.</p><h4 id="returns-28" tabindex="-1"><a class="header-anchor" href="#returns-28"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is a regular file, otherwise false.</p><h4 id="inherited-from-23" tabindex="-1"><a class="header-anchor" href="#inherited-from-23"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[78]||(e[78]=[a("code",null,"File",-1)])),_:1,__:[78]}),e[80]||(e[80]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#isfile"},{default:i(()=>e[79]||(e[79]=[a("code",null,"isFile",-1)])),_:1,__:[79]})]),e[142]||(e[142]=n('<hr><h3 id="islink" tabindex="-1"><a class="header-anchor" href="#islink"><span>isLink()</span></a></h3><blockquote><p><strong>isLink</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L340" target="_blank" rel="noopener noreferrer">file/File.ts:340</a></p><p>Check if the file is a symbolic link.</p><h4 id="returns-29" tabindex="-1"><a class="header-anchor" href="#returns-29"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is a symbolic link, otherwise false.</p><h4 id="inherited-from-24" tabindex="-1"><a class="header-anchor" href="#inherited-from-24"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[81]||(e[81]=[a("code",null,"File",-1)])),_:1,__:[81]}),e[83]||(e[83]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#islink"},{default:i(()=>e[82]||(e[82]=[a("code",null,"isLink",-1)])),_:1,__:[82]})]),e[143]||(e[143]=n('<hr><h3 id="ispathprefix" tabindex="-1"><a class="header-anchor" href="#ispathprefix"><span>isPathPrefix()</span></a></h3><blockquote><p><strong>isPathPrefix</strong>(<code>prefix</code>): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L304" target="_blank" rel="noopener noreferrer">file/File.ts:304</a></p><p>Check if the file path starts with a provided prefix.</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10"><span>Parameters</span></a></h4><h5 id="prefix" tabindex="-1"><a class="header-anchor" href="#prefix"><span>prefix</span></a></h5><p><code>string</code></p><h4 id="returns-30" tabindex="-1"><a class="header-anchor" href="#returns-30"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file path starts with the provided prefix, otherwise false.</p><h4 id="inherited-from-25" tabindex="-1"><a class="header-anchor" href="#inherited-from-25"><span>Inherited from</span></a></h4>',12)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[84]||(e[84]=[a("code",null,"File",-1)])),_:1,__:[84]}),e[86]||(e[86]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#ispathprefix"},{default:i(()=>e[85]||(e[85]=[a("code",null,"isPathPrefix",-1)])),_:1,__:[85]})]),e[144]||(e[144]=n('<hr><h3 id="isreadable" tabindex="-1"><a class="header-anchor" href="#isreadable"><span>isReadable()</span></a></h3><blockquote><p><strong>isReadable</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L372" target="_blank" rel="noopener noreferrer">file/File.ts:372</a></p><p>Check if the file is readable.</p><h4 id="returns-31" tabindex="-1"><a class="header-anchor" href="#returns-31"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is readable, otherwise false.</p><h4 id="inherited-from-26" tabindex="-1"><a class="header-anchor" href="#inherited-from-26"><span>Inherited from</span></a></h4>',9)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[87]||(e[87]=[a("code",null,"File",-1)])),_:1,__:[87]}),e[89]||(e[89]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#isreadable"},{default:i(()=>e[88]||(e[88]=[a("code",null,"isReadable",-1)])),_:1,__:[88]})]),e[145]||(e[145]=n('<hr><h3 id="isvalid" tabindex="-1"><a class="header-anchor" href="#isvalid"><span>isValid()</span></a></h3><blockquote><p><strong>isValid</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/UploadedFile.ts#L81" target="_blank" rel="noopener noreferrer">file/UploadedFile.ts:81</a></p><p>Check if the uploaded file is valid.</p><h4 id="returns-32" tabindex="-1"><a class="header-anchor" href="#returns-32"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file exists, otherwise false.</p><hr><h3 id="iswritable" tabindex="-1"><a class="header-anchor" href="#iswritable"><span>isWritable()</span></a></h3><blockquote><p><strong>isWritable</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L358" target="_blank" rel="noopener noreferrer">file/File.ts:358</a></p><p>Check if the file is writable.</p><h4 id="returns-33" tabindex="-1"><a class="header-anchor" href="#returns-33"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the file is writable, otherwise false.</p><h4 id="inherited-from-27" tabindex="-1"><a class="header-anchor" href="#inherited-from-27"><span>Inherited from</span></a></h4>',17)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[90]||(e[90]=[a("code",null,"File",-1)])),_:1,__:[90]}),e[92]||(e[92]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#iswritable"},{default:i(()=>e[91]||(e[91]=[a("code",null,"isWritable",-1)])),_:1,__:[91]})]),e[146]||(e[146]=n('<hr><h3 id="move" tabindex="-1"><a class="header-anchor" href="#move"><span>move()</span></a></h3><blockquote><p><strong>move</strong>(<code>directory</code>, <code>name?</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/UploadedFile.ts#L93" target="_blank" rel="noopener noreferrer">file/UploadedFile.ts:93</a></p><p>Move the uploaded file to a new directory.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11"><span>Parameters</span></a></h4><h5 id="directory" tabindex="-1"><a class="header-anchor" href="#directory"><span>directory</span></a></h5><p><code>string</code></p><p>The target directory.</p><h5 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name?</span></a></h5><p><code>string</code></p><p>The new name for the file.</p><h4 id="returns-34" tabindex="-1"><a class="header-anchor" href="#returns-34"><span>Returns</span></a></h4><p><code>this</code></p><p>The current UploadedFile instance.</p><h4 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h4><p>FileError if the file is not valid.</p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1"><span>Overrides</span></a></h4>',18)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[93]||(e[93]=[a("code",null,"File",-1)])),_:1,__:[93]}),e[95]||(e[95]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#move"},{default:i(()=>e[94]||(e[94]=[a("code",null,"move",-1)])),_:1,__:[94]})]),e[147]||(e[147]=n('<hr><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove"><span>remove()</span></a></h3><blockquote><p><strong>remove</strong>(<code>force</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L124" target="_blank" rel="noopener noreferrer">file/File.ts:124</a></p><p>Remove file.</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12"><span>Parameters</span></a></h4><h5 id="force" tabindex="-1"><a class="header-anchor" href="#force"><span>force</span></a></h5><p><code>boolean</code> = <code>false</code></p><p>Whether to forcefully remove the file.</p><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35"><span>Returns</span></a></h4><p><code>this</code></p><p>The current File instance.</p><h4 id="inherited-from-28" tabindex="-1"><a class="header-anchor" href="#inherited-from-28"><span>Inherited from</span></a></h4>',13)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[96]||(e[96]=[a("code",null,"File",-1)])),_:1,__:[96]}),e[98]||(e[98]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#remove"},{default:i(()=>e[97]||(e[97]=[a("code",null,"remove",-1)])),_:1,__:[97]})]),e[148]||(e[148]=n('<hr><h3 id="write" tabindex="-1"><a class="header-anchor" href="#write"><span>write()</span></a></h3><blockquote><p><strong>write</strong>(<code>content</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L78" target="_blank" rel="noopener noreferrer">file/File.ts:78</a></p><p>Write content to file.</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13"><span>Parameters</span></a></h4><h5 id="content" tabindex="-1"><a class="header-anchor" href="#content"><span>content</span></a></h5><p><code>string</code></p><p>The content to write to the file.</p><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36"><span>Returns</span></a></h4><p><code>this</code></p><p>The current File instance.</p><h4 id="inherited-from-29" tabindex="-1"><a class="header-anchor" href="#inherited-from-29"><span>Inherited from</span></a></h4>',13)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[99]||(e[99]=[a("code",null,"File",-1)])),_:1,__:[99]}),e[101]||(e[101]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#write"},{default:i(()=>e[100]||(e[100]=[a("code",null,"write",-1)])),_:1,__:[100]})]),e[149]||(e[149]=a("hr",null,null,-1)),e[150]||(e[150]=a("h3",{id:"create",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#create"},[a("span",null,"create()")])],-1)),a("blockquote",null,[a("p",null,[e[103]||(e[103]=a("code",null,"static",-1)),e[104]||(e[104]=r()),e[105]||(e[105]=a("strong",null,"create",-1)),e[106]||(e[106]=r("(")),e[107]||(e[107]=a("code",null,"path",-1)),e[108]||(e[108]=r(", ")),e[109]||(e[109]=a("code",null,"checkPath",-1)),e[110]||(e[110]=r("): ")),s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[102]||(e[102]=[a("code",null,"File",-1)])),_:1,__:[102]})])]),e[151]||(e[151]=n('<p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/File.ts#L43" target="_blank" rel="noopener noreferrer">file/File.ts:43</a></p><p>Create a File.</p><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14"><span>Parameters</span></a></h4><h5 id="path-1" tabindex="-1"><a class="header-anchor" href="#path-1"><span>path</span></a></h5><p><code>string</code></p><p>The file path.</p><h5 id="checkpath-1" tabindex="-1"><a class="header-anchor" href="#checkpath-1"><span>checkPath</span></a></h5><p><code>boolean</code> = <code>true</code></p><p>Whether to check if the file path is valid.</p><h4 id="returns-37" tabindex="-1"><a class="header-anchor" href="#returns-37"><span>Returns</span></a></h4>',10)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[111]||(e[111]=[a("code",null,"File",-1)])),_:1,__:[111]})]),e[152]||(e[152]=a("p",null,"A new File instance.",-1)),e[153]||(e[153]=a("h4",{id:"inherited-from-30",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#inherited-from-30"},[a("span",null,"Inherited from")])],-1)),a("p",null,[s(t,{to:"/api/filesystem/file/File/classes/File.html"},{default:i(()=>e[112]||(e[112]=[a("code",null,"File",-1)])),_:1,__:[112]}),e[114]||(e[114]=r(".")),s(t,{to:"/api/filesystem/file/File/classes/File.html#create"},{default:i(()=>e[113]||(e[113]=[a("code",null,"create",-1)])),_:1,__:[113]})]),e[154]||(e[154]=n('<hr><h3 id="createfile" tabindex="-1"><a class="header-anchor" href="#createfile"><span>createFile()</span></a></h3><blockquote><p><code>static</code> <strong>createFile</strong>(<code>path</code>, <code>originalName</code>, <code>mimeType?</code>, <code>checkPath?</code>): <code>UploadedFile</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/filesystem/blob/064ba29e1d5559c367f9a7471b75a6d308ebe158/src/file/UploadedFile.ts#L23" target="_blank" rel="noopener noreferrer">file/UploadedFile.ts:23</a></p><p>Create an UploadedFile.</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15"><span>Parameters</span></a></h4><h5 id="path-2" tabindex="-1"><a class="header-anchor" href="#path-2"><span>path</span></a></h5><p><code>string</code></p><p>The file path.</p><h5 id="originalname-1" tabindex="-1"><a class="header-anchor" href="#originalname-1"><span>originalName</span></a></h5><p><code>string</code></p><p>The original name of the uploaded file.</p><h5 id="mimetype-1" tabindex="-1"><a class="header-anchor" href="#mimetype-1"><span>mimeType?</span></a></h5><p><code>string</code></p><p>The MIME type of the file.</p><h5 id="checkpath-2" tabindex="-1"><a class="header-anchor" href="#checkpath-2"><span>checkPath?</span></a></h5><p><code>boolean</code> = <code>true</code></p><h4 id="returns-38" tabindex="-1"><a class="header-anchor" href="#returns-38"><span>Returns</span></a></h4><p><code>UploadedFile</code></p><p>A new UploadedFile instance.</p>',20))])}const u=l(h,[["render",f]]),g=JSON.parse('{"path":"/api/filesystem/file/UploadedFile/classes/UploadedFile.html","title":"Class: UploadedFile","lang":"en-US","frontmatter":{"description":"/ / UploadedFile Class: UploadedFile Defined in: file/UploadedFile.ts:11 Class representing an UploadedFile. Author Mr. Stone evensstone@gmail.com Extends Constructors Construct...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: UploadedFile\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/filesystem/file/UploadedFile/classes/UploadedFile.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: UploadedFile"}],["meta",{"property":"og:description","content":"/ / UploadedFile Class: UploadedFile Defined in: file/UploadedFile.ts:11 Class representing an UploadedFile. Author Mr. Stone evensstone@gmail.com Extends Constructors Construct..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":5.05,"words":1516},"filePathRelative":"api/filesystem/file/UploadedFile/classes/UploadedFile.md","autoDesc":true}');export{u as comp,g as data};
