import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as p,a as s,d as n,e as o,w as i,r as d,o as l}from"./app-BJyWHIWB.js";const c={};function h(u,e){const a=d("RouteLink");return l(),t("div",null,[e[5]||(e[5]=p(`<h1 id="class-serverresponsewrapper" tabindex="-1"><a class="header-anchor" href="#class-serverresponsewrapper"><span>Class: ServerResponseWrapper</span></a></h1><p>A wrapper for the Node.js HTTP <code>ServerResponse</code> to implement the <code>IRawResponseWrapper</code> interface.</p><p>This class provides methods for configuring and sending HTTP responses in a consistent and flexible manner. It supports setting status codes, headers, streaming files, or sending raw body content.</p><h2 id="implements" tabindex="-1"><a class="header-anchor" href="#implements"><span>Implements</span></a></h2><ul><li><code>IRawResponseWrapper</code>&lt;<code>ServerResponse</code>&gt;</li></ul><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">readonly</span> options<span class="token operator">:</span> Partial<span class="token operator">&lt;</span>RawHttpResponseOptions<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Partial configuration for customizing the response.</p><hr><h3 id="response" tabindex="-1"><a class="header-anchor" href="#response"><span>response</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">readonly</span> response<span class="token operator">:</span> ServerResponse<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The Node.js <code>ServerResponse</code> object to be wrapped.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="respond" tabindex="-1"><a class="header-anchor" href="#respond"><span>respond()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ServerResponse<span class="token operator">&lt;</span>IncomingMessage<span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Sends the HTTP response based on the configured options.</p><p>This method:</p><ul><li>Sets the <code>statusCode</code> and <code>statusMessage</code> if provided.</li><li>Configures response <code>headers</code> if specified.</li><li>Streams a file if <code>streamFile</code> is defined.</li><li>Sends raw content if <code>body</code> is provided.</li></ul><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>ServerResponse</code>&lt;<code>IncomingMessage</code>&gt;&gt;</p><p>A promise that resolves to the HTTP status code of the response.</p><h4 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h4><p>An error if the response cannot be sent due to an issue in <code>streamFile</code>.</p><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of"><span>Implementation of</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">IRawResponseWrapper<span class="token punctuation">.</span>respond</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token function">create</span><span class="token punctuation">(</span>response<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> ServerResponseWrapper<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Creates a new <code>ServerResponseWrapper</code> instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="response-1" tabindex="-1"><a class="header-anchor" href="#response-1"><span>response</span></a></h5><p><code>ServerResponse</code></p><p>The Node.js <code>ServerResponse</code> object to be wrapped.</p><h5 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1"><span>options</span></a></h5>`,35)),s("p",null,[e[1]||(e[1]=s("code",null,"Partial",-1)),e[2]||(e[2]=n("<")),o(a,{to:"/api/node-http-adapter/declarations/interfaces/RawHttpResponseOptions.html"},{default:i(()=>e[0]||(e[0]=[s("code",null,"RawHttpResponseOptions",-1)])),_:1,__:[0]}),e[3]||(e[3]=n("> = ")),e[4]||(e[4]=s("code",null,"{}",-1))]),e[6]||(e[6]=s("p",null,"Partial configuration for customizing the response.",-1)),e[7]||(e[7]=s("h4",{id:"returns-1",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#returns-1"},[s("span",null,"Returns")])],-1)),e[8]||(e[8]=s("p",null,[s("code",null,"ServerResponseWrapper")],-1)),e[9]||(e[9]=s("p",null,[n("A new instance of "),s("code",null,"ServerResponseWrapper"),n(".")],-1))])}const v=r(c,[["render",h]]),f=JSON.parse('{"path":"/api/node-http-adapter/ServerResponseWrapper/classes/ServerResponseWrapper.html","title":"Class: ServerResponseWrapper","lang":"en-US","frontmatter":{"description":"Class: ServerResponseWrapper A wrapper for the Node.js HTTP ServerResponse to implement the IRawResponseWrapper interface. This class provides methods for configuring and sendin...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: ServerResponseWrapper\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/node-http-adapter/ServerResponseWrapper/classes/ServerResponseWrapper.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: ServerResponseWrapper"}],["meta",{"property":"og:description","content":"Class: ServerResponseWrapper A wrapper for the Node.js HTTP ServerResponse to implement the IRawResponseWrapper interface. This class provides methods for configuring and sendin..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.64,"words":191},"filePathRelative":"api/node-http-adapter/ServerResponseWrapper/classes/ServerResponseWrapper.md","autoDesc":true}');export{v as comp,f as data};
