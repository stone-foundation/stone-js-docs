import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as t,a,d as n,e as p,w as i,r as l,o as c}from"./app-BJyWHIWB.js";const d={};function u(m,e){const s=l("RouteLink");return c(),o("div",null,[e[5]||(e[5]=t(`<h1 id="function-hasblueprint" tabindex="-1"><a class="header-anchor" href="#function-hasblueprint"><span>Function: hasBlueprint()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">hasBlueprint</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Class<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Check if a class has blueprint.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3>`,5)),a("p",null,[e[1]||(e[1]=a("code",null,"T",-1)),e[2]||(e[2]=n()),e[3]||(e[3]=a("em",null,"extends",-1)),e[4]||(e[4]=n()),p(s,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:i(()=>e[0]||(e[0]=[a("code",null,"ClassType",-1)])),_:1,__:[0]})]),e[6]||(e[6]=t('<h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="class" tabindex="-1"><a class="header-anchor" href="#class"><span>Class</span></a></h3><p><code>T</code></p><p>The class to check for metadata.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>boolean</code></p><p>True if the metadata and BLUEPRINT_KEY keys exist on the class, false otherwise.</p>',7))])}const g=r(d,[["render",u]]),T=JSON.parse('{"path":"/api/core/decorators/Metadata/functions/hasBlueprint.html","title":"Function: hasBlueprint()","lang":"en-US","frontmatter":{"description":"Function: hasBlueprint() Check if a class has blueprint. Type Parameters T T extends Parameters Class T The class to check for metadata. Returns boolean True if the metadata and...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: hasBlueprint()\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/decorators/Metadata/functions/hasBlueprint.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: hasBlueprint()"}],["meta",{"property":"og:description","content":"Function: hasBlueprint() Check if a class has blueprint. Type Parameters T T extends Parameters Class T The class to check for metadata. Returns boolean True if the metadata and..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.15,"words":46},"filePathRelative":"api/core/decorators/Metadata/functions/hasBlueprint.md","autoDesc":true}');export{g as comp,T as data};
