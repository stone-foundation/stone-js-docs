import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as n,b as o,e as a,w as r,d as t,r as d,o as p}from"./app-C80Pz9_H.js";const u={};function b(m,e){const s=d("RouteLink");return p(),l("div",null,[n("p",null,[a(s,{to:"/api/service-container/"},{default:r(()=>e[0]||(e[0]=[n("strong",null,"Service Container Documentation v0.0.44",-1)])),_:1,__:[0]})]),e[28]||(e[28]=n("hr",null,null,-1)),n("p",null,[a(s,{to:"/api/service-container/modules.html"},{default:r(()=>e[1]||(e[1]=[t("Service Container Documentation")])),_:1,__:[1]}),e[3]||(e[3]=t(" / ")),a(s,{to:"/api/service-container/models/Binding/"},{default:r(()=>e[2]||(e[2]=[t("models/Binding")])),_:1,__:[2]}),e[4]||(e[4]=t(" / Binding"))]),e[29]||(e[29]=o('<h1 id="class-abstract-binding-v" tabindex="-1"><a class="header-anchor" href="#class-abstract-binding-v"><span>Class: <code>abstract</code> Binding&lt;V&gt;</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/service-container/blob/249b060f7936ebb0ea1e26fa167dc5f8fc0b9bc3/src/models/Binding.ts#L14" target="_blank" rel="noopener noreferrer">models/Binding.ts:14</a></p><p>Abstract class representing a Binding.</p><p>This abstract class serves as the base class for all types of bindings in the service container. It holds a value and provides an abstract method to resolve and return that value, allowing different subclasses to implement their own resolution logic. Bindings are used to manage dependencies and control how objects are instantiated within the container.</p><h2 id="author" tabindex="-1"><a class="header-anchor" href="#author"><span>Author</span></a></h2><p>Mr. Stone <a href="mailto:evensstone@gmail.com" target="_blank" rel="noopener noreferrer">evensstone@gmail.com</a></p><h2 id="extended-by" tabindex="-1"><a class="header-anchor" href="#extended-by"><span>Extended by</span></a></h2>',7)),n("ul",null,[n("li",null,[a(s,{to:"/api/service-container/models/Instance/classes/Instance.html"},{default:r(()=>e[5]||(e[5]=[n("code",null,"Instance",-1)])),_:1,__:[5]})]),n("li",null,[a(s,{to:"/api/service-container/models/ResolverBinding/classes/ResolverBinding.html"},{default:r(()=>e[6]||(e[6]=[n("code",null,"ResolverBinding",-1)])),_:1,__:[6]})])]),e[30]||(e[30]=n("h2",{id:"type-parameters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#type-parameters"},[n("span",null,"Type Parameters")])],-1)),n("p",null,[e[8]||(e[8]=t("â€¢ ")),e[9]||(e[9]=n("strong",null,"V",-1)),e[10]||(e[10]=t()),e[11]||(e[11]=n("em",null,"extends",-1)),e[12]||(e[12]=t()),a(s,{to:"/api/service-container/declarations/type-aliases/BindingValue.html"},{default:r(()=>e[7]||(e[7]=[n("code",null,"BindingValue",-1)])),_:1,__:[7]})]),e[31]||(e[31]=n("p",null,"The type of value that this binding holds.",-1)),e[32]||(e[32]=n("h2",{id:"constructors",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#constructors"},[n("span",null,"Constructors")])],-1)),e[33]||(e[33]=n("h3",{id:"new-binding",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#new-binding"},[n("span",null,"new Binding()")])],-1)),n("blockquote",null,[n("p",null,[e[14]||(e[14]=n("strong",null,"new Binding",-1)),e[15]||(e[15]=t("<")),e[16]||(e[16]=n("code",null,"V",-1)),e[17]||(e[17]=t(">(")),e[18]||(e[18]=n("code",null,"value",-1)),e[19]||(e[19]=t("?): ")),a(s,{to:"/api/service-container/models/Binding/classes/Binding.html"},{default:r(()=>e[13]||(e[13]=[n("code",null,"Binding",-1)])),_:1,__:[13]}),e[20]||(e[20]=t("<")),e[21]||(e[21]=n("code",null,"V",-1)),e[22]||(e[22]=t(">"))])]),e[34]||(e[34]=o('<p>Defined in: <a href="https://github.com/stonemjs/service-container/blob/249b060f7936ebb0ea1e26fa167dc5f8fc0b9bc3/src/models/Binding.ts#L27" target="_blank" rel="noopener noreferrer">models/Binding.ts:27</a></p><p>Create a new instance of Binding.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value?</span></a></h5><p><code>V</code></p><p>The value to be held by the binding.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4>',7)),n("p",null,[a(s,{to:"/api/service-container/models/Binding/classes/Binding.html"},{default:r(()=>e[23]||(e[23]=[n("code",null,"Binding",-1)])),_:1,__:[23]}),e[24]||(e[24]=t("<")),e[25]||(e[25]=n("code",null,"V",-1)),e[26]||(e[26]=t(">"))]),e[35]||(e[35]=o('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="value-1" tabindex="-1"><a class="header-anchor" href="#value-1"><span>value?</span></a></h3><blockquote><p><code>protected</code> <code>optional</code> <strong>value</strong>: <code>V</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/service-container/blob/249b060f7936ebb0ea1e26fa167dc5f8fc0b9bc3/src/models/Binding.ts#L20" target="_blank" rel="noopener noreferrer">models/Binding.ts:20</a></p><p>The value held by the binding.</p><p>This value is resolved at runtime, either directly or through a resolver function.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="isresolved" tabindex="-1"><a class="header-anchor" href="#isresolved"><span>isResolved()</span></a></h3><blockquote><p><code>protected</code> <strong>isResolved</strong>(): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/service-container/blob/249b060f7936ebb0ea1e26fa167dc5f8fc0b9bc3/src/models/Binding.ts#L36" target="_blank" rel="noopener noreferrer">models/Binding.ts:36</a></p><p>Check if the value has been resolved.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>boolean</code></p><p>A boolean indicating whether the value has been resolved.</p><hr><h3 id="resolve" tabindex="-1"><a class="header-anchor" href="#resolve"><span>resolve()</span></a></h3><blockquote><p><code>abstract</code> <strong>resolve</strong>(<code>container</code>): <code>undefined</code> | <code>V</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/service-container/blob/249b060f7936ebb0ea1e26fa167dc5f8fc0b9bc3/src/models/Binding.ts#L48" target="_blank" rel="noopener noreferrer">models/Binding.ts:48</a></p><p>Resolve and return the value of the binding.</p><p>This abstract method must be implemented by subclasses to provide specific resolution logic.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="container" tabindex="-1"><a class="header-anchor" href="#container"><span>container</span></a></h5>',22)),n("p",null,[a(s,{to:"/api/service-container/Container/classes/Container.html"},{default:r(()=>e[27]||(e[27]=[n("code",null,"Container",-1)])),_:1,__:[27]})]),e[36]||(e[36]=n("p",null,"The container to resolve dependencies from.",-1)),e[37]||(e[37]=n("h4",{id:"returns-2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-2"},[n("span",null,"Returns")])],-1)),e[38]||(e[38]=n("p",null,[n("code",null,"undefined"),t(" | "),n("code",null,"V")],-1)),e[39]||(e[39]=n("p",null,"The resolved value of the binding.",-1))])}const f=i(u,[["render",b]]),h=JSON.parse('{"path":"/api/service-container/models/Binding/classes/Binding.html","title":"Class: abstract Binding<V>","lang":"en-US","frontmatter":{"description":"/ / Binding Class: abstract Binding<V> Defined in: models/Binding.ts:14 Abstract class representing a Binding. This abstract class serves as the base class for all types of bind...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: abstract Binding<V>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/service-container/models/Binding/classes/Binding.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: abstract Binding<V>"}],["meta",{"property":"og:description","content":"/ / Binding Class: abstract Binding<V> Defined in: models/Binding.ts:14 Abstract class representing a Binding. This abstract class serves as the base class for all types of bind..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.9,"words":269},"filePathRelative":"api/service-container/models/Binding/classes/Binding.md","autoDesc":true}');export{f as comp,h as data};
