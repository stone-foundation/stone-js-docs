import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as a,a as s,e as o,w as p,r as i,o as l}from"./app-BJyWHIWB.js";const c={};function d(m,e){const n=i("RouteLink");return l(),r("div",null,[e[1]||(e[1]=a(`<h1 id="type-alias-resolver-v" tabindex="-1"><a class="header-anchor" href="#type-alias-resolver-v"><span>Type Alias: Resolver()&lt;V&gt;</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">type</span> <span class="token class-name">Resolver<span class="token operator">&lt;</span><span class="token constant">V</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>container<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">V</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>A resolver function that takes a container and returns a value of type V.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="v" tabindex="-1"><a class="header-anchor" href="#v"><span>V</span></a></h3><p><code>V</code></p><p>The type of value that the resolver returns.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="container" tabindex="-1"><a class="header-anchor" href="#container"><span>container</span></a></h3>`,9)),s("p",null,[o(n,{to:"/api/service-container/Container/classes/Container.html"},{default:p(()=>e[0]||(e[0]=[s("code",null,"Container",-1)])),_:1,__:[0]})]),e[2]||(e[2]=a(`<p>The container used to resolve dependencies.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>V</code></p><p>The resolved value of type V.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> myResolver<span class="token operator">:</span> Resolver<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>container<span class="token operator">:</span> Container<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Use the container to resolve dependencies and return a number.</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token number">42</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const v=t(c,[["render",d]]),y=JSON.parse('{"path":"/api/service-container/declarations/type-aliases/Resolver.html","title":"Type Alias: Resolver()<V>","lang":"en-US","frontmatter":{"description":"Type Alias: Resolver()<V> A resolver function that takes a container and returns a value of type V. Type Parameters V V The type of value that the resolver returns. Parameters c...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: Resolver()<V>\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/service-container/declarations/type-aliases/Resolver.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: Resolver()<V>"}],["meta",{"property":"og:description","content":"Type Alias: Resolver()<V> A resolver function that takes a container and returns a value of type V. Type Parameters V V The type of value that the resolver returns. Parameters c..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.25,"words":75},"filePathRelative":"api/service-container/declarations/type-aliases/Resolver.md","autoDesc":true}');export{v as comp,y as data};
