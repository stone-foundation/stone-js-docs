import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a,b as o,e as n,w as s,d as t,r as i,o as l}from"./app-7vCtLRjQ.js";const c={};function u(m,e){const r=i("RouteLink");return l(),p("div",null,[a("p",null,[n(r,{to:"/api/core/"},{default:s(()=>e[0]||(e[0]=[a("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[15]||(e[15]=a("hr",null,null,-1)),a("p",null,[n(r,{to:"/api/core/"},{default:s(()=>e[1]||(e[1]=[t("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=t(" / ")),n(r,{to:"/api/core/decorators/AdapterMiddleware/"},{default:s(()=>e[2]||(e[2]=[t("decorators/AdapterMiddleware")])),_:1,__:[2]}),e[4]||(e[4]=t(" / AdapterMiddleware"))]),e[16]||(e[16]=o('<h1 id="function-adaptermiddleware" tabindex="-1"><a class="header-anchor" href="#function-adaptermiddleware"><span>Function: AdapterMiddleware()</span></a></h1><blockquote><p><strong>AdapterMiddleware</strong>&lt;<code>T</code>&gt;(<code>options</code>): <code>ClassDecorator</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/decorators/AdapterMiddleware.ts#L22" target="_blank" rel="noopener noreferrer">decorators/AdapterMiddleware.ts:22</a></p><p>AdapterMiddleware decorator to mark a class as middleware within the Stone.js framework.</p><p>This decorator is used to customize classes as middleware, allowing them to be registered and managed as part of the request/response lifecycle or other layers such as adapter, kernel, or router.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3>',7)),a("p",null,[e[7]||(e[7]=a("code",null,"T",-1)),e[8]||(e[8]=t()),e[9]||(e[9]=a("em",null,"extends",-1)),e[10]||(e[10]=t()),n(r,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:s(()=>e[5]||(e[5]=[a("code",null,"ClassType",-1)])),_:1,__:[5]}),e[11]||(e[11]=t(" = ")),n(r,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:s(()=>e[6]||(e[6]=[a("code",null,"ClassType",-1)])),_:1,__:[6]})]),e[17]||(e[17]=a("h2",{id:"parameters",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#parameters"},[a("span",null,"Parameters")])],-1)),e[18]||(e[18]=a("h3",{id:"options",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#options"},[a("span",null,"options")])],-1)),a("p",null,[n(r,{to:"/api/core/declarations/interfaces/AdapterMiddlewareOptions.html"},{default:s(()=>e[12]||(e[12]=[a("code",null,"AdapterMiddlewareOptions",-1)])),_:1,__:[12]}),e[13]||(e[13]=t(" = ")),e[14]||(e[14]=a("code",null,"{}",-1))]),e[19]||(e[19]=o(`<p>The configuration options for the middleware, including platform, priority, singleton registration, alias, layer, and type.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>ClassDecorator</code></p><p>A decorator function to set metadata on the target class.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">AdapterMiddleware</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> priority<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> singleton<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyMiddleware</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// AdapterMiddleware class logic here.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const M=d(c,[["render",u]]),g=JSON.parse('{"path":"/api/core/decorators/AdapterMiddleware/functions/AdapterMiddleware.html","title":"Function: AdapterMiddleware()","lang":"en-US","frontmatter":{"description":"/ / AdapterMiddleware Function: AdapterMiddleware() AdapterMiddleware<T>(options): ClassDecorator Defined in: decorators/AdapterMiddleware.ts:22 AdapterMiddleware decorator to m...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: AdapterMiddleware()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/decorators/AdapterMiddleware/functions/AdapterMiddleware.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: AdapterMiddleware()"}],["meta",{"property":"og:description","content":"/ / AdapterMiddleware Function: AdapterMiddleware() AdapterMiddleware<T>(options): ClassDecorator Defined in: decorators/AdapterMiddleware.ts:22 AdapterMiddleware decorator to m..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.41,"words":123},"filePathRelative":"api/core/decorators/AdapterMiddleware/functions/AdapterMiddleware.md","autoDesc":true}');export{M as comp,g as data};
