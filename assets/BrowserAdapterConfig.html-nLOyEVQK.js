import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as r,b as i,e as a,w as n,d as t,r as d,o as l}from"./app-7vCtLRjQ.js";const c={};function f(m,e){const o=d("RouteLink");return l(),p("div",null,[r("p",null,[a(o,{to:"/api/browser-adapter/"},{default:n(()=>e[0]||(e[0]=[r("strong",null,"AWS Lambda Adapter Documentation v0.0.2",-1)])),_:1,__:[0]})]),e[5]||(e[5]=r("hr",null,null,-1)),r("p",null,[a(o,{to:"/api/browser-adapter/modules.html"},{default:n(()=>e[1]||(e[1]=[t("AWS Lambda Adapter Documentation")])),_:1,__:[1]}),e[3]||(e[3]=t(" / ")),a(o,{to:"/api/browser-adapter/options/BrowserAdapterBlueprint/"},{default:n(()=>e[2]||(e[2]=[t("options/BrowserAdapterBlueprint")])),_:1,__:[2]}),e[4]||(e[4]=t(" / BrowserAdapterConfig"))]),e[6]||(e[6]=i('<h1 id="interface-browseradapterconfig" tabindex="-1"><a class="header-anchor" href="#interface-browseradapterconfig"><span>Interface: BrowserAdapterConfig</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/browser-adapter/blob/2a6ec5410a97b6bc45328cca33b607b5a6b7ed84/src/options/BrowserAdapterBlueprint.ts#L14" target="_blank" rel="noopener noreferrer">src/options/BrowserAdapterBlueprint.ts:14</a></p><p>Configuration interface for the Browser Adapter.</p><p>Extends the <code>AdapterConfig</code> interface from the Stone.js framework and provides customizable options specific to the Browser platform. This includes alias, resolver, middleware, hooks, and various adapter state flags.</p><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends"><span>Extends</span></a></h2><ul><li><code>AdapterConfig</code></li></ul><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="events" tabindex="-1"><a class="header-anchor" href="#events"><span>events</span></a></h3><blockquote><p><strong>events</strong>: <code>string</code>[]</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/browser-adapter/blob/2a6ec5410a97b6bc45328cca33b607b5a6b7ed84/src/options/BrowserAdapterBlueprint.ts#L18" target="_blank" rel="noopener noreferrer">src/options/BrowserAdapterBlueprint.ts:18</a></p><p>Browser-specific events that the adapter should listen for.</p>',11))])}const B=s(c,[["render",f]]),g=JSON.parse('{"path":"/api/browser-adapter/options/BrowserAdapterBlueprint/interfaces/BrowserAdapterConfig.html","title":"Interface: BrowserAdapterConfig","lang":"en-US","frontmatter":{"description":"/ / BrowserAdapterConfig Interface: BrowserAdapterConfig Defined in: src/options/BrowserAdapterBlueprint.ts:14 Configuration interface for the Browser Adapter. Extends the Adapt...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: BrowserAdapterConfig\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/browser-adapter/options/BrowserAdapterBlueprint/interfaces/BrowserAdapterConfig.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: BrowserAdapterConfig"}],["meta",{"property":"og:description","content":"/ / BrowserAdapterConfig Interface: BrowserAdapterConfig Defined in: src/options/BrowserAdapterBlueprint.ts:14 Configuration interface for the Browser Adapter. Extends the Adapt..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.28,"words":83},"filePathRelative":"api/browser-adapter/options/BrowserAdapterBlueprint/interfaces/BrowserAdapterConfig.md","autoDesc":true}');export{B as comp,g as data};
