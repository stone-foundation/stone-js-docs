import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as r,a as e,d as t,e as a,w as o,r as i,o as d}from"./app-D3YQYQ8j.js";const u={};function m(g,n){const s=i("RouteLink");return d(),p("div",null,[n[32]||(n[32]=r(`<h1 id="function-addblueprint" tabindex="-1"><a class="header-anchor" href="#function-addblueprint"><span>Function: addBlueprint()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">addBlueprint</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span></span>
<span class="line">   _Class<span class="token punctuation">,</span> </span>
<span class="line">   context<span class="token punctuation">,</span> <span class="token operator">...</span></span>
<span class="line">   blueprints<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Add Blueprint on a given decorator context.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3>`,5)),e("p",null,[n[1]||(n[1]=e("code",null,"T",-1)),n[2]||(n[2]=t()),n[3]||(n[3]=e("em",null,"extends",-1)),n[4]||(n[4]=t()),a(s,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:o(()=>n[0]||(n[0]=[e("code",null,"ClassType",-1)])),_:1,__:[0]})]),n[33]||(n[33]=e("h3",{id:"u",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#u"},[e("span",null,"U")])],-1)),e("p",null,[n[7]||(n[7]=e("code",null,"U",-1)),n[8]||(n[8]=t()),n[9]||(n[9]=e("em",null,"extends",-1)),n[10]||(n[10]=t()),a(s,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:o(()=>n[5]||(n[5]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[5]}),n[11]||(n[11]=t(" = ")),a(s,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:o(()=>n[6]||(n[6]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[6]})]),n[34]||(n[34]=e("h3",{id:"v",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#v"},[e("span",null,"V")])],-1)),e("p",null,[n[14]||(n[14]=e("code",null,"V",-1)),n[15]||(n[15]=t()),n[16]||(n[16]=e("em",null,"extends",-1)),n[17]||(n[17]=t()),a(s,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:o(()=>n[12]||(n[12]=[e("code",null,"OutgoingResponse",-1)])),_:1,__:[12]}),n[18]||(n[18]=t(" = ")),a(s,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:o(()=>n[13]||(n[13]=[e("code",null,"OutgoingResponse",-1)])),_:1,__:[13]})]),n[35]||(n[35]=r('<h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="class" tabindex="-1"><a class="header-anchor" href="#class"><span>_Class</span></a></h3><p><code>T</code></p><p>The class to get all metadata from.</p><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context"><span>context</span></a></h3><p><code>DecoratorContext</code></p><p>The decorator context where metadata is being set.</p><h3 id="blueprints" tabindex="-1"><a class="header-anchor" href="#blueprints"><span>blueprints</span></a></h3>',8)),e("p",null,[n[20]||(n[20]=t("...( | ")),n[21]||(n[21]=e("code",null,"Record",-1)),n[22]||(n[22]=t("<")),n[23]||(n[23]=e("code",null,"string",-1)),n[24]||(n[24]=t(", ")),n[25]||(n[25]=e("code",null,"any",-1)),n[26]||(n[26]=t("> | ")),a(s,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>n[19]||(n[19]=[e("code",null,"StoneBlueprint",-1)])),_:1,__:[19]}),n[27]||(n[27]=t("<")),n[28]||(n[28]=e("code",null,"U",-1)),n[29]||(n[29]=t(", ")),n[30]||(n[30]=e("code",null,"V",-1)),n[31]||(n[31]=t(">)[]"))]),n[36]||(n[36]=e("p",null,"The list of blueprints.",-1)),n[37]||(n[37]=e("h2",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns"},[e("span",null,"Returns")])],-1)),n[38]||(n[38]=e("p",null,[e("code",null,"void")],-1))])}const v=l(u,[["render",m]]),x=JSON.parse('{"path":"/api/core/decorators/Metadata/functions/addBlueprint.html","title":"Function: addBlueprint()","lang":"en-US","frontmatter":{"description":"Function: addBlueprint() Add Blueprint on a given decorator context. Type Parameters T T extends U U extends = V V extends = Parameters _Class T The class to get all metadata fr...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: addBlueprint()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/decorators/Metadata/functions/addBlueprint.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: addBlueprint()"}],["meta",{"property":"og:description","content":"Function: addBlueprint() Add Blueprint on a given decorator context. Type Parameters T T extends U U extends = V V extends = Parameters _Class T The class to get all metadata fr..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.26,"words":77},"filePathRelative":"api/core/decorators/Metadata/functions/addBlueprint.md","autoDesc":true}');export{v as comp,x as data};
