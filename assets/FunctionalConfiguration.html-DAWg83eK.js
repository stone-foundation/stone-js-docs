import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as e,b as s,e as a,w as i,d as n,r as u,o as p}from"./app-B3SZc_3K.js";const d={};function m(f,t){const o=u("RouteLink");return p(),l("div",null,[e("p",null,[a(o,{to:"/api/core/"},{default:i(()=>t[0]||(t[0]=[e("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),t[23]||(t[23]=e("hr",null,null,-1)),e("p",null,[a(o,{to:"/api/core/"},{default:i(()=>t[1]||(t[1]=[n("Core Documentation")])),_:1,__:[1]}),t[3]||(t[3]=n(" / ")),a(o,{to:"/api/core/declarations/"},{default:i(()=>t[2]||(t[2]=[n("declarations")])),_:1,__:[2]}),t[4]||(t[4]=n(" / FunctionalConfiguration"))]),t[24]||(t[24]=e("h1",{id:"type-alias-functionalconfiguration-tvalues",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#type-alias-functionalconfiguration-tvalues"},[e("span",null,"Type Alias: FunctionalConfiguration()<TValues>")])],-1)),e("blockquote",null,[e("p",null,[t[6]||(t[6]=e("strong",null,"FunctionalConfiguration",-1)),t[7]||(t[7]=n("<")),t[8]||(t[8]=e("code",null,"TValues",-1)),t[9]||(t[9]=n("> = (")),t[10]||(t[10]=e("code",null,"blueprint",-1)),t[11]||(t[11]=n(") => ")),a(o,{to:"/api/core/declarations/type-aliases/Promiseable.html"},{default:i(()=>t[5]||(t[5]=[e("code",null,"Promiseable",-1)])),_:1,__:[5]}),t[12]||(t[12]=n("<")),t[13]||(t[13]=e("code",null,"void",-1)),t[14]||(t[14]=n(">"))])]),t[25]||(t[25]=s('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L924" target="_blank" rel="noopener noreferrer">declarations.ts:924</a></p><p>FunctionalConfiguration Type.</p><p>Represents a function that configures the system based on the provided blueprint.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="tvalues" tabindex="-1"><a class="header-anchor" href="#tvalues"><span>TValues</span></a></h3><p><code>TValues</code> <em>extends</em> <code>object</code> = <code>any</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="blueprint" tabindex="-1"><a class="header-anchor" href="#blueprint"><span>blueprint</span></a></h3>',8)),e("p",null,[a(o,{to:"/api/core/declarations/type-aliases/IBlueprint.html"},{default:i(()=>t[15]||(t[15]=[e("code",null,"IBlueprint",-1)])),_:1,__:[15]}),t[16]||(t[16]=n("<")),t[17]||(t[17]=e("code",null,"TValues",-1)),t[18]||(t[18]=n(">"))]),t[26]||(t[26]=e("p",null,"The blueprint to configure.",-1)),t[27]||(t[27]=e("h2",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns"},[e("span",null,"Returns")])],-1)),e("p",null,[a(o,{to:"/api/core/declarations/type-aliases/Promiseable.html"},{default:i(()=>t[19]||(t[19]=[e("code",null,"Promiseable",-1)])),_:1,__:[19]}),t[20]||(t[20]=n("<")),t[21]||(t[21]=e("code",null,"void",-1)),t[22]||(t[22]=n(">"))]),t[28]||(t[28]=e("p",null,"A promise that resolves when the configuration is complete.",-1))])}const b=r(d,[["render",m]]),T=JSON.parse('{"path":"/api/core/declarations/type-aliases/FunctionalConfiguration.html","title":"Type Alias: FunctionalConfiguration()<TValues>","lang":"en-US","frontmatter":{"description":"/ / FunctionalConfiguration Type Alias: FunctionalConfiguration()<TValues> FunctionalConfiguration<TValues> = (blueprint) => <void> Defined in: declarations.ts:924 FunctionalCon...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: FunctionalConfiguration()<TValues>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/declarations/type-aliases/FunctionalConfiguration.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: FunctionalConfiguration()<TValues>"}],["meta",{"property":"og:description","content":"/ / FunctionalConfiguration Type Alias: FunctionalConfiguration()<TValues> FunctionalConfiguration<TValues> = (blueprint) => <void> Defined in: declarations.ts:924 FunctionalCon..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.24,"words":71},"filePathRelative":"api/core/declarations/type-aliases/FunctionalConfiguration.md","autoDesc":true}');export{b as comp,T as data};
