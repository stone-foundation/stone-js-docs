import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,o as s}from"./app-CrbMk51G.js";const i={};function o(r,e){return s(),a("div",null,e[0]||(e[0]=[t(`<h1 id="type-alias-bindingvalue" tabindex="-1"><a class="header-anchor" href="#type-alias-bindingvalue"><span>Type Alias: BindingValue</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">type</span> <span class="token class-name">BindingValue</span> <span class="token operator">=</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">Function</span> <span class="token operator">|</span> object <span class="token operator">|</span> <span class="token builtin">symbol</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>A union type representing the possible values that can be bound in the container.</p><p>Binding values can be of various types, including numbers, booleans, strings, functions, objects, or symbols. Unlike <code>BindingKey</code>, <code>BindingValue</code> represents the actual data or instance being bound, while <code>BindingKey</code> represents the identifier used to access that data.</p>`,4)]))}const c=n(i,[["render",o]]),d=JSON.parse('{"path":"/api/service-container/declarations/type-aliases/BindingValue.html","title":"Type Alias: BindingValue","lang":"en-US","frontmatter":{"description":"Type Alias: BindingValue A union type representing the possible values that can be bound in the container. Binding values can be of various types, including numbers, booleans, s...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: BindingValue\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/service-container/declarations/type-aliases/BindingValue.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: BindingValue"}],["meta",{"property":"og:description","content":"Type Alias: BindingValue A union type representing the possible values that can be bound in the container. Binding values can be of various types, including numbers, booleans, s..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.21,"words":62},"filePathRelative":"api/service-container/declarations/type-aliases/BindingValue.md","autoDesc":true}');export{c as comp,d as data};
