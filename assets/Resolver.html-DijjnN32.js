import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,a,b as o,e as t,w as s,d as r,r as l,o as c}from"./app-B3SZc_3K.js";const d={};function u(m,e){const n=l("RouteLink");return c(),i("div",null,[a("p",null,[t(n,{to:"/api/service-container/"},{default:s(()=>e[0]||(e[0]=[a("strong",null,"Service Container Documentation v0.0.44",-1)])),_:1,__:[0]})]),e[6]||(e[6]=a("hr",null,null,-1)),a("p",null,[t(n,{to:"/api/service-container/modules.html"},{default:s(()=>e[1]||(e[1]=[r("Service Container Documentation")])),_:1,__:[1]}),e[3]||(e[3]=r(" / ")),t(n,{to:"/api/service-container/declarations/"},{default:s(()=>e[2]||(e[2]=[r("declarations")])),_:1,__:[2]}),e[4]||(e[4]=r(" / Resolver"))]),e[7]||(e[7]=o('<h1 id="type-alias-resolver-v" tabindex="-1"><a class="header-anchor" href="#type-alias-resolver-v"><span>Type Alias: Resolver()&lt;V&gt;</span></a></h1><blockquote><p><strong>Resolver</strong>&lt;<code>V</code>&gt;: (<code>container</code>) =&gt; <code>V</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/service-container/blob/249b060f7936ebb0ea1e26fa167dc5f8fc0b9bc3/src/declarations.ts#L18" target="_blank" rel="noopener noreferrer">declarations.ts:18</a></p><p>A resolver function that takes a container and returns a value of type V.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><p>â€¢ <strong>V</strong></p><p>The type of value that the resolver returns.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="container" tabindex="-1"><a class="header-anchor" href="#container"><span>container</span></a></h3>',9)),a("p",null,[t(n,{to:"/api/service-container/Container/classes/Container.html"},{default:s(()=>e[5]||(e[5]=[a("code",null,"Container",-1)])),_:1,__:[5]})]),e[8]||(e[8]=o(`<p>The container used to resolve dependencies.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>V</code></p><p>The resolved value of type V.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> myResolver<span class="token operator">:</span> Resolver<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>container<span class="token operator">:</span> Container<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Use the container to resolve dependencies and return a number.</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token number">42</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const y=p(d,[["render",u]]),f=JSON.parse('{"path":"/api/service-container/declarations/type-aliases/Resolver.html","title":"Type Alias: Resolver()<V>","lang":"en-US","frontmatter":{"description":"/ / Resolver Type Alias: Resolver()<V> Resolver<V>: (container) => V Defined in: declarations.ts:18 A resolver function that takes a container and returns a value of type V. Typ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: Resolver()<V>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/service-container/declarations/type-aliases/Resolver.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: Resolver()<V>"}],["meta",{"property":"og:description","content":"/ / Resolver Type Alias: Resolver()<V> Resolver<V>: (container) => V Defined in: declarations.ts:18 A resolver function that takes a container and returns a value of type V. Typ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.31,"words":94},"filePathRelative":"api/service-container/declarations/type-aliases/Resolver.md","autoDesc":true}');export{y as comp,f as data};
