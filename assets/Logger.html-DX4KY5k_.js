import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a,b as t,e as s,w as n,d as r,r as g,o as i}from"./app-C80Pz9_H.js";const c={};function l(h,e){const o=g("RouteLink");return i(),d("div",null,[a("p",null,[s(o,{to:"/api/core/"},{default:n(()=>e[0]||(e[0]=[a("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[12]||(e[12]=a("hr",null,null,-1)),a("p",null,[s(o,{to:"/api/core/"},{default:n(()=>e[1]||(e[1]=[r("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=r(" / ")),s(o,{to:"/api/core/logger/Logger/"},{default:n(()=>e[2]||(e[2]=[r("logger/Logger")])),_:1,__:[2]}),e[4]||(e[4]=r(" / Logger"))]),e[13]||(e[13]=t('<h1 id="class-logger" tabindex="-1"><a class="header-anchor" href="#class-logger"><span>Class: Logger</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/logger/Logger.ts#L13" target="_blank" rel="noopener noreferrer">logger/Logger.ts:13</a></p><p>Class representing a Logger for the Stone.js framework.</p><p>Any class that implements the ILogger interface can be used as a logger. The Logger class provides static methods for logging messages at different levels (info, debug, warn, error).</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><blockquote><p><strong>new Logger</strong>(): <code>Logger</code></p></blockquote><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Logger</code></p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>debug()</span></a></h3><blockquote><p><code>static</code> <strong>debug</strong>(<code>message</code>, ...<code>optionalParams</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/logger/Logger.ts#L59" target="_blank" rel="noopener noreferrer">logger/Logger.ts:59</a></p><p>Logs debug-level messages, used for debugging purposes.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="message" tabindex="-1"><a class="header-anchor" href="#message"><span>message</span></a></h5><p><code>string</code></p><p>The message to log.</p><h5 id="optionalparams" tabindex="-1"><a class="header-anchor" href="#optionalparams"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error"><span>error()</span></a></h3><blockquote><p><code>static</code> <strong>error</strong>(<code>message</code>, ...<code>optionalParams</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/logger/Logger.ts#L79" target="_blank" rel="noopener noreferrer">logger/Logger.ts:79</a></p><p>Logs errors, used to report errors or exceptions.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="message-1" tabindex="-1"><a class="header-anchor" href="#message-1"><span>message</span></a></h5><p><code>string</code></p><p>The error message to log.</p><h5 id="optionalparams-1" tabindex="-1"><a class="header-anchor" href="#optionalparams-1"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="getinstance" tabindex="-1"><a class="header-anchor" href="#getinstance"><span>getInstance()</span></a></h3>',39)),a("blockquote",null,[a("p",null,[e[6]||(e[6]=a("code",null,"static",-1)),e[7]||(e[7]=r()),e[8]||(e[8]=a("strong",null,"getInstance",-1)),e[9]||(e[9]=r("(): ")),s(o,{to:"/api/core/declarations/interfaces/ILogger.html"},{default:n(()=>e[5]||(e[5]=[a("code",null,"ILogger",-1)])),_:1,__:[5]})])]),e[14]||(e[14]=a("p",null,[r("Defined in: "),a("a",{href:"https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/logger/Logger.ts#L36",target:"_blank",rel:"noopener noreferrer"},"logger/Logger.ts:36")],-1)),e[15]||(e[15]=a("p",null,"Returns the current logger instance.",-1)),e[16]||(e[16]=a("h4",{id:"returns-3",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#returns-3"},[a("span",null,"Returns")])],-1)),a("p",null,[s(o,{to:"/api/core/declarations/interfaces/ILogger.html"},{default:n(()=>e[10]||(e[10]=[a("code",null,"ILogger",-1)])),_:1,__:[10]})]),e[17]||(e[17]=t('<ul><li>The current logger instance.</li></ul><hr><h3 id="info" tabindex="-1"><a class="header-anchor" href="#info"><span>info()</span></a></h3><blockquote><p><code>static</code> <strong>info</strong>(<code>message</code>, ...<code>optionalParams</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/logger/Logger.ts#L49" target="_blank" rel="noopener noreferrer">logger/Logger.ts:49</a></p><p>Logs informational messages.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="message-2" tabindex="-1"><a class="header-anchor" href="#message-2"><span>message</span></a></h5><p><code>string</code></p><p>The message to log.</p><h5 id="optionalparams-2" tabindex="-1"><a class="header-anchor" href="#optionalparams-2"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="init" tabindex="-1"><a class="header-anchor" href="#init"><span>init()</span></a></h3><blockquote><p><code>static</code> <strong>init</strong>(<code>blueprint</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/logger/Logger.ts#L21" target="_blank" rel="noopener noreferrer">logger/Logger.ts:21</a></p><p>Initializes the logger instance.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="blueprint" tabindex="-1"><a class="header-anchor" href="#blueprint"><span>blueprint</span></a></h5>',22)),a("p",null,[s(o,{to:"/api/core/declarations/type-aliases/IBlueprint.html"},{default:n(()=>e[11]||(e[11]=[a("code",null,"IBlueprint",-1)])),_:1,__:[11]})]),e[18]||(e[18]=t('<p>The blueprint to initialize the logger with.</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="log" tabindex="-1"><a class="header-anchor" href="#log"><span>log()</span></a></h3><blockquote><p><code>static</code> <strong>log</strong>(<code>message</code>, ...<code>optionalParams</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/logger/Logger.ts#L89" target="_blank" rel="noopener noreferrer">logger/Logger.ts:89</a></p><p>Logs general messages, similar to <code>info</code> but less specific.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="message-3" tabindex="-1"><a class="header-anchor" href="#message-3"><span>message</span></a></h5><p><code>string</code></p><p>The message to log.</p><h5 id="optionalparams-3" tabindex="-1"><a class="header-anchor" href="#optionalparams-3"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="warn" tabindex="-1"><a class="header-anchor" href="#warn"><span>warn()</span></a></h3><blockquote><p><code>static</code> <strong>warn</strong>(<code>message</code>, ...<code>optionalParams</code>): <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/logger/Logger.ts#L69" target="_blank" rel="noopener noreferrer">logger/Logger.ts:69</a></p><p>Logs warnings, used to indicate potential issues.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="message-4" tabindex="-1"><a class="header-anchor" href="#message-4"><span>message</span></a></h5><p><code>string</code></p><p>The warning message to log.</p><h5 id="optionalparams-4" tabindex="-1"><a class="header-anchor" href="#optionalparams-4"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h4><p><code>void</code></p>',31))])}const u=p(c,[["render",l]]),b=JSON.parse('{"path":"/api/core/logger/Logger/classes/Logger.html","title":"Class: Logger","lang":"en-US","frontmatter":{"description":"/ / Logger Class: Logger Defined in: logger/Logger.ts:13 Class representing a Logger for the Stone.js framework. Any class that implements the ILogger interface can be used as a...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: Logger\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/logger/Logger/classes/Logger.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: Logger"}],["meta",{"property":"og:description","content":"/ / Logger Class: Logger Defined in: logger/Logger.ts:13 Class representing a Logger for the Stone.js framework. Any class that implements the ILogger interface can be used as a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":1.02,"words":307},"filePathRelative":"api/core/logger/Logger/classes/Logger.md","autoDesc":true}');export{u as comp,b as data};
