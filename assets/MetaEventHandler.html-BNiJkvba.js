import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as t,a as n,d as a,e as p,w as i,r as l,o as c}from"./app-BJyWHIWB.js";const d={};function m(g,e){const s=l("RouteLink");return c(),o("div",null,[e[5]||(e[5]=t('<h1 id="interface-metaeventhandler-incomingeventtype-outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#interface-metaeventhandler-incomingeventtype-outgoingresponsetype"><span>Interface: MetaEventHandler&lt;IncomingEventType, OutgoingResponseType&gt;</span></a></h1><p>Represents a meta event handler.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="incomingeventtype" tabindex="-1"><a class="header-anchor" href="#incomingeventtype"><span>IncomingEventType</span></a></h3>',4)),n("p",null,[e[1]||(e[1]=n("code",null,"IncomingEventType",-1)),e[2]||(e[2]=a()),e[3]||(e[3]=n("em",null,"extends",-1)),e[4]||(e[4]=a()),p(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:i(()=>e[0]||(e[0]=[n("code",null,"IIncomingEvent",-1)])),_:1,__:[0]})]),e[6]||(e[6]=t(`<p>The type representing the incoming event.</p><h3 id="outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#outgoingresponsetype"><span>OutgoingResponseType</span></a></h3><p><code>OutgoingResponseType</code> = <code>unknown</code></p><p>The type representing the outgoing response.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="action" tabindex="-1"><a class="header-anchor" href="#action"><span>action?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional action<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="isclass" tabindex="-1"><a class="header-anchor" href="#isclass"><span>isClass?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional isClass<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="isfactory" tabindex="-1"><a class="header-anchor" href="#isfactory"><span>isFactory?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional isFactory<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="module" tabindex="-1"><a class="header-anchor" href="#module"><span>module</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">module<span class="token operator">:</span> EventHandlerType<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,16))])}const y=r(d,[["render",m]]),v=JSON.parse('{"path":"/api/router/declarations/interfaces/MetaEventHandler.html","title":"Interface: MetaEventHandler<IncomingEventType, OutgoingResponseType>","lang":"en-US","frontmatter":{"description":"Interface: MetaEventHandler<IncomingEventType, OutgoingResponseType> Represents a meta event handler. Type Parameters IncomingEventType IncomingEventType extends The type repres...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: MetaEventHandler<IncomingEventType, OutgoingResponseType>\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/router/declarations/interfaces/MetaEventHandler.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: MetaEventHandler<IncomingEventType, OutgoingResponseType>"}],["meta",{"property":"og:description","content":"Interface: MetaEventHandler<IncomingEventType, OutgoingResponseType> Represents a meta event handler. Type Parameters IncomingEventType IncomingEventType extends The type repres..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.18,"words":53},"filePathRelative":"api/router/declarations/interfaces/MetaEventHandler.md","autoDesc":true}');export{y as comp,v as data};
