import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as e,b as r,e as p,w as t,d as n,r as i,o as d}from"./app-7vCtLRjQ.js";const u={};function c(m,s){const a=i("RouteLink");return d(),l("div",null,[e("p",null,[p(a,{to:"/api/browser-adapter/"},{default:t(()=>s[0]||(s[0]=[e("strong",null,"AWS Lambda Adapter Documentation v0.0.2",-1)])),_:1,__:[0]})]),s[21]||(s[21]=e("hr",null,null,-1)),e("p",null,[p(a,{to:"/api/browser-adapter/modules.html"},{default:t(()=>s[1]||(s[1]=[n("AWS Lambda Adapter Documentation")])),_:1,__:[1]}),s[3]||(s[3]=n(" / ")),p(a,{to:"/api/browser-adapter/RawResponseWrapper/"},{default:t(()=>s[2]||(s[2]=[n("RawResponseWrapper")])),_:1,__:[2]}),s[4]||(s[4]=n(" / RawResponseWrapper"))]),s[22]||(s[22]=r('<h1 id="class-rawresponsewrapper" tabindex="-1"><a class="header-anchor" href="#class-rawresponsewrapper"><span>Class: RawResponseWrapper</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/browser-adapter/blob/2a6ec5410a97b6bc45328cca33b607b5a6b7ed84/src/RawResponseWrapper.ts#L11" target="_blank" rel="noopener noreferrer">src/RawResponseWrapper.ts:11</a></p><p>Wrapper for generic raw responses.</p><p>The <code>RawResponseWrapper</code> is responsible for encapsulating a raw response and returning it in a structure that aligns with the Stone.js framework&#39;s requirements. It implements the <code>IRawResponseWrapper</code> interface, ensuring compatibility with the framework.</p><h2 id="implements" tabindex="-1"><a class="header-anchor" href="#implements"><span>Implements</span></a></h2>',5)),e("ul",null,[e("li",null,[s[6]||(s[6]=e("code",null,"IRawResponseWrapper",-1)),s[7]||(s[7]=n("<")),p(a,{to:"/api/browser-adapter/declarations/type-aliases/BrowserResponse.html"},{default:t(()=>s[5]||(s[5]=[e("code",null,"BrowserResponse",-1)])),_:1,__:[5]}),s[8]||(s[8]=n(">"))])]),s[23]||(s[23]=e("h2",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods"},[e("span",null,"Methods")])],-1)),s[24]||(s[24]=e("h3",{id:"respond",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#respond"},[e("span",null,"respond()")])],-1)),e("blockquote",null,[e("p",null,[s[10]||(s[10]=e("strong",null,"respond",-1)),s[11]||(s[11]=n("(): ")),p(a,{to:"/api/browser-adapter/declarations/type-aliases/BrowserResponse.html"},{default:t(()=>s[9]||(s[9]=[e("code",null,"BrowserResponse",-1)])),_:1,__:[9]})])]),s[25]||(s[25]=e("p",null,[n("Defined in: "),e("a",{href:"https://github.com/stonemjs/browser-adapter/blob/2a6ec5410a97b6bc45328cca33b607b5a6b7ed84/src/RawResponseWrapper.ts#L61",target:"_blank",rel:"noopener noreferrer"},"src/RawResponseWrapper.ts:61")],-1)),s[26]||(s[26]=e("p",null,"Constructs and returns the raw response.",-1)),s[27]||(s[27]=e("p",null,[n("The "),e("code",null,"respond"),n(" method generates and returns the raw response based on the provided options. The response is returned as-is, allowing for maximum flexibility in defining its structure.")],-1)),s[28]||(s[28]=e("h4",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns"},[e("span",null,"Returns")])],-1)),e("p",null,[p(a,{to:"/api/browser-adapter/declarations/type-aliases/BrowserResponse.html"},{default:t(()=>s[12]||(s[12]=[e("code",null,"BrowserResponse",-1)])),_:1,__:[12]})]),s[29]||(s[29]=r(`<p>A <code>RawResponse</code> object containing the response options.</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> responseWrapper <span class="token operator">=</span> RawResponseWrapper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> body<span class="token operator">:</span> <span class="token string">&#39;Hello, world!&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> response <span class="token operator">=</span> responseWrapper<span class="token punctuation">.</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { body: &#39;Hello, world!&#39; }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of"><span>Implementation of</span></a></h4><p><code>IRawResponseWrapper.respond</code></p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3>`,7)),e("blockquote",null,[e("p",null,[s[14]||(s[14]=e("code",null,"static",-1)),s[15]||(s[15]=n()),s[16]||(s[16]=e("strong",null,"create",-1)),s[17]||(s[17]=n("(")),s[18]||(s[18]=e("code",null,"options",-1)),s[19]||(s[19]=n("): ")),p(a,{to:"/api/browser-adapter/RawResponseWrapper/classes/RawResponseWrapper.html"},{default:t(()=>s[13]||(s[13]=[e("code",null,"RawResponseWrapper",-1)])),_:1,__:[13]})])]),s[30]||(s[30]=r('<p>Defined in: <a href="https://github.com/stonemjs/browser-adapter/blob/2a6ec5410a97b6bc45328cca33b607b5a6b7ed84/src/RawResponseWrapper.ts#L31" target="_blank" rel="noopener noreferrer">src/RawResponseWrapper.ts:31</a></p><p>Factory method to create an instance of <code>RawResponseWrapper</code>.</p><p>This method initializes the wrapper with a set of partial response options.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5><p><code>Partial</code>&lt;<code>RawResponseOptions</code>&gt;</p><p>Partial options to configure the raw response.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4>',8)),e("p",null,[p(a,{to:"/api/browser-adapter/RawResponseWrapper/classes/RawResponseWrapper.html"},{default:t(()=>s[20]||(s[20]=[e("code",null,"RawResponseWrapper",-1)])),_:1,__:[20]})]),s[31]||(s[31]=r(`<p>A new instance of <code>RawResponseWrapper</code>.</p><h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> responseWrapper <span class="token operator">=</span> RawResponseWrapper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  body<span class="token operator">:</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;Success&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  statusCode<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> response <span class="token operator">=</span> responseWrapper<span class="token punctuation">.</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { body: { message: &#39;Success&#39; }, statusCode: 200 }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3))])}const b=o(u,[["render",c]]),k=JSON.parse('{"path":"/api/browser-adapter/RawResponseWrapper/classes/RawResponseWrapper.html","title":"Class: RawResponseWrapper","lang":"en-US","frontmatter":{"description":"/ / RawResponseWrapper Class: RawResponseWrapper Defined in: src/RawResponseWrapper.ts:11 Wrapper for generic raw responses. The RawResponseWrapper is responsible for encapsulat...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: RawResponseWrapper\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/browser-adapter/RawResponseWrapper/classes/RawResponseWrapper.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: RawResponseWrapper"}],["meta",{"property":"og:description","content":"/ / RawResponseWrapper Class: RawResponseWrapper Defined in: src/RawResponseWrapper.ts:11 Wrapper for generic raw responses. The RawResponseWrapper is responsible for encapsulat..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.75,"words":224},"filePathRelative":"api/browser-adapter/RawResponseWrapper/classes/RawResponseWrapper.md","autoDesc":true}');export{b as comp,k as data};
