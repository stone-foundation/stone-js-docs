import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a,b as i,e as t,w as r,d as o,r as p,o as l}from"./app-7vCtLRjQ.js";const c={};function h(H,e){const n=p("RouteLink");return l(),d("div",null,[a("p",null,[t(n,{to:"/api/core/"},{default:r(()=>e[0]||(e[0]=[a("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[5]||(e[5]=a("hr",null,null,-1)),a("p",null,[t(n,{to:"/api/core/"},{default:r(()=>e[1]||(e[1]=[o("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=o(" / ")),t(n,{to:"/api/core/utils/"},{default:r(()=>e[2]||(e[2]=[o("utils")])),_:1,__:[2]}),e[4]||(e[4]=o(" / isHandlerHasHook"))]),e[6]||(e[6]=i('<h1 id="function-ishandlerhashook" tabindex="-1"><a class="header-anchor" href="#function-ishandlerhashook"><span>Function: isHandlerHasHook()</span></a></h1><blockquote><p><strong>isHandlerHasHook</strong>&lt;<code>HandlerType</code>&gt;(<code>handler</code>, <code>hookName</code>): <code>handler is HandlerType &amp; Record&lt;keyof HandlerType, (args: any[]) =&gt; any&gt;</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/utils.ts#L129" target="_blank" rel="noopener noreferrer">utils.ts:129</a></p><p>Check if the provided handler has the specified hook.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="handlertype" tabindex="-1"><a class="header-anchor" href="#handlertype"><span>HandlerType</span></a></h3><p><code>HandlerType</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="handler" tabindex="-1"><a class="header-anchor" href="#handler"><span>handler</span></a></h3><p><code>any</code></p><p>The handler to check.</p><h3 id="hookname" tabindex="-1"><a class="header-anchor" href="#hookname"><span>hookName</span></a></h3><p>keyof <code>HandlerType</code></p><p>The hook name to check.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>handler is HandlerType &amp; Record&lt;keyof HandlerType, (args: any[]) =&gt; any&gt;</code></p><p><code>true</code> if the handler has the specified hook, otherwise <code>false</code>.</p>',17))])}const y=s(c,[["render",h]]),f=JSON.parse('{"path":"/api/core/utils/functions/isHandlerHasHook.html","title":"Function: isHandlerHasHook()","lang":"en-US","frontmatter":{"description":"/ / isHandlerHasHook Function: isHandlerHasHook() isHandlerHasHook<HandlerType>(handler, hookName): handler is HandlerType & Record<keyof HandlerType, (args: any[]) => any> Defi...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: isHandlerHasHook()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/utils/functions/isHandlerHasHook.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: isHandlerHasHook()"}],["meta",{"property":"og:description","content":"/ / isHandlerHasHook Function: isHandlerHasHook() isHandlerHasHook<HandlerType>(handler, hookName): handler is HandlerType & Record<keyof HandlerType, (args: any[]) => any> Defi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.27,"words":82},"filePathRelative":"api/core/utils/functions/isHandlerHasHook.md","autoDesc":true}');export{y as comp,f as data};
