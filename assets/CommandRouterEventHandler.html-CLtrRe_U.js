import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as s,a as e,e as o,w as r,d as a,r as i,o as c}from"./app-CrbMk51G.js";const l={};function m(h,n){const t=i("RouteLink");return c(),d("div",null,[n[17]||(n[17]=s(`<h1 id="class-commandroutereventhandler-w-x" tabindex="-1"><a class="header-anchor" href="#class-commandroutereventhandler-w-x"><span>Class: CommandRouterEventHandler&lt;W, X&gt;</span></a></h1><p>Class representing a CommandRouterEventHandler. Responsible for finding and dispatching commands based on incoming events.</p><h2 id="author" tabindex="-1"><a class="header-anchor" href="#author"><span>Author</span></a></h2><p>Mr. Stone <a href="mailto:evensstone@gmail.com" target="_blank" rel="noopener noreferrer">evensstone@gmail.com</a></p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="w" tabindex="-1"><a class="header-anchor" href="#w"><span>W</span></a></h3><p><code>W</code> <em>extends</em> <code>IncomingEvent</code> = <code>IncomingEvent</code></p><h3 id="x" tabindex="-1"><a class="header-anchor" href="#x"><span>X</span></a></h3><p><code>X</code> = <code>unknown</code></p><h2 id="implements" tabindex="-1"><a class="header-anchor" href="#implements"><span>Implements</span></a></h2><ul><li><code>IEventHandler</code>&lt;<code>W</code>, <code>X</code>&gt;</li></ul><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">new</span> <span class="token class-name">CommandRouterEventHandler<span class="token operator">&lt;</span><span class="token constant">W</span><span class="token punctuation">,</span> <span class="token constant">X</span><span class="token operator">&gt;</span></span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token operator">:</span> CommandRouterEventHandler<span class="token operator">&lt;</span><span class="token constant">W</span><span class="token punctuation">,</span> <span class="token constant">X</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create a new instance of CommandRouter.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="container" tabindex="-1"><a class="header-anchor" href="#container"><span>container</span></a></h5>`,17)),e("p",null,[o(t,{to:"/api/node-cli-adapter/command/CommandRouterEventHandler/interfaces/CommandRouterEventHandlerOptions.html"},{default:r(()=>n[0]||(n[0]=[e("code",null,"CommandRouterEventHandlerOptions",-1)])),_:1,__:[0]})]),n[18]||(n[18]=s(`<p>The container instance for dependency resolution.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>CommandRouterEventHandler</code>&lt;<code>W</code>, <code>X</code>&gt;</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="dispatch" tabindex="-1"><a class="header-anchor" href="#dispatch"><span>dispatch()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">dispatch</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">X</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Dispatches an event to the appropriate command.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="event" tabindex="-1"><a class="header-anchor" href="#event"><span>event</span></a></h5><p><code>W</code></p><p>The incoming event to be dispatched.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>X</code>&gt;</p><p>The result of the command execution.</p><hr><h3 id="findcommand" tabindex="-1"><a class="header-anchor" href="#findcommand"><span>findCommand()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">findCommand</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token operator">:</span> </span>
<span class="line">  <span class="token operator">|</span> <span class="token keyword">undefined</span></span>
<span class="line"><span class="token operator">|</span> ICommandHandler<span class="token operator">&lt;</span><span class="token constant">W</span><span class="token punctuation">,</span> <span class="token constant">X</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Finds a command that matches the given event.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="event-1" tabindex="-1"><a class="header-anchor" href="#event-1"><span>event</span></a></h5><p><code>W</code></p><p>The incoming event to match against commands.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4>`,23)),e("p",null,[n[2]||(n[2]=a("| ")),n[3]||(n[3]=e("code",null,"undefined",-1)),n[4]||(n[4]=a(" | ")),o(t,{to:"/api/node-cli-adapter/declarations/interfaces/ICommandHandler.html"},{default:r(()=>n[1]||(n[1]=[e("code",null,"ICommandHandler",-1)])),_:1,__:[1]}),n[5]||(n[5]=a("<")),n[6]||(n[6]=e("code",null,"W",-1)),n[7]||(n[7]=a(", ")),n[8]||(n[8]=e("code",null,"X",-1)),n[9]||(n[9]=a(">"))]),n[19]||(n[19]=s(`<p>The matching command, or undefined if no match is found.</p><hr><h3 id="handle" tabindex="-1"><a class="header-anchor" href="#handle"><span>handle()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">X</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Handle an incoming event.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="event-2" tabindex="-1"><a class="header-anchor" href="#event-2"><span>event</span></a></h5><p><code>W</code></p><p>The incoming event to process.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>X</code>&gt;</p><p>The outgoing response.</p><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of"><span>Implementation of</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">IEventHandler<span class="token punctuation">.</span>handle</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="runcommand" tabindex="-1"><a class="header-anchor" href="#runcommand"><span>runCommand()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">runCommand</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> command<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">X</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Runs the given command with the provided event.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="event-3" tabindex="-1"><a class="header-anchor" href="#event-3"><span>event</span></a></h5><p><code>W</code></p><p>The event to handle.</p><h5 id="command" tabindex="-1"><a class="header-anchor" href="#command"><span>command?</span></a></h5>`,23)),e("p",null,[o(t,{to:"/api/node-cli-adapter/declarations/interfaces/ICommandHandler.html"},{default:r(()=>n[10]||(n[10]=[e("code",null,"ICommandHandler",-1)])),_:1,__:[10]}),n[11]||(n[11]=a("<")),n[12]||(n[12]=e("code",null,"W",-1)),n[13]||(n[13]=a(", ")),n[14]||(n[14]=e("code",null,"X",-1)),n[15]||(n[15]=a(">"))]),n[20]||(n[20]=s(`<p>The command to execute.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>X</code>&gt;</p><p>The result of the command execution, or void if no command is found.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token generic-function"><span class="token function">create</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">W</span><span class="token punctuation">,</span> <span class="token constant">X</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> CommandRouterEventHandler<span class="token operator">&lt;</span><span class="token constant">W</span><span class="token punctuation">,</span> <span class="token constant">X</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Creates a new instance of <code>CommandRouter</code>.</p><p>This static method initializes a <code>CommandRouter</code> with the specified options.</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h4><h5 id="w-1" tabindex="-1"><a class="header-anchor" href="#w-1"><span>W</span></a></h5><p><code>W</code> <em>extends</em> <code>IncomingEvent</code> = <code>IncomingEvent</code></p><p>The type of the incoming event (default: <code>IncomingEvent</code>).</p><h5 id="x-1" tabindex="-1"><a class="header-anchor" href="#x-1"><span>X</span></a></h5><p><code>X</code> <em>extends</em> <code>OutgoingResponse</code> = <code>OutgoingResponse</code></p><p>The type of the outgoing response (default: <code>OutgoingResponse</code>).</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5>`,18)),e("p",null,[o(t,{to:"/api/node-cli-adapter/command/CommandRouterEventHandler/interfaces/CommandRouterEventHandlerOptions.html"},{default:r(()=>n[16]||(n[16]=[e("code",null,"CommandRouterEventHandlerOptions",-1)])),_:1,__:[16]})]),n[21]||(n[21]=s('<p>The configuration options for the <code>CommandRouter</code>.</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>CommandRouterEventHandler</code>&lt;<code>W</code>, <code>X</code>&gt;</p><p>A new instance of <code>CommandRouter</code> configured with the provided options.</p>',4))])}const g=p(l,[["render",m]]),f=JSON.parse('{"path":"/api/node-cli-adapter/command/CommandRouterEventHandler/classes/CommandRouterEventHandler.html","title":"Class: CommandRouterEventHandler<W, X>","lang":"en-US","frontmatter":{"description":"Class: CommandRouterEventHandler<W, X> Class representing a CommandRouterEventHandler. Responsible for finding and dispatching commands based on incoming events. Author Mr. Ston...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: CommandRouterEventHandler<W, X>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/node-cli-adapter/command/CommandRouterEventHandler/classes/CommandRouterEventHandler.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: CommandRouterEventHandler<W, X>"}],["meta",{"property":"og:description","content":"Class: CommandRouterEventHandler<W, X> Class representing a CommandRouterEventHandler. Responsible for finding and dispatching commands based on incoming events. Author Mr. Ston..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.99,"words":298},"filePathRelative":"api/node-cli-adapter/command/CommandRouterEventHandler/classes/CommandRouterEventHandler.md","autoDesc":true}');export{g as comp,f as data};
