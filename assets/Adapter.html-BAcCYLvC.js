import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as o,a as e,d as s,e as t,w as p,r as i,o as d}from"./app-CsZBgwJX.js";const u={};function c(k,n){const a=i("RouteLink");return d(),l("div",null,[n[130]||(n[130]=o('<h1 id="class-abstract-adapter-raweventtype-rawresponsetype-executioncontexttype-incomingeventtype-incomingeventoptionstype-outgoingresponsetype-adaptercontexttype" tabindex="-1"><a class="header-anchor" href="#class-abstract-adapter-raweventtype-rawresponsetype-executioncontexttype-incomingeventtype-incomingeventoptionstype-outgoingresponsetype-adaptercontexttype"><span>Class: <code>abstract</code> Adapter&lt;RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType, AdapterContextType&gt;</span></a></h1><p>Class representing an Adapter.</p><h2 id="author" tabindex="-1"><a class="header-anchor" href="#author"><span>Author</span></a></h2><p>Mr. Stone <a href="mailto:evensstone@gmail.com" target="_blank" rel="noopener noreferrer">evensstone@gmail.com</a></p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="raweventtype" tabindex="-1"><a class="header-anchor" href="#raweventtype"><span>RawEventType</span></a></h3><p><code>RawEventType</code></p><h3 id="rawresponsetype" tabindex="-1"><a class="header-anchor" href="#rawresponsetype"><span>RawResponseType</span></a></h3><p><code>RawResponseType</code></p><h3 id="executioncontexttype" tabindex="-1"><a class="header-anchor" href="#executioncontexttype"><span>ExecutionContextType</span></a></h3><p><code>ExecutionContextType</code></p><h3 id="incomingeventtype" tabindex="-1"><a class="header-anchor" href="#incomingeventtype"><span>IncomingEventType</span></a></h3>',12)),e("p",null,[n[1]||(n[1]=e("code",null,"IncomingEventType",-1)),n[2]||(n[2]=s()),n[3]||(n[3]=e("em",null,"extends",-1)),n[4]||(n[4]=s()),t(a,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:p(()=>n[0]||(n[0]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[0]})]),n[131]||(n[131]=e("h3",{id:"incomingeventoptionstype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#incomingeventoptionstype"},[e("span",null,"IncomingEventOptionsType")])],-1)),e("p",null,[n[6]||(n[6]=e("code",null,"IncomingEventOptionsType",-1)),n[7]||(n[7]=s()),n[8]||(n[8]=e("em",null,"extends",-1)),n[9]||(n[9]=s()),t(a,{to:"/api/core/events/IncomingEvent/interfaces/IncomingEventOptions.html"},{default:p(()=>n[5]||(n[5]=[e("code",null,"IncomingEventOptions",-1)])),_:1,__:[5]})]),n[132]||(n[132]=e("h3",{id:"outgoingresponsetype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#outgoingresponsetype"},[e("span",null,"OutgoingResponseType")])],-1)),e("p",null,[n[11]||(n[11]=e("code",null,"OutgoingResponseType",-1)),n[12]||(n[12]=s()),n[13]||(n[13]=e("em",null,"extends",-1)),n[14]||(n[14]=s()),t(a,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:p(()=>n[10]||(n[10]=[e("code",null,"OutgoingResponse",-1)])),_:1,__:[10]})]),n[133]||(n[133]=e("h3",{id:"adaptercontexttype",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#adaptercontexttype"},[e("span",null,"AdapterContextType")])],-1)),e("p",null,[n[17]||(n[17]=e("code",null,"AdapterContextType",-1)),n[18]||(n[18]=s()),n[19]||(n[19]=e("em",null,"extends",-1)),n[20]||(n[20]=s()),t(a,{to:"/api/core/declarations/interfaces/AdapterContext.html"},{default:p(()=>n[15]||(n[15]=[e("code",null,"AdapterContext",-1)])),_:1,__:[15]}),n[21]||(n[21]=s("<")),n[22]||(n[22]=e("code",null,"RawEventType",-1)),n[23]||(n[23]=s(", ")),n[24]||(n[24]=e("code",null,"RawResponseType",-1)),n[25]||(n[25]=s(", ")),n[26]||(n[26]=e("code",null,"ExecutionContextType",-1)),n[27]||(n[27]=s(", ")),n[28]||(n[28]=e("code",null,"IncomingEventType",-1)),n[29]||(n[29]=s(", ")),n[30]||(n[30]=e("code",null,"IncomingEventOptionsType",-1)),n[31]||(n[31]=s(", ")),n[32]||(n[32]=e("code",null,"OutgoingResponseType",-1)),n[33]||(n[33]=s("> = ")),t(a,{to:"/api/core/declarations/interfaces/AdapterContext.html"},{default:p(()=>n[16]||(n[16]=[e("code",null,"AdapterContext",-1)])),_:1,__:[16]}),n[34]||(n[34]=s("<")),n[35]||(n[35]=e("code",null,"RawEventType",-1)),n[36]||(n[36]=s(", ")),n[37]||(n[37]=e("code",null,"RawResponseType",-1)),n[38]||(n[38]=s(", ")),n[39]||(n[39]=e("code",null,"ExecutionContextType",-1)),n[40]||(n[40]=s(", ")),n[41]||(n[41]=e("code",null,"IncomingEventType",-1)),n[42]||(n[42]=s(", ")),n[43]||(n[43]=e("code",null,"IncomingEventOptionsType",-1)),n[44]||(n[44]=s(", ")),n[45]||(n[45]=e("code",null,"OutgoingResponseType",-1)),n[46]||(n[46]=s(">"))]),n[134]||(n[134]=e("h2",{id:"implements",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#implements"},[e("span",null,"Implements")])],-1)),e("ul",null,[e("li",null,[t(a,{to:"/api/core/declarations/interfaces/IAdapter.html"},{default:p(()=>n[47]||(n[47]=[e("code",null,"IAdapter",-1)])),_:1,__:[47]})])]),n[135]||(n[135]=o(`<h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token keyword">new</span> <span class="token class-name">Adapter<span class="token operator">&lt;</span>RawEventType<span class="token punctuation">,</span> RawResponseType<span class="token punctuation">,</span> ExecutionContextType<span class="token punctuation">,</span> IncomingEventType<span class="token punctuation">,</span> IncomingEventOptionsType<span class="token punctuation">,</span> OutgoingResponseType<span class="token punctuation">,</span> AdapterContextType<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>blueprint<span class="token punctuation">)</span><span class="token operator">:</span> Adapter<span class="token operator">&lt;</span>RawEventType<span class="token punctuation">,</span> RawResponseType<span class="token punctuation">,</span> ExecutionContextType<span class="token punctuation">,</span> IncomingEventType<span class="token punctuation">,</span> IncomingEventOptionsType<span class="token punctuation">,</span> OutgoingResponseType<span class="token punctuation">,</span> AdapterContextType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create an Adapter.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="blueprint" tabindex="-1"><a class="header-anchor" href="#blueprint"><span>blueprint</span></a></h5>`,6)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/IBlueprint.html"},{default:p(()=>n[48]||(n[48]=[e("code",null,"IBlueprint",-1)])),_:1,__:[48]})]),n[136]||(n[136]=o(`<p>The blueprint to create the adapter.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Adapter</code>&lt;<code>RawEventType</code>, <code>RawResponseType</code>, <code>ExecutionContextType</code>, <code>IncomingEventType</code>, <code>IncomingEventOptionsType</code>, <code>OutgoingResponseType</code>, <code>AdapterContextType</code>&gt;</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="blueprint-1" tabindex="-1"><a class="header-anchor" href="#blueprint-1"><span>blueprint</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token keyword">readonly</span> blueprint<span class="token operator">:</span> IBlueprint<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The blueprint to create the adapter.</p><hr><h3 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks"><span>hooks</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token keyword">readonly</span> hooks<span class="token operator">:</span> AdapterHookType<span class="token operator">&lt;</span>AdapterContextType<span class="token punctuation">,</span> RawResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="middleware" tabindex="-1"><a class="header-anchor" href="#middleware"><span>middleware</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token keyword">readonly</span> middleware<span class="token operator">:</span> AdapterMixedPipeType<span class="token operator">&lt;</span>AdapterContextType<span class="token punctuation">,</span> RawResponseType<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="resolvederrorhandlers" tabindex="-1"><a class="header-anchor" href="#resolvederrorhandlers"><span>resolvedErrorHandlers</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token keyword">readonly</span> resolvedErrorHandlers<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> IAdapterErrorHandler<span class="token operator">&lt;</span>RawEventType<span class="token punctuation">,</span> RawResponseType<span class="token punctuation">,</span> ExecutionContextType<span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="buildrawresponse" tabindex="-1"><a class="header-anchor" href="#buildrawresponse"><span>buildRawResponse()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token function">buildRawResponse</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> eventHandler<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>RawResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Build the raw response.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="context" tabindex="-1"><a class="header-anchor" href="#context"><span>context</span></a></h5><p><code>AdapterContextType</code></p><p>The event context.</p><h5 id="eventhandler" tabindex="-1"><a class="header-anchor" href="#eventhandler"><span>eventHandler?</span></a></h5>`,25)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/AdapterEventHandlerType.html"},{default:p(()=>n[49]||(n[49]=[e("code",null,"AdapterEventHandlerType",-1)])),_:1,__:[49]}),n[50]||(n[50]=s("<")),n[51]||(n[51]=e("code",null,"IncomingEventType",-1)),n[52]||(n[52]=s(", ")),n[53]||(n[53]=e("code",null,"OutgoingResponseType",-1)),n[54]||(n[54]=s(">"))]),n[137]||(n[137]=o(`<p>The event handler to be run.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>RawResponseType</code>&gt;</p><p>The raw response wrapper.</p><hr><h3 id="executeeventhandlerhooks" tabindex="-1"><a class="header-anchor" href="#executeeventhandlerhooks"><span>executeEventHandlerHooks()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token function">executeEventHandlerHooks</span><span class="token punctuation">(</span>hook<span class="token punctuation">,</span> eventHandler<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Execute the event handler lifecycle hooks.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="hook" tabindex="-1"><a class="header-anchor" href="#hook"><span>hook</span></a></h5>`,10)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/KernelHookName.html"},{default:p(()=>n[55]||(n[55]=[e("code",null,"KernelHookName",-1)])),_:1,__:[55]})]),n[138]||(n[138]=e("p",null,"The hook to execute.",-1)),n[139]||(n[139]=e("h5",{id:"eventhandler-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#eventhandler-1"},[e("span",null,"eventHandler")])],-1)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/AdapterEventHandlerType.html"},{default:p(()=>n[56]||(n[56]=[e("code",null,"AdapterEventHandlerType",-1)])),_:1,__:[56]}),n[57]||(n[57]=s("<")),n[58]||(n[58]=e("code",null,"IncomingEventType",-1)),n[59]||(n[59]=s(", ")),n[60]||(n[60]=e("code",null,"OutgoingResponseType",-1)),n[61]||(n[61]=s(">"))]),n[140]||(n[140]=o(`<p>The event handler to be run.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="executehooks" tabindex="-1"><a class="header-anchor" href="#executehooks"><span>executeHooks()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token function">executeHooks</span><span class="token punctuation">(</span></span>
<span class="line">   name<span class="token punctuation">,</span> </span>
<span class="line">   context<span class="token operator">?</span><span class="token punctuation">,</span> </span>
<span class="line">error<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Execute adapter lifecycle hooks.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h5>`,9)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/AdapterHookName.html"},{default:p(()=>n[62]||(n[62]=[e("code",null,"AdapterHookName",-1)])),_:1,__:[62]})]),n[141]||(n[141]=o(`<p>The hook&#39;s name.</p><h5 id="context-1" tabindex="-1"><a class="header-anchor" href="#context-1"><span>context?</span></a></h5><p><code>AdapterContextType</code></p><p>The event context.</p><h5 id="error" tabindex="-1"><a class="header-anchor" href="#error"><span>error?</span></a></h5><p><code>any</code></p><p>The error to handle.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><hr><h3 id="handleerror" tabindex="-1"><a class="header-anchor" href="#handleerror"><span>handleError()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token function">handleError</span><span class="token punctuation">(</span>error<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>IAdapterEventBuilder<span class="token operator">&lt;</span>RawResponseOptions<span class="token punctuation">,</span> IRawResponseWrapper<span class="token operator">&lt;</span>RawResponseType<span class="token operator">&gt;&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Handle error.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="error-1" tabindex="-1"><a class="header-anchor" href="#error-1"><span>error</span></a></h5><p><code>Error</code></p><p>The error to handle.</p><h5 id="context-2" tabindex="-1"><a class="header-anchor" href="#context-2"><span>context</span></a></h5><p><code>AdapterContextType</code></p><p>The event context.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4>`,21)),e("p",null,[n[66]||(n[66]=e("code",null,"Promise",-1)),n[67]||(n[67]=s("<")),t(a,{to:"/api/core/declarations/interfaces/IAdapterEventBuilder.html"},{default:p(()=>n[63]||(n[63]=[e("code",null,"IAdapterEventBuilder",-1)])),_:1,__:[63]}),n[68]||(n[68]=s("<")),t(a,{to:"/api/core/declarations/interfaces/RawResponseOptions.html"},{default:p(()=>n[64]||(n[64]=[e("code",null,"RawResponseOptions",-1)])),_:1,__:[64]}),n[69]||(n[69]=s(", ")),t(a,{to:"/api/core/declarations/interfaces/IRawResponseWrapper.html"},{default:p(()=>n[65]||(n[65]=[e("code",null,"IRawResponseWrapper",-1)])),_:1,__:[65]}),n[70]||(n[70]=s("<")),n[71]||(n[71]=e("code",null,"RawResponseType",-1)),n[72]||(n[72]=s(">>>"))]),n[142]||(n[142]=o(`<p>The raw response.</p><hr><h3 id="handleevent" tabindex="-1"><a class="header-anchor" href="#handleevent"><span>handleEvent()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token function">handleEvent</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> eventHandler<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>IAdapterEventBuilder<span class="token operator">&lt;</span>RawResponseOptions<span class="token punctuation">,</span> IRawResponseWrapper<span class="token operator">&lt;</span>RawResponseType<span class="token operator">&gt;&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Handle the event.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="context-3" tabindex="-1"><a class="header-anchor" href="#context-3"><span>context</span></a></h5><p><code>AdapterContextType</code></p><p>The event context.</p><h5 id="eventhandler-2" tabindex="-1"><a class="header-anchor" href="#eventhandler-2"><span>eventHandler</span></a></h5>`,10)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/AdapterEventHandlerType.html"},{default:p(()=>n[73]||(n[73]=[e("code",null,"AdapterEventHandlerType",-1)])),_:1,__:[73]}),n[74]||(n[74]=s("<")),n[75]||(n[75]=e("code",null,"IncomingEventType",-1)),n[76]||(n[76]=s(", ")),n[77]||(n[77]=e("code",null,"OutgoingResponseType",-1)),n[78]||(n[78]=s(">"))]),n[143]||(n[143]=e("p",null,"The event handler to be run.",-1)),n[144]||(n[144]=e("h4",{id:"returns-5",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-5"},[e("span",null,"Returns")])],-1)),e("p",null,[n[82]||(n[82]=e("code",null,"Promise",-1)),n[83]||(n[83]=s("<")),t(a,{to:"/api/core/declarations/interfaces/IAdapterEventBuilder.html"},{default:p(()=>n[79]||(n[79]=[e("code",null,"IAdapterEventBuilder",-1)])),_:1,__:[79]}),n[84]||(n[84]=s("<")),t(a,{to:"/api/core/declarations/interfaces/RawResponseOptions.html"},{default:p(()=>n[80]||(n[80]=[e("code",null,"RawResponseOptions",-1)])),_:1,__:[80]}),n[85]||(n[85]=s(", ")),t(a,{to:"/api/core/declarations/interfaces/IRawResponseWrapper.html"},{default:p(()=>n[81]||(n[81]=[e("code",null,"IRawResponseWrapper",-1)])),_:1,__:[81]}),n[86]||(n[86]=s("<")),n[87]||(n[87]=e("code",null,"RawResponseType",-1)),n[88]||(n[88]=s(">>>"))]),n[145]||(n[145]=o(`<p>The raw response wrapper.</p><hr><h3 id="makepipelineoptions" tabindex="-1"><a class="header-anchor" href="#makepipelineoptions"><span>makePipelineOptions()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token function">makePipelineOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> PipelineOptions<span class="token operator">&lt;</span>AdapterContextType<span class="token punctuation">,</span> IAdapterEventBuilder<span class="token operator">&lt;</span>RawResponseOptions<span class="token punctuation">,</span> IRawResponseWrapper<span class="token operator">&lt;</span>RawResponseType<span class="token operator">&gt;&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create pipeline options for the Adapter.</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h4>`,6)),e("p",null,[n[92]||(n[92]=e("code",null,"PipelineOptions",-1)),n[93]||(n[93]=s("<")),n[94]||(n[94]=e("code",null,"AdapterContextType",-1)),n[95]||(n[95]=s(", ")),t(a,{to:"/api/core/declarations/interfaces/IAdapterEventBuilder.html"},{default:p(()=>n[89]||(n[89]=[e("code",null,"IAdapterEventBuilder",-1)])),_:1,__:[89]}),n[96]||(n[96]=s("<")),t(a,{to:"/api/core/declarations/interfaces/RawResponseOptions.html"},{default:p(()=>n[90]||(n[90]=[e("code",null,"RawResponseOptions",-1)])),_:1,__:[90]}),n[97]||(n[97]=s(", ")),t(a,{to:"/api/core/declarations/interfaces/IRawResponseWrapper.html"},{default:p(()=>n[91]||(n[91]=[e("code",null,"IRawResponseWrapper",-1)])),_:1,__:[91]}),n[98]||(n[98]=s("<")),n[99]||(n[99]=e("code",null,"RawResponseType",-1)),n[100]||(n[100]=s(">>>"))]),n[146]||(n[146]=o(`<p>The pipeline options for transforming the event.</p><hr><h3 id="resolveerrorhandler" tabindex="-1"><a class="header-anchor" href="#resolveerrorhandler"><span>resolveErrorHandler()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token function">resolveErrorHandler</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token operator">:</span> IAdapterErrorHandler<span class="token operator">&lt;</span>RawEventType<span class="token punctuation">,</span> RawResponseType<span class="token punctuation">,</span> ExecutionContextType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the error handler for the given error.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="error-2" tabindex="-1"><a class="header-anchor" href="#error-2"><span>error</span></a></h5><p><code>Error</code></p><p>The error to get the handler for.</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h4>`,10)),e("p",null,[t(a,{to:"/api/core/declarations/interfaces/IAdapterErrorHandler.html"},{default:p(()=>n[101]||(n[101]=[e("code",null,"IAdapterErrorHandler",-1)])),_:1,__:[101]}),n[102]||(n[102]=s("<")),n[103]||(n[103]=e("code",null,"RawEventType",-1)),n[104]||(n[104]=s(", ")),n[105]||(n[105]=e("code",null,"RawResponseType",-1)),n[106]||(n[106]=s(", ")),n[107]||(n[107]=e("code",null,"ExecutionContextType",-1)),n[108]||(n[108]=s(">"))]),n[147]||(n[147]=o(`<p>The error handler.</p><h4 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h4><p>IntegrationError</p><hr><h3 id="resolveeventhandler" tabindex="-1"><a class="header-anchor" href="#resolveeventhandler"><span>resolveEventHandler()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token function">resolveEventHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> AdapterEventHandlerType<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the event handler for the adapter.</p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4>`,8)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/AdapterEventHandlerType.html"},{default:p(()=>n[109]||(n[109]=[e("code",null,"AdapterEventHandlerType",-1)])),_:1,__:[109]}),n[110]||(n[110]=s("<")),n[111]||(n[111]=e("code",null,"IncomingEventType",-1)),n[112]||(n[112]=s(", ")),n[113]||(n[113]=e("code",null,"OutgoingResponseType",-1)),n[114]||(n[114]=s(">"))]),n[148]||(n[148]=o(`<p>The event handler for the adapter.</p><h4 id="throws-1" tabindex="-1"><a class="header-anchor" href="#throws-1"><span>Throws</span></a></h4><p>If the event handler is missing.</p><hr><h3 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span>run()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">abstract</span> <span class="token generic-function"><span class="token function">run</span><span class="token generic class-name"><span class="token operator">&lt;</span>ExecutionResultType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ExecutionResultType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Run handler.</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h4><h5 id="executionresulttype" tabindex="-1"><a class="header-anchor" href="#executionresulttype"><span>ExecutionResultType</span></a></h5><p><code>ExecutionResultType</code> = <code>unknown</code></p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>ExecutionResultType</code>&gt;</p><p>The result of the handler execution.</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><p>Implementation flow</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executeHooks</span><span class="token punctuation">(</span><span class="token string">&#39;onStart&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> eventHandlerResolver <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>blueprint<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;stone.adapter.eventHandlerResolver&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> eventHandler <span class="token operator">=</span> <span class="token function">eventHandlerResolver</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>blueprint<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">executeHooks</span><span class="token punctuation">(</span><span class="token string">&#39;onInit&#39;</span><span class="token punctuation">,</span> eventHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> rawEvent<span class="token operator">:</span> MockRawEvent <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;Stone.js&#39;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">const</span> context<span class="token operator">:</span> AdapterContext<span class="token operator">&lt;</span>MockRawEvent<span class="token punctuation">,</span> MockRawResponse<span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token punctuation">,</span> IncomingEvent<span class="token punctuation">,</span> IncomingEventOptions<span class="token punctuation">,</span> OutgoingResponse<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  rawEvent<span class="token punctuation">,</span></span>
<span class="line">  incomingEventBuilder<span class="token operator">:</span> AdapterBuilder<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">create</span><span class="token generic class-name"><span class="token operator">&lt;</span>IncomingEventOptions<span class="token punctuation">,</span> IncomingEvent<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token function-variable function">resolver</span><span class="token operator">:</span> v <span class="token operator">=&gt;</span> IncomingEvent<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  rawResponseBuilder<span class="token operator">:</span> AdapterBuilder<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">create</span><span class="token generic class-name"><span class="token operator">&lt;</span>RawResponseOptions<span class="token punctuation">,</span> MockRawResponseWrapper<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token function-variable function">resolver</span><span class="token operator">:</span> v <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">MockRawResponseWrapper</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sendEventThroughDestination</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> eventHandler<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of"><span>Implementation of</span></a></h4>`,17)),e("p",null,[t(a,{to:"/api/core/declarations/interfaces/IAdapter.html"},{default:p(()=>n[115]||(n[115]=[e("code",null,"IAdapter",-1)])),_:1,__:[115]}),n[117]||(n[117]=s(".")),t(a,{to:"/api/core/declarations/interfaces/IAdapter.html#run"},{default:p(()=>n[116]||(n[116]=[e("code",null,"run",-1)])),_:1,__:[116]})]),n[149]||(n[149]=o(`<hr><h3 id="sendeventthroughdestination" tabindex="-1"><a class="header-anchor" href="#sendeventthroughdestination"><span>sendEventThroughDestination()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token function">sendEventThroughDestination</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> eventHandler<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>RawResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Send the raw event through the destination.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h4><h5 id="context-4" tabindex="-1"><a class="header-anchor" href="#context-4"><span>context</span></a></h5><p><code>AdapterContextType</code></p><p>The event context.</p><h5 id="eventhandler-3" tabindex="-1"><a class="header-anchor" href="#eventhandler-3"><span>eventHandler</span></a></h5>`,9)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/AdapterEventHandlerType.html"},{default:p(()=>n[118]||(n[118]=[e("code",null,"AdapterEventHandlerType",-1)])),_:1,__:[118]}),n[119]||(n[119]=s("<")),n[120]||(n[120]=e("code",null,"IncomingEventType",-1)),n[121]||(n[121]=s(", ")),n[122]||(n[122]=e("code",null,"OutgoingResponseType",-1)),n[123]||(n[123]=s(">"))]),n[150]||(n[150]=o(`<p>The event handler to be run.</p><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>RawResponseType</code>&gt;</p><p>Platform-specific response.</p><h4 id="throws-2" tabindex="-1"><a class="header-anchor" href="#throws-2"><span>Throws</span></a></h4><p>IntegrationError</p><hr><h3 id="validatecontextandeventhandler" tabindex="-1"><a class="header-anchor" href="#validatecontextandeventhandler"><span>validateContextAndEventHandler()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token function">validateContextAndEventHandler</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> eventHandler<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Validate the context and event handler.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h4><h5 id="context-5" tabindex="-1"><a class="header-anchor" href="#context-5"><span>context</span></a></h5><p><code>AdapterContextType</code></p><p>The context to validate.</p><h5 id="eventhandler-4" tabindex="-1"><a class="header-anchor" href="#eventhandler-4"><span>eventHandler</span></a></h5>`,15)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/AdapterEventHandlerType.html"},{default:p(()=>n[124]||(n[124]=[e("code",null,"AdapterEventHandlerType",-1)])),_:1,__:[124]}),n[125]||(n[125]=s("<")),n[126]||(n[126]=e("code",null,"IncomingEventType",-1)),n[127]||(n[127]=s(", ")),n[128]||(n[128]=e("code",null,"OutgoingResponseType",-1)),n[129]||(n[129]=s(">"))]),n[151]||(n[151]=e("p",null,"The event handler to validate.",-1)),n[152]||(n[152]=e("h4",{id:"returns-11",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-11"},[e("span",null,"Returns")])],-1)),n[153]||(n[153]=e("p",null,[e("code",null,"void")],-1)),n[154]||(n[154]=e("h4",{id:"throws-3",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#throws-3"},[e("span",null,"Throws")])],-1)),n[155]||(n[155]=e("p",null,"IntegrationError",-1))])}const h=r(u,[["render",c]]),y=JSON.parse('{"path":"/api/core/adapter/Adapter/classes/Adapter.html","title":"Class: abstract Adapter<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType, AdapterContextType>","lang":"en-US","frontmatter":{"description":"Class: abstract Adapter<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType, AdapterContextType> Class represe...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: abstract Adapter<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType, AdapterContextType>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/adapter/Adapter/classes/Adapter.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: abstract Adapter<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType, AdapterContextType>"}],["meta",{"property":"og:description","content":"Class: abstract Adapter<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType, AdapterContextType> Class represe..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":2.03,"words":609},"filePathRelative":"api/core/adapter/Adapter/classes/Adapter.md","autoDesc":true}');export{h as comp,y as data};
