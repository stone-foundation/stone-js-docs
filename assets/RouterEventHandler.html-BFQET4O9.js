import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as a,a as n,d as t,e as o,w as r,r as l,o as d}from"./app-BJyWHIWB.js";const c={};function u(m,e){const s=l("RouteLink");return d(),i("div",null,[e[13]||(e[13]=a('<h1 id="class-routereventhandler-incomingeventtype-outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#class-routereventhandler-incomingeventtype-outgoingresponsetype"><span>Class: RouterEventHandler&lt;IncomingEventType, OutgoingResponseType&gt;</span></a></h1><p>A router event handler for processing incoming events.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="incomingeventtype" tabindex="-1"><a class="header-anchor" href="#incomingeventtype"><span>IncomingEventType</span></a></h3>',4)),n("p",null,[e[2]||(e[2]=n("code",null,"IncomingEventType",-1)),e[3]||(e[3]=t()),e[4]||(e[4]=n("em",null,"extends",-1)),e[5]||(e[5]=t()),o(s,{to:"/api/router/declarations/interfaces/StoneIncomingEvent.html"},{default:r(()=>e[0]||(e[0]=[n("code",null,"StoneIncomingEvent",-1)])),_:1,__:[0]}),e[6]||(e[6]=t(" = ")),o(s,{to:"/api/router/declarations/interfaces/StoneIncomingEvent.html"},{default:r(()=>e[1]||(e[1]=[n("code",null,"StoneIncomingEvent",-1)])),_:1,__:[1]})]),e[14]||(e[14]=a(`<p>The type representing the incoming event.</p><h3 id="outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#outgoingresponsetype"><span>OutgoingResponseType</span></a></h3><p><code>OutgoingResponseType</code> = <code>unknown</code></p><p>The type representing the outgoing response.</p><h2 id="implements" tabindex="-1"><a class="header-anchor" href="#implements"><span>Implements</span></a></h2><ul><li><code>IEventHandler</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;</li></ul><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">protected</span> <span class="token keyword">new</span> <span class="token class-name">RouterEventHandler<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> RouterEventHandler<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Constructs a <code>RouterEventHandler</code> instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5>`,12)),n("p",null,[o(s,{to:"/api/router/RouterEventHandler/interfaces/RouterEventHandlerOptions.html"},{default:r(()=>e[7]||(e[7]=[n("code",null,"RouterEventHandlerOptions",-1)])),_:1,__:[7]}),e[8]||(e[8]=t("<")),e[9]||(e[9]=n("code",null,"IncomingEventType",-1)),e[10]||(e[10]=t(", ")),e[11]||(e[11]=n("code",null,"OutgoingResponseType",-1)),e[12]||(e[12]=t(">"))]),e[15]||(e[15]=a(`<p>The RouterEventHandler options including blueprint, container, and event emitter.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>RouterEventHandler</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="handle" tabindex="-1"><a class="header-anchor" href="#handle"><span>handle()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Handle an incoming event.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="event" tabindex="-1"><a class="header-anchor" href="#event"><span>event</span></a></h5><p><code>IncomingEventType</code></p><p>The incoming event to process.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>OutgoingResponseType</code>&gt;</p><p>The outgoing response.</p><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of"><span>Implementation of</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">IEventHandler<span class="token punctuation">.</span>handle</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,16))])}const v=p(c,[["render",u]]),y=JSON.parse('{"path":"/api/router/RouterEventHandler/classes/RouterEventHandler.html","title":"Class: RouterEventHandler<IncomingEventType, OutgoingResponseType>","lang":"en-US","frontmatter":{"description":"Class: RouterEventHandler<IncomingEventType, OutgoingResponseType> A router event handler for processing incoming events. Type Parameters IncomingEventType IncomingEventType ext...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: RouterEventHandler<IncomingEventType, OutgoingResponseType>\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/router/RouterEventHandler/classes/RouterEventHandler.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: RouterEventHandler<IncomingEventType, OutgoingResponseType>"}],["meta",{"property":"og:description","content":"Class: RouterEventHandler<IncomingEventType, OutgoingResponseType> A router event handler for processing incoming events. Type Parameters IncomingEventType IncomingEventType ext..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.35,"words":104},"filePathRelative":"api/router/RouterEventHandler/classes/RouterEventHandler.md","autoDesc":true}');export{v as comp,y as data};
