import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as n,b as c,e as s,w as a,d as o,r as p,o as m}from"./app-B3SZc_3K.js";const i={};function l(h,e){const t=p("RouteLink");return m(),d("div",null,[n("p",null,[s(t,{to:"/api/node-cli-adapter/"},{default:a(()=>e[0]||(e[0]=[n("strong",null,"Node CLI Adapter Documentation v0.0.0",-1)])),_:1,__:[0]})]),e[5]||(e[5]=n("hr",null,null,-1)),n("p",null,[s(t,{to:"/api/node-cli-adapter/modules.html"},{default:a(()=>e[1]||(e[1]=[o("Node CLI Adapter Documentation")])),_:1,__:[1]}),e[3]||(e[3]=o(" / ")),s(t,{to:"/api/node-cli-adapter/command/CommandInput/"},{default:a(()=>e[2]||(e[2]=[o("command/CommandInput")])),_:1,__:[2]}),e[4]||(e[4]=o(" / CommandInputOptions"))]),e[6]||(e[6]=c('<h1 id="interface-commandinputoptions" tabindex="-1"><a class="header-anchor" href="#interface-commandinputoptions"><span>Interface: CommandInputOptions</span></a></h1><p>CommandInputOptions</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="prompt" tabindex="-1"><a class="header-anchor" href="#prompt"><span>prompt()</span></a></h3><blockquote><p><strong>prompt</strong>: &lt;<code>A</code>, <code>PrefilledAnswers</code>&gt;(<code>questions</code>, <code>answers</code>?) =&gt; <code>PromptReturnType</code>&lt;<code>PrefilledAnswers</code> &amp; <code>A</code> <em>extends</em> <code>T</code> ? { [K in string | number | symbol]: {}[K] } : <code>never</code>&gt;&lt;<code>A</code>, <code>PrefilledAnswers</code>&gt;(<code>questions</code>, <code>answers</code>?) =&gt; <code>PromptReturnType</code>&lt;<code>PrefilledAnswers</code> &amp; <code>Answers</code>&lt;<code>Extract</code>&lt;keyof <code>A</code>, <code>string</code>&gt;&gt; <em>extends</em> <code>T_1</code> ? { [K_1 in string | number | symbol]: {}[K_1] } : <code>never</code>&gt;&lt;<code>A</code>, <code>PrefilledAnswers</code>&gt;(<code>questions</code>, <code>answers</code>?) =&gt; <code>PromptReturnType</code>&lt;<code>PrefilledAnswers</code> &amp; <code>A</code> <em>extends</em> <code>T</code> ? { [K in string | number | symbol]: {}[K] } : <code>never</code>&gt;&lt;<code>A</code>, <code>PrefilledAnswers</code>&gt;(<code>questions</code>, <code>answers</code>?) =&gt; <code>PromptReturnType</code>&lt;<code>PrefilledAnswers</code> &amp; <code>A</code>&gt;</p></blockquote><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h4><p>• <strong>A</strong> <em>extends</em> <code>Answers</code></p><p>• <strong>PrefilledAnswers</strong> <em>extends</em> <code>Answers</code> = <code>object</code></p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="questions" tabindex="-1"><a class="header-anchor" href="#questions"><span>questions</span></a></h5><p><code>UnnamedDistinctQuestion</code>&lt;<code>PrefilledAnswers</code> &amp; <code>A</code> <em>extends</em> <code>T</code> ? { [K in string | number | symbol]: {}[K] } : <code>never</code>&gt; &amp; <code>object</code>[]</p><h5 id="answers" tabindex="-1"><a class="header-anchor" href="#answers"><span>answers?</span></a></h5><p><code>PrefilledAnswers</code></p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>PromptReturnType</code>&lt;<code>PrefilledAnswers</code> &amp; <code>A</code> <em>extends</em> <code>T</code> ? { [K in string | number | symbol]: {}[K] } : <code>never</code>&gt;</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h4><p>• <strong>A</strong> <em>extends</em> <code>Answers</code></p><p>• <strong>PrefilledAnswers</strong> <em>extends</em> <code>Answers</code> = <code>object</code></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="questions-1" tabindex="-1"><a class="header-anchor" href="#questions-1"><span>questions</span></a></h5><p>{ [name in string | number | symbol]: UnnamedDistinctQuestion&lt;(PrefilledAnswers &amp; A) extends T ? { [K in string | number | symbol]: {}[K] } : never&gt; }</p><h5 id="answers-1" tabindex="-1"><a class="header-anchor" href="#answers-1"><span>answers?</span></a></h5><p><code>PrefilledAnswers</code></p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>PromptReturnType</code>&lt;<code>PrefilledAnswers</code> &amp; <code>Answers</code>&lt;<code>Extract</code>&lt;keyof <code>A</code>, <code>string</code>&gt;&gt; <em>extends</em> <code>T_1</code> ? { [K_1 in string | number | symbol]: {}[K_1] } : <code>never</code>&gt;</p><h4 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h4><p>• <strong>A</strong> <em>extends</em> <code>Answers</code></p><p>• <strong>PrefilledAnswers</strong> <em>extends</em> <code>Answers</code> = <code>object</code></p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="questions-2" tabindex="-1"><a class="header-anchor" href="#questions-2"><span>questions</span></a></h5><p><code>Observable</code>&lt;<code>UnnamedDistinctQuestion</code>&lt;<code>PrefilledAnswers</code> &amp; <code>A</code> <em>extends</em> <code>T</code> ? { [K in string | number | symbol]: {}[K] } : <code>never</code>&gt; &amp; <code>object</code>&gt;</p><h5 id="answers-2" tabindex="-1"><a class="header-anchor" href="#answers-2"><span>answers?</span></a></h5><p><code>PrefilledAnswers</code></p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>PromptReturnType</code>&lt;<code>PrefilledAnswers</code> &amp; <code>A</code> <em>extends</em> <code>T</code> ? { [K in string | number | symbol]: {}[K] } : <code>never</code>&gt;</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3"><span>Type Parameters</span></a></h4><p>• <strong>A</strong> <em>extends</em> <code>Answers</code></p><p>• <strong>PrefilledAnswers</strong> <em>extends</em> <code>Answers</code> = <code>object</code></p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="questions-3" tabindex="-1"><a class="header-anchor" href="#questions-3"><span>questions</span></a></h5><p><code>UnnamedDistinctQuestion</code>&lt;<code>A</code> &amp; <code>PrefilledAnswers</code>&gt; &amp; <code>object</code></p><h5 id="answers-3" tabindex="-1"><a class="header-anchor" href="#answers-3"><span>answers?</span></a></h5><p><code>PrefilledAnswers</code></p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>PromptReturnType</code>&lt;<code>PrefilledAnswers</code> &amp; <code>A</code>&gt;</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in"><span>Defined in</span></a></h4><p><a href="https://github.com/stonemjs/node-cli-adapter/blob/30743f7aaaae46db17826e810be4549d56406b6f/src/command/CommandInput.ts#L8" target="_blank" rel="noopener noreferrer">src/command/CommandInput.ts:8</a></p>',47))])}const g=r(i,[["render",l]]),b=JSON.parse('{"path":"/api/node-cli-adapter/command/CommandInput/interfaces/CommandInputOptions.html","title":"Interface: CommandInputOptions","lang":"en-US","frontmatter":{"description":"/ / CommandInputOptions Interface: CommandInputOptions CommandInputOptions Properties prompt() prompt: <A, PrefilledAnswers>(questions, answers?) => PromptReturnType<PrefilledAn...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: CommandInputOptions\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/node-cli-adapter/command/CommandInput/interfaces/CommandInputOptions.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: CommandInputOptions"}],["meta",{"property":"og:description","content":"/ / CommandInputOptions Interface: CommandInputOptions CommandInputOptions Properties prompt() prompt: <A, PrefilledAnswers>(questions, answers?) => PromptReturnType<PrefilledAn..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.8,"words":241},"filePathRelative":"api/node-cli-adapter/command/CommandInput/interfaces/CommandInputOptions.md","autoDesc":true}');export{g as comp,b as data};
