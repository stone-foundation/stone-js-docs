import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as n,b as s,e as r,w as p,d as t,r as d,o as l}from"./app-7vCtLRjQ.js";const f={};function g(u,e){const o=d("RouteLink");return l(),a("div",null,[n("p",null,[r(o,{to:"/api/core/"},{default:p(()=>e[0]||(e[0]=[n("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[57]||(e[57]=n("hr",null,null,-1)),n("p",null,[r(o,{to:"/api/core/"},{default:p(()=>e[1]||(e[1]=[t("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=t(" / ")),r(o,{to:"/api/core/options/AdapterConfig/"},{default:p(()=>e[2]||(e[2]=[t("options/AdapterConfig")])),_:1,__:[2]}),e[4]||(e[4]=t(" / AdapterConfig"))]),e[58]||(e[58]=s('<h1 id="interface-adapterconfig-raweventtype-rawresponsetype-executioncontexttype-incomingeventtype-incomingeventoptionstype-outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#interface-adapterconfig-raweventtype-rawresponsetype-executioncontexttype-incomingeventtype-incomingeventoptionstype-outgoingresponsetype"><span>Interface: AdapterConfig&lt;RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType&gt;</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/AdapterConfig.ts#L18" target="_blank" rel="noopener noreferrer">options/AdapterConfig.ts:18</a></p><p>AdapterConfig Interface.</p><p>This interface defines the configuration options for an adapter within the Stone.js framework. It includes settings for the adapter&#39;s alias, resolver, middleware, and hooks, among other properties. The AdapterConfig allows developers to manage how the adapter behaves and how it integrates with the application.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="raweventtype" tabindex="-1"><a class="header-anchor" href="#raweventtype"><span>RawEventType</span></a></h3><p><code>RawEventType</code> = <code>any</code></p><h3 id="rawresponsetype" tabindex="-1"><a class="header-anchor" href="#rawresponsetype"><span>RawResponseType</span></a></h3><p><code>RawResponseType</code> = <code>any</code></p><h3 id="executioncontexttype" tabindex="-1"><a class="header-anchor" href="#executioncontexttype"><span>ExecutionContextType</span></a></h3><p><code>ExecutionContextType</code> = <code>any</code></p><h3 id="incomingeventtype" tabindex="-1"><a class="header-anchor" href="#incomingeventtype"><span>IncomingEventType</span></a></h3>',12)),n("p",null,[e[7]||(e[7]=n("code",null,"IncomingEventType",-1)),e[8]||(e[8]=t()),e[9]||(e[9]=n("em",null,"extends",-1)),e[10]||(e[10]=t()),r(o,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:p(()=>e[5]||(e[5]=[n("code",null,"IncomingEvent",-1)])),_:1,__:[5]}),e[11]||(e[11]=t(" = ")),r(o,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:p(()=>e[6]||(e[6]=[n("code",null,"IncomingEvent",-1)])),_:1,__:[6]})]),e[59]||(e[59]=n("h3",{id:"incomingeventoptionstype",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#incomingeventoptionstype"},[n("span",null,"IncomingEventOptionsType")])],-1)),n("p",null,[e[14]||(e[14]=n("code",null,"IncomingEventOptionsType",-1)),e[15]||(e[15]=t()),e[16]||(e[16]=n("em",null,"extends",-1)),e[17]||(e[17]=t()),r(o,{to:"/api/core/events/IncomingEvent/interfaces/IncomingEventOptions.html"},{default:p(()=>e[12]||(e[12]=[n("code",null,"IncomingEventOptions",-1)])),_:1,__:[12]}),e[18]||(e[18]=t(" = ")),r(o,{to:"/api/core/events/IncomingEvent/interfaces/IncomingEventOptions.html"},{default:p(()=>e[13]||(e[13]=[n("code",null,"IncomingEventOptions",-1)])),_:1,__:[13]})]),e[60]||(e[60]=n("h3",{id:"outgoingresponsetype",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#outgoingresponsetype"},[n("span",null,"OutgoingResponseType")])],-1)),n("p",null,[e[21]||(e[21]=n("code",null,"OutgoingResponseType",-1)),e[22]||(e[22]=t()),e[23]||(e[23]=n("em",null,"extends",-1)),e[24]||(e[24]=t()),r(o,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:p(()=>e[19]||(e[19]=[n("code",null,"OutgoingResponse",-1)])),_:1,__:[19]}),e[25]||(e[25]=t(" = ")),r(o,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:p(()=>e[20]||(e[20]=[n("code",null,"OutgoingResponse",-1)])),_:1,__:[20]})]),e[61]||(e[61]=s('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="alias" tabindex="-1"><a class="header-anchor" href="#alias"><span>alias?</span></a></h3><blockquote><p><code>optional</code> <strong>alias</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/AdapterConfig.ts#L72" target="_blank" rel="noopener noreferrer">options/AdapterConfig.ts:72</a></p><p>The alias name for the adapter. This is a unique identifier used to reference the adapter. Optional property.</p><hr><h3 id="current" tabindex="-1"><a class="header-anchor" href="#current"><span>current?</span></a></h3><blockquote><p><code>optional</code> <strong>current</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/AdapterConfig.ts#L79" target="_blank" rel="noopener noreferrer">options/AdapterConfig.ts:79</a></p><p>The current status identifier for the adapter. Used to indicate if this adapter instance is active or currently in use. Optional property.</p><hr><h3 id="default" tabindex="-1"><a class="header-anchor" href="#default"><span>default?</span></a></h3><blockquote><p><code>optional</code> <strong>default</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/AdapterConfig.ts#L85" target="_blank" rel="noopener noreferrer">options/AdapterConfig.ts:85</a></p><p>Defines whether this adapter is the default adapter used by the application. Optional property.</p><hr><h3 id="errorhandlers" tabindex="-1"><a class="header-anchor" href="#errorhandlers"><span>errorHandlers</span></a></h3>',17)),n("blockquote",null,[n("p",null,[e[27]||(e[27]=n("strong",null,"errorHandlers",-1)),e[28]||(e[28]=t(": ")),e[29]||(e[29]=n("code",null,"Record",-1)),e[30]||(e[30]=t("<")),e[31]||(e[31]=n("code",null,"string",-1)),e[32]||(e[32]=t(", ")),r(o,{to:"/api/core/declarations/interfaces/MetaAdapterErrorHandler.html"},{default:p(()=>e[26]||(e[26]=[n("code",null,"MetaAdapterErrorHandler",-1)])),_:1,__:[26]}),e[33]||(e[33]=t("<")),e[34]||(e[34]=n("code",null,"RawEventType",-1)),e[35]||(e[35]=t(", ")),e[36]||(e[36]=n("code",null,"RawResponseType",-1)),e[37]||(e[37]=t(", ")),e[38]||(e[38]=n("code",null,"ExecutionContextType",-1)),e[39]||(e[39]=t(">>"))])]),e[62]||(e[62]=n("p",null,[t("Defined in: "),n("a",{href:"https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/AdapterConfig.ts#L65",target:"_blank",rel:"noopener noreferrer"},"options/AdapterConfig.ts:65")],-1)),e[63]||(e[63]=n("p",null,"Error handlers used to manage and report errors that occur within the adapter. These handlers can be used to customize error handling behavior and logging.",-1)),e[64]||(e[64]=n("hr",null,null,-1)),e[65]||(e[65]=n("h3",{id:"eventhandlerresolver",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#eventhandlerresolver"},[n("span",null,"eventHandlerResolver")])],-1)),n("blockquote",null,[n("p",null,[e[41]||(e[41]=n("strong",null,"eventHandlerResolver",-1)),e[42]||(e[42]=t(": ")),r(o,{to:"/api/core/declarations/type-aliases/AdapterEventHandlerResolver.html"},{default:p(()=>e[40]||(e[40]=[n("code",null,"AdapterEventHandlerResolver",-1)])),_:1,__:[40]}),e[43]||(e[43]=t("<")),e[44]||(e[44]=n("code",null,"IncomingEventType",-1)),e[45]||(e[45]=t(", ")),e[46]||(e[46]=n("code",null,"OutgoingResponseType",-1)),e[47]||(e[47]=t(">"))])]),e[66]||(e[66]=n("p",null,[t("Defined in: "),n("a",{href:"https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/AdapterConfig.ts#L59",target:"_blank",rel:"noopener noreferrer"},"options/AdapterConfig.ts:59")],-1)),e[67]||(e[67]=n("p",null,"The event handler resolver used to create instances of the event handler.",-1)),e[68]||(e[68]=n("hr",null,null,-1)),e[69]||(e[69]=n("h3",{id:"middleware",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#middleware"},[n("span",null,"middleware")])],-1)),n("blockquote",null,[n("p",null,[e[50]||(e[50]=n("strong",null,"middleware",-1)),e[51]||(e[51]=t(": ")),r(o,{to:"/api/core/declarations/type-aliases/AdapterMixedPipeType.html"},{default:p(()=>e[48]||(e[48]=[n("code",null,"AdapterMixedPipeType",-1)])),_:1,__:[48]}),e[52]||(e[52]=t("<")),r(o,{to:"/api/core/declarations/interfaces/AdapterContext.html"},{default:p(()=>e[49]||(e[49]=[n("code",null,"AdapterContext",-1)])),_:1,__:[49]}),e[53]||(e[53]=s("&lt;<code>RawEventType</code>, <code>RawResponseType</code>, <code>ExecutionContextType</code>, <code>IncomingEventType</code>, <code>IncomingEventOptionsType</code>, <code>OutgoingResponseType</code>&gt;, <code>RawResponseType</code>&gt;[]",15))])]),e[70]||(e[70]=s('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/AdapterConfig.ts#L47" target="_blank" rel="noopener noreferrer">options/AdapterConfig.ts:47</a></p><p>The middleware used for processing incoming or outgoing data in the adapter. Middleware can modify or handle events at different stages of the adapter&#39;s lifecycle.</p><hr><h3 id="platform" tabindex="-1"><a class="header-anchor" href="#platform"><span>platform</span></a></h3><blockquote><p><strong>platform</strong>: <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/AdapterConfig.ts#L30" target="_blank" rel="noopener noreferrer">options/AdapterConfig.ts:30</a></p><p>The platform identifier for the adapter. This is used to categorize the adapter based on the environment or technology it supports.</p><hr><h3 id="resolver" tabindex="-1"><a class="header-anchor" href="#resolver"><span>resolver</span></a></h3>',9)),n("blockquote",null,[n("p",null,[e[55]||(e[55]=n("strong",null,"resolver",-1)),e[56]||(e[56]=t(": ")),r(o,{to:"/api/core/declarations/type-aliases/AdapterResolver.html"},{default:p(()=>e[54]||(e[54]=[n("code",null,"AdapterResolver",-1)])),_:1,__:[54]})])]),e[71]||(e[71]=s('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/AdapterConfig.ts#L41" target="_blank" rel="noopener noreferrer">options/AdapterConfig.ts:41</a></p><p>The class type resolver used to create instances of the adapter.</p><hr><h3 id="variant" tabindex="-1"><a class="header-anchor" href="#variant"><span>variant</span></a></h3><blockquote><p><strong>variant</strong>: <code>&quot;server&quot;</code> | <code>&quot;browser&quot;</code> | <code>&quot;console&quot;</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/AdapterConfig.ts#L36" target="_blank" rel="noopener noreferrer">options/AdapterConfig.ts:36</a></p><p>The class type of the adapter. This is used to identify the category of the adapter.</p>',7))])}const b=i(f,[["render",g]]),v=JSON.parse('{"path":"/api/core/options/AdapterConfig/interfaces/AdapterConfig.html","title":"Interface: AdapterConfig<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType>","lang":"en-US","frontmatter":{"description":"/ / AdapterConfig Interface: AdapterConfig<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType> Defined in: op...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: AdapterConfig<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/options/AdapterConfig/interfaces/AdapterConfig.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: AdapterConfig<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType>"}],["meta",{"property":"og:description","content":"/ / AdapterConfig Interface: AdapterConfig<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType> Defined in: op..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":1.3,"words":389},"filePathRelative":"api/core/options/AdapterConfig/interfaces/AdapterConfig.md","autoDesc":true}');export{b as comp,v as data};
