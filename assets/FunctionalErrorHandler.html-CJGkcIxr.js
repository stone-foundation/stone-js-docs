import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as r,a as n,d as a,e as s,w as o,r as i,o as d}from"./app-CsZBgwJX.js";const c={};function u(m,e){const t=i("RouteLink");return d(),l("div",null,[e[9]||(e[9]=r(`<h1 id="type-alias-functionalerrorhandler-tevent-uresponse" tabindex="-1"><a class="header-anchor" href="#type-alias-functionalerrorhandler-tevent-uresponse"><span>Type Alias: FunctionalErrorHandler()&lt;TEvent, UResponse&gt;</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">type</span> <span class="token class-name">FunctionalErrorHandler<span class="token operator">&lt;</span>TEvent<span class="token punctuation">,</span> UResponse<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>error<span class="token punctuation">,</span> event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promiseable<span class="token operator">&lt;</span>UResponse<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>FunctionalErrorHandler Type.</p><p>Represents a function that handles errors and returns responses.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="tevent" tabindex="-1"><a class="header-anchor" href="#tevent"><span>TEvent</span></a></h3>`,6)),n("p",null,[e[1]||(e[1]=n("code",null,"TEvent",-1)),e[2]||(e[2]=a()),e[3]||(e[3]=n("em",null,"extends",-1)),e[4]||(e[4]=a()),s(t,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:o(()=>e[0]||(e[0]=[n("code",null,"IncomingEvent",-1)])),_:1,__:[0]})]),e[10]||(e[10]=r('<h3 id="uresponse" tabindex="-1"><a class="header-anchor" href="#uresponse"><span>UResponse</span></a></h3><p><code>UResponse</code> = <code>unknown</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error"><span>error</span></a></h3><p><code>any</code></p><p>The error to handle.</p><h3 id="event" tabindex="-1"><a class="header-anchor" href="#event"><span>event</span></a></h3><p><code>TEvent</code></p><p>The incoming event.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2>',10)),n("p",null,[s(t,{to:"/api/core/declarations/type-aliases/Promiseable.html"},{default:o(()=>e[5]||(e[5]=[n("code",null,"Promiseable",-1)])),_:1,__:[5]}),e[6]||(e[6]=a("<")),e[7]||(e[7]=n("code",null,"UResponse",-1)),e[8]||(e[8]=a(">"))]),e[11]||(e[11]=n("p",null,"The outgoing response.",-1))])}const y=p(c,[["render",u]]),T=JSON.parse('{"path":"/api/core/declarations/type-aliases/FunctionalErrorHandler.html","title":"Type Alias: FunctionalErrorHandler()<TEvent, UResponse>","lang":"en-US","frontmatter":{"description":"Type Alias: FunctionalErrorHandler()<TEvent, UResponse> FunctionalErrorHandler Type. Represents a function that handles errors and returns responses. Type Parameters TEvent TEve...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: FunctionalErrorHandler()<TEvent, UResponse>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/declarations/type-aliases/FunctionalErrorHandler.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: FunctionalErrorHandler()<TEvent, UResponse>"}],["meta",{"property":"og:description","content":"Type Alias: FunctionalErrorHandler()<TEvent, UResponse> FunctionalErrorHandler Type. Represents a function that handles errors and returns responses. Type Parameters TEvent TEve..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.18,"words":54},"filePathRelative":"api/core/declarations/type-aliases/FunctionalErrorHandler.md","autoDesc":true}');export{y as comp,T as data};
