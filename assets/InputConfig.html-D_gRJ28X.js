import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as t,o as i}from"./app-BJyWHIWB.js";const s={};function p(o,e){return i(),n("div",null,e[0]||(e[0]=[t(`<h1 id="interface-inputconfig" tabindex="-1"><a class="header-anchor" href="#interface-inputconfig"><span>Interface: InputConfig</span></a></h1><p>Configuration for automatically loading modules during buildtime.</p><p>Specifies glob patterns to identify modules for transpilation.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="all" tabindex="-1"><a class="header-anchor" href="#all"><span>all?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional all<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The input path pattern for the entire application.</p><hr><h3 id="app" tabindex="-1"><a class="header-anchor" href="#app"><span>app?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional app<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The input path pattern for the application modules expect views. We need to separate the rest of the application modules from the views For the lazy loading of views.</p><hr><h3 id="maincss" tabindex="-1"><a class="header-anchor" href="#maincss"><span>mainCSS?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional mainCSS<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The input path for the application Main CSS stylesheet.</p><hr><h3 id="views" tabindex="-1"><a class="header-anchor" href="#views"><span>views?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional views<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The input path pattern for only the application views. We need to separate views from the rest of the application modules For the lazy loading of views.</p>`,19)]))}const c=a(s,[["render",p]]),d=JSON.parse('{"path":"/api/cli/options/BuilderConfig/interfaces/InputConfig.html","title":"Interface: InputConfig","lang":"en-US","frontmatter":{"description":"Interface: InputConfig Configuration for automatically loading modules during buildtime. Specifies glob patterns to identify modules for transpilation. Properties all? The input...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: InputConfig\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/cli/options/BuilderConfig/interfaces/InputConfig.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: InputConfig"}],["meta",{"property":"og:description","content":"Interface: InputConfig Configuration for automatically loading modules during buildtime. Specifies glob patterns to identify modules for transpilation. Properties all? The input..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.37,"words":111},"filePathRelative":"api/cli/options/BuilderConfig/interfaces/InputConfig.md","autoDesc":true}');export{c as comp,d as data};
