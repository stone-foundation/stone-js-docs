import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as s,b as a,e as p,w as r,r as i,o as l}from"./app-CrbMk51G.js";const c={};function d(u,n){const e=i("RouteLink");return l(),o("div",null,[n[3]||(n[3]=s("h1",{id:"stone-js-browser-adapter",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#stone-js-browser-adapter"},[s("span",null,"Stone.js - Browser Adapter")])],-1)),s("p",null,[n[1]||(n[1]=a('<a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/l/@stone-js/browser-adapter" alt="npm" loading="lazy"></a><a href="https://www.npmjs.com/package/@stone-js/browser-adapter" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/v/@stone-js/browser-adapter" alt="npm" loading="lazy"></a><a href="https://www.npmjs.com/package/@stone-js/browser-adapter" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/dm/@stone-js/browser-adapter" alt="npm" loading="lazy"></a><img src="https://img.shields.io/maintenance/yes/2025" alt="Maintenance" loading="lazy"><a href="https://github.com/stone-foundation/stone-js-browser-adapter/actions/workflows/main.yml" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-browser-adapter/actions/workflows/main.yml/badge.svg" alt="Build Status" loading="lazy"></a><a href="https://github.com/stone-foundation/stone-js-browser-adapter/actions/workflows/release.yml" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-browser-adapter/actions/workflows/release.yml/badge.svg" alt="Publish Package to npmjs" loading="lazy"></a><a href="https://sonarcloud.io/summary/new_code?id=stone-foundation_stone-js-browser-adapter" target="_blank" rel="noopener noreferrer"><img src="https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-browser-adapter&amp;metric=alert_status" alt="Quality Gate Status" loading="lazy"></a><a href="https://sonarcloud.io/summary/new_code?id=stone-foundation_stone-js-browser-adapter" target="_blank" rel="noopener noreferrer"><img src="https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-browser-adapter&amp;metric=coverage" alt="Coverage" loading="lazy"></a>',8)),p(e,{to:"/packages/browser-adapter/SECURITY.html"},{default:r(()=>n[0]||(n[0]=[s("img",{src:"https://img.shields.io/badge/Security-Policy-blue.svg",alt:"Security Policy",loading:"lazy"},null,-1)])),_:1,__:[0]}),n[2]||(n[2]=a('<a href="https://github.com/stone-foundation/stone-js-browser-adapter/security/code-scanning" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-browser-adapter/actions/workflows/github-code-scanning/codeql/badge.svg" alt="CodeQL" loading="lazy"></a><a href="https://github.com/stone-foundation/stone-js-browser-adapter/network/updates" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/Dependabot-enabled-brightgreen.svg" alt="Dependabot Status" loading="lazy"></a><a href="https://conventionalcommits.org" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/Conventional Commits-1.0.0-yellow.svg" alt="Conventional Commits" loading="lazy"></a>',3))]),n[4]||(n[4]=a(`<p>The <strong>Browser Adapter</strong> enables Stone.js to run directly in the browser, as a single-page or client-side rendered application, using the same universal interface and system design as backend deployments.</p><hr><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>In the Continuum Architecture, adapters are responsible for translating external context into internal system events. The browser adapter fulfills this role on the client-side by transforming browser-level navigation (like popstate or route events) into <code>IncomingEvent</code> objects that can be processed by your application.</p><p>This allows you to:</p><ul><li>Run your full Stone.js system in the browser</li><li>Use the same handler and <code>IncomingEvent</code> logic as the backend</li><li>Handle routing, redirection, cookies, and more, entirely in the browser</li></ul><blockquote><p>This adapter is runtime-focused. It does not manage DOM events or UI logic, it is designed for <strong>SPA or SSR client runtime integration</strong>, not for UI frameworks.</p></blockquote><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> <span class="token function">install</span> @stone-js/browser-adapter</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>This package is <strong>pure ESM</strong>. Make sure your project is ESM-compatible (<code>&quot;type&quot;: &quot;module&quot;</code> in <code>package.json</code>) or configure your bundler accordingly.</p></blockquote><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>You can activate the adapter either declaratively or imperatively.</p><h3 id="declarative-api" tabindex="-1"><a class="header-anchor" href="#declarative-api"><span>Declarative API</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Browser <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/browser-adapter&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> StoneApp<span class="token punctuation">,</span> IncomingEvent<span class="token punctuation">,</span> IEventHandler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Browser</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">StoneApp</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token keyword">implements</span> <span class="token class-name">IEventHandler<span class="token operator">&lt;</span>IncomingEvent<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token operator">:</span> IncomingEvent<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> name <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="imperative-api" tabindex="-1"><a class="header-anchor" href="#imperative-api"><span>Imperative API</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStoneApp<span class="token punctuation">,</span> IncomingEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/core&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> browserAdapterBlueprint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/browser-adapter&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> IncomingEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> name <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;World&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">defineStoneApp</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>browserAdapterBlueprint<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="what-it-enables" tabindex="-1"><a class="header-anchor" href="#what-it-enables"><span>What It Enables</span></a></h2><ul><li><p><strong>SPA Runtime Support</strong> Run your Stone.js app fully in the browser as an SPA. Routing and navigation are handled as synthetic events, passed into the system like any external request.</p></li><li><p><strong>Route-First Event Handling</strong> Unlike backend adapters that respond to raw HTTP requests, the browser adapter listens to high-level route events (<code>@stonejs/router.navigate</code>, <code>popstate</code>, etc.) and converts them into <code>IncomingEvent</code> objects.</p></li><li><p><strong>Unified Cookie API</strong> You can use the same cookie methods (<code>getCookie()</code>, <code>setCookie()</code>, etc.) on both client and server, without needing browser-specific abstractions.</p></li></ul><h2 id="configuration-options" tabindex="-1"><a class="header-anchor" href="#configuration-options"><span>Configuration Options</span></a></h2><p>The browser adapter supports a single configuration option:</p><table><thead><tr><th>Option</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>events</code></td><td><code>string[]</code></td><td><code>[&#39;popstate&#39;, &#39;@stonejs/router.navigate&#39;]</code></td><td>DOM or synthetic events to listen for as triggers</td></tr></tbody></table><h3 id="declarative-configuration" tabindex="-1"><a class="header-anchor" href="#declarative-configuration"><span>Declarative Configuration</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Browser</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> events<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;popstate&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token punctuation">{</span> <span class="token comment">/* ... */</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="imperative-configuration" tabindex="-1"><a class="header-anchor" href="#imperative-configuration"><span>Imperative Configuration</span></a></h3><p>To configure adapter options imperatively, use the <code>afterConfigure</code> hook:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig<span class="token punctuation">,</span> IBlueprint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/core&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">BROWSER_PLATFORM</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/browser-adapter&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> AppConfig <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">afterConfigure</span><span class="token punctuation">(</span>blueprint<span class="token operator">:</span> IBlueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>blueprint<span class="token punctuation">.</span><span class="token keyword">is</span><span class="token punctuation">(</span><span class="token string">&#39;stone.adapter.platform&#39;</span><span class="token punctuation">,</span> <span class="token constant">BROWSER_PLATFORM</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      blueprint<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&#39;stone.adapter.events&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;popstate&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Adapter selection happens at runtime. Always set configuration in <code>afterConfigure()</code> to ensure it&#39;s applied after the adapter has been resolved.</p></blockquote><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>The <code>@stone-js/browser-adapter</code> enables Stone.js to operate in the browser with full support for routing, SPA-style execution, and context-aware event handling. It brings the same system architecture and behavior from your backend directly to the frontend, without code duplication or runtime hacks.</p><p>This adapter is a cornerstone for universal applications built with Stone.js.</p><h2 id="api-documentation" tabindex="-1"><a class="header-anchor" href="#api-documentation"><span>API documentation</span></a></h2><ul><li><a href="https://github.com/stone-foundation/stone-js-browser-adapter/blob/main/docs" target="_blank" rel="noopener noreferrer">API</a></li></ul><h2 id="contributing" tabindex="-1"><a class="header-anchor" href="#contributing"><span>Contributing</span></a></h2><p>We welcome contributions! See the <a href="https://github.com/stone-foundation/stone-js-browser-adapter/blob/main/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing Guide</a> for details.</p>`,34))])}const g=t(c,[["render",d]]),h=JSON.parse('{"path":"/packages/browser-adapter/","title":"Stone.js - Browser Adapter","lang":"en-US","frontmatter":{"description":"Stone.js - Browser Adapter npm npm npm Maintenance Build Status Publish Package to npmjs Quality Gate Status Coverage CodeQL Dependabot Status Conventional Commits The Browser A...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Stone.js - Browser Adapter\\",\\"image\\":[\\"https://img.shields.io/npm/l/@stone-js/browser-adapter\\",\\"https://img.shields.io/npm/v/@stone-js/browser-adapter\\",\\"https://img.shields.io/npm/dm/@stone-js/browser-adapter\\",\\"https://img.shields.io/maintenance/yes/2025\\",\\"https://github.com/stone-foundation/stone-js-browser-adapter/actions/workflows/main.yml/badge.svg\\",\\"https://github.com/stone-foundation/stone-js-browser-adapter/actions/workflows/release.yml/badge.svg\\",\\"https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-browser-adapter&metric=alert_status\\",\\"https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-browser-adapter&metric=coverage\\",\\"https://img.shields.io/badge/Security-Policy-blue.svg\\",\\"https://github.com/stone-foundation/stone-js-browser-adapter/actions/workflows/github-code-scanning/codeql/badge.svg\\",\\"https://img.shields.io/badge/Dependabot-enabled-brightgreen.svg\\",\\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/packages/browser-adapter/"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Stone.js - Browser Adapter"}],["meta",{"property":"og:description","content":"Stone.js - Browser Adapter npm npm npm Maintenance Build Status Publish Package to npmjs Quality Gate Status Coverage CodeQL Dependabot Status Conventional Commits The Browser A..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.shields.io/npm/l/@stone-js/browser-adapter"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":2.21,"words":663},"filePathRelative":"packages/browser-adapter/readme.md","autoDesc":true}');export{g as comp,h as data};
