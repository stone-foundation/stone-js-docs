import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as r,a as e,e as p,w as o,r as i,o as c}from"./app-CrbMk51G.js";const d={};function l(h,a){const s=i("RouteLink");return c(),t("div",null,[a[1]||(a[1]=r(`<h1 id="class-commandoutput" tabindex="-1"><a class="header-anchor" href="#class-commandoutput"><span>Class: CommandOutput</span></a></h1><p>Class representing a CommandOutput Facade. Provides utility methods for logging, colored outputs, spinners, and progress bars.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="format" tabindex="-1"><a class="header-anchor" href="#format"><span>format</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">readonly</span> format<span class="token operator">:</span> ChalkInstance<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>A formatting library (e.g., <code>chalk</code>).</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="breakline" tabindex="-1"><a class="header-anchor" href="#breakline"><span>breakLine()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">breakLine</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output a line break.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value</span></a></h5><p><code>number</code></p><p>The number of newlines to add.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance for chaining.</p><hr><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error"><span>error()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">error</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output error-colored text.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="value-1" tabindex="-1"><a class="header-anchor" href="#value-1"><span>value</span></a></h5><p><code>string</code></p><p>The text to display.</p><h5 id="color" tabindex="-1"><a class="header-anchor" href="#color"><span>color</span></a></h5><p><code>boolean</code> = <code>true</code></p><p>Whether to color the text. Defaults to true.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance for chaining.</p><hr><h3 id="info" tabindex="-1"><a class="header-anchor" href="#info"><span>info()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">info</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output info-colored text.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="value-2" tabindex="-1"><a class="header-anchor" href="#value-2"><span>value</span></a></h5><p><code>string</code></p><p>The text to display.</p><h5 id="color-1" tabindex="-1"><a class="header-anchor" href="#color-1"><span>color</span></a></h5><p><code>boolean</code> = <code>true</code></p><p>Whether to color the text. Defaults to true.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance for chaining.</p><hr><h3 id="progressbar" tabindex="-1"><a class="header-anchor" href="#progressbar"><span>progressBar()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">progressBar</span><span class="token punctuation">(</span>tokens<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> ProgressBar<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create a progress bar.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="tokens" tabindex="-1"><a class="header-anchor" href="#tokens"><span>tokens</span></a></h5><p><code>string</code></p><p>The template string for the progress bar.</p><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5><p><code>ProgressBarOptions</code></p><p>Configuration options for the progress bar.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>ProgressBar</code></p><p>A new ProgressBar instance.</p><hr><h3 id="show" tabindex="-1"><a class="header-anchor" href="#show"><span>show()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">show</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output uncolored text.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="value-3" tabindex="-1"><a class="header-anchor" href="#value-3"><span>value</span></a></h5><p><code>string</code></p><p>The text to display.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance for chaining.</p><hr><h3 id="spin" tabindex="-1"><a class="header-anchor" href="#spin"><span>spin()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">spin</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">:</span> Ora<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output a spinner.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="value-4" tabindex="-1"><a class="header-anchor" href="#value-4"><span>value</span></a></h5><p><code>string</code></p><p>The spinner&#39;s initial message. Defaults to null.</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>Ora</code></p><p>The spinner instance started.</p><hr><h3 id="spinner" tabindex="-1"><a class="header-anchor" href="#spinner"><span>spinner()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">spinner</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token operator">:</span> Ora<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Creates a spinner instance.</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="value-5" tabindex="-1"><a class="header-anchor" href="#value-5"><span>value</span></a></h5><p><code>string</code></p><p>The spinner&#39;s initial message. Defaults to null.</p><h4 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h4><p><code>Ora</code></p><p>The spinner instance.</p><hr><h3 id="succeed" tabindex="-1"><a class="header-anchor" href="#succeed"><span>succeed()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">succeed</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output success-colored text.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h4><h5 id="value-6" tabindex="-1"><a class="header-anchor" href="#value-6"><span>value</span></a></h5><p><code>string</code></p><p>The text to display.</p><h5 id="color-2" tabindex="-1"><a class="header-anchor" href="#color-2"><span>color</span></a></h5><p><code>boolean</code> = <code>true</code></p><p>Whether to color the text. Defaults to true.</p><h4 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance for chaining.</p><hr><h3 id="table" tabindex="-1"><a class="header-anchor" href="#table"><span>table()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">table</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> properties<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output a table.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h4><h5 id="value-7" tabindex="-1"><a class="header-anchor" href="#value-7"><span>value</span></a></h5><p><code>unknown</code></p><p>The value to display as a table.</p><h5 id="properties-1" tabindex="-1"><a class="header-anchor" href="#properties-1"><span>properties?</span></a></h5><p>readonly <code>string</code>[]</p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance for chaining.</p><hr><h3 id="warn" tabindex="-1"><a class="header-anchor" href="#warn"><span>warn()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">warn</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> color<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Output warn-colored text.</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h4><h5 id="value-8" tabindex="-1"><a class="header-anchor" href="#value-8"><span>value</span></a></h5><p><code>string</code></p><p>The text to display.</p><h5 id="color-3" tabindex="-1"><a class="header-anchor" href="#color-3"><span>color</span></a></h5><p><code>boolean</code> = <code>true</code></p><p>Whether to color the text. Defaults to true.</p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4><p><code>this</code></p><p>The current instance for chaining.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token function">create</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> CommandOutput<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create a CommandOutput instance.</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10"><span>Parameters</span></a></h4><h5 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1"><span>options</span></a></h5>`,139)),e("p",null,[p(s,{to:"/api/node-cli-adapter/command/CommandOutput/interfaces/CommandOutputOptions.html"},{default:o(()=>a[0]||(a[0]=[e("code",null,"CommandOutputOptions",-1)])),_:1,__:[0]})]),a[2]||(a[2]=e("p",null,"The options for creating the CommandOutput instance.",-1)),a[3]||(a[3]=e("h4",{id:"returns-10",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-10"},[e("span",null,"Returns")])],-1)),a[4]||(a[4]=e("p",null,[e("code",null,"CommandOutput")],-1))])}const g=n(d,[["render",l]]),b=JSON.parse('{"path":"/api/node-cli-adapter/command/CommandOutput/classes/CommandOutput.html","title":"Class: CommandOutput","lang":"en-US","frontmatter":{"description":"Class: CommandOutput Class representing a CommandOutput Facade. Provides utility methods for logging, colored outputs, spinners, and progress bars. Properties format A formattin...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: CommandOutput\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/node-cli-adapter/command/CommandOutput/classes/CommandOutput.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: CommandOutput"}],["meta",{"property":"og:description","content":"Class: CommandOutput Class representing a CommandOutput Facade. Provides utility methods for logging, colored outputs, spinners, and progress bars. Properties format A formattin..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":1.18,"words":354},"filePathRelative":"api/node-cli-adapter/command/CommandOutput/classes/CommandOutput.md","autoDesc":true}');export{g as comp,b as data};
