import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as s,o as t}from"./app-CrbMk51G.js";const r={};function o(p,e){return t(),n("div",null,e[0]||(e[0]=[s(`<h1 id="interface-usereactconfig" tabindex="-1"><a class="header-anchor" href="#interface-usereactconfig"><span>Interface: UseReactConfig</span></a></h1><p>Configuration options for integrating React with Stone.js.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="adaptererrorpages" tabindex="-1"><a class="header-anchor" href="#adaptererrorpages"><span>adapterErrorPages?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional adapterErrorPages<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> MetaAdapterErrorPage<span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>A map of error pages for adapter-level errors.</p><hr><h3 id="componenteventhandler" tabindex="-1"><a class="header-anchor" href="#componenteventhandler"><span>componentEventHandler?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional componentEventHandler<span class="token operator">:</span> MetaPage<span class="token operator">&lt;</span>ReactIncomingEvent<span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Handles incoming events for the root React component.</p><hr><h3 id="errorpages" tabindex="-1"><a class="header-anchor" href="#errorpages"><span>errorPages?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional errorPages<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> MetaErrorPage<span class="token operator">&lt;</span>ReactIncomingEvent<span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>A map of error pages for specific components.</p><hr><h3 id="htmltemplatecontent" tabindex="-1"><a class="header-anchor" href="#htmltemplatecontent"><span>htmlTemplateContent?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional htmlTemplateContent<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The content of the HTML template as a string. This can be used to define the structure of the HTML document. This is useful for inline templates or when the template is dynamically generated. Note: This is not a file path, but the actual HTML content.</p><hr><h3 id="ignoreplatforms" tabindex="-1"><a class="header-anchor" href="#ignoreplatforms"><span>ignorePlatforms?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional ignorePlatforms<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>A list of platforms to ignore for React rendering. This can be used to disable React rendering on specific platforms. For example, you might want to ignore rendering on CLI platforms.</p><hr><h3 id="layout" tabindex="-1"><a class="header-anchor" href="#layout"><span>layout?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional layout<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> MetaPageLayout<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>A map of layout components with their respective event handlers.</p><hr><h3 id="rootelementid" tabindex="-1"><a class="header-anchor" href="#rootelementid"><span>rootElementId?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional rootElementId<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The ID of the root DOM element where React will be mounted.</p>`,30)]))}const c=a(r,[["render",o]]),d=JSON.parse('{"path":"/api/use-react/options/UseReactBlueprint/interfaces/UseReactConfig.html","title":"Interface: UseReactConfig","lang":"en-US","frontmatter":{"description":"Interface: UseReactConfig Configuration options for integrating React with Stone.js. Properties adapterErrorPages? A map of error pages for adapter-level errors. componentEventH...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: UseReactConfig\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/use-react/options/UseReactBlueprint/interfaces/UseReactConfig.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: UseReactConfig"}],["meta",{"property":"og:description","content":"Interface: UseReactConfig Configuration options for integrating React with Stone.js. Properties adapterErrorPages? A map of error pages for adapter-level errors. componentEventH..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.61,"words":182},"filePathRelative":"api/use-react/options/UseReactBlueprint/interfaces/UseReactConfig.md","autoDesc":true}');export{c as comp,d as data};
