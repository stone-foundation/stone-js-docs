import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as o,a,d as s,e as t,w as r,r as l,o as c}from"./app-D3YQYQ8j.js";const d={};function u(m,e){const n=l("RouteLink");return c(),p("div",null,[e[10]||(e[10]=o(`<h1 id="function-provider" tabindex="-1"><a class="header-anchor" href="#function-provider"><span>Function: Provider()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">Provider</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> ClassDecorator<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Provider decorator to mark a class as a ServiceProvider and automatically bind its services to the container.</p><p>This decorator is useful for marking classes as service providers within the Stone.js framework, allowing them to manage and provide their services to the service container.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3>`,6)),a("p",null,[e[2]||(e[2]=a("code",null,"T",-1)),e[3]||(e[3]=s()),e[4]||(e[4]=a("em",null,"extends",-1)),e[5]||(e[5]=s()),t(n,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:r(()=>e[0]||(e[0]=[a("code",null,"ClassType",-1)])),_:1,__:[0]}),e[6]||(e[6]=s(" = ")),t(n,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:r(()=>e[1]||(e[1]=[a("code",null,"ClassType",-1)])),_:1,__:[1]})]),e[11]||(e[11]=a("h2",{id:"parameters",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#parameters"},[a("span",null,"Parameters")])],-1)),e[12]||(e[12]=a("h3",{id:"options",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#options"},[a("span",null,"options")])],-1)),a("p",null,[t(n,{to:"/api/core/decorators/Provider/interfaces/ProviderOptions.html"},{default:r(()=>e[7]||(e[7]=[a("code",null,"ProviderOptions",-1)])),_:1,__:[7]}),e[8]||(e[8]=s(" = ")),e[9]||(e[9]=a("code",null,"{}",-1))]),e[13]||(e[13]=o(`<p>The configuration options for the provider.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>ClassDecorator</code></p><p>A decorator function to set metadata on the target class.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Provider</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> singleton<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyServiceProvider</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Service provider logic here.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const f=i(d,[["render",u]]),g=JSON.parse('{"path":"/api/core/decorators/Provider/functions/Provider.html","title":"Function: Provider()","lang":"en-US","frontmatter":{"description":"Function: Provider() Provider decorator to mark a class as a ServiceProvider and automatically bind its services to the container. This decorator is useful for marking classes a...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: Provider()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/decorators/Provider/functions/Provider.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: Provider()"}],["meta",{"property":"og:description","content":"Function: Provider() Provider decorator to mark a class as a ServiceProvider and automatically bind its services to the container. This decorator is useful for marking classes a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.32,"words":96},"filePathRelative":"api/core/decorators/Provider/functions/Provider.md","autoDesc":true}');export{f as comp,g as data};
