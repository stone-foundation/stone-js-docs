import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as a,a as t,d as n,e as s,w as r,r as l,o as u}from"./app-BJyWHIWB.js";const d={};function y(m,e){const o=l("RouteLink");return u(),i("div",null,[e[23]||(e[23]=a(`<h1 id="type-alias-blueprinthooklistener-blueprinttype-contexttype" tabindex="-1"><a class="header-anchor" href="#type-alias-blueprinthooklistener-blueprinttype-contexttype"><span>Type Alias: BlueprintHookListener()&lt;BlueprintType, ContextType&gt;</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">type</span> <span class="token class-name">BlueprintHookListener<span class="token operator">&lt;</span>BlueprintType<span class="token punctuation">,</span> ContextType<span class="token operator">&gt;</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promiseable<span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>BlueprintHookListener Type.</p><p>Represents a listener hook that can either be synchronous or asynchronous.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="blueprinttype" tabindex="-1"><a class="header-anchor" href="#blueprinttype"><span>BlueprintType</span></a></h3>`,6)),t("p",null,[e[2]||(e[2]=t("code",null,"BlueprintType",-1)),e[3]||(e[3]=n()),e[4]||(e[4]=t("em",null,"extends",-1)),e[5]||(e[5]=n()),s(o,{to:"/api/core/declarations/type-aliases/IBlueprint.html"},{default:r(()=>e[0]||(e[0]=[t("code",null,"IBlueprint",-1)])),_:1,__:[0]}),e[6]||(e[6]=n(" = ")),s(o,{to:"/api/core/declarations/type-aliases/IBlueprint.html"},{default:r(()=>e[1]||(e[1]=[t("code",null,"IBlueprint",-1)])),_:1,__:[1]})]),e[24]||(e[24]=t("h3",{id:"contexttype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#contexttype"},[t("span",null,"ContextType")])],-1)),t("p",null,[e[9]||(e[9]=t("code",null,"ContextType",-1)),e[10]||(e[10]=n()),e[11]||(e[11]=t("em",null,"extends",-1)),e[12]||(e[12]=n()),s(o,{to:"/api/core/declarations/interfaces/BlueprintContext.html"},{default:r(()=>e[7]||(e[7]=[t("code",null,"BlueprintContext",-1)])),_:1,__:[7]}),e[13]||(e[13]=n("<")),e[14]||(e[14]=t("code",null,"BlueprintType",-1)),e[15]||(e[15]=n("> = ")),s(o,{to:"/api/core/declarations/interfaces/BlueprintContext.html"},{default:r(()=>e[8]||(e[8]=[t("code",null,"BlueprintContext",-1)])),_:1,__:[8]}),e[16]||(e[16]=n("<")),e[17]||(e[17]=t("code",null,"BlueprintType",-1)),e[18]||(e[18]=n(">"))]),e[25]||(e[25]=a('<h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context"><span>context</span></a></h3><p><code>ContextType</code></p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2>',4)),t("p",null,[s(o,{to:"/api/core/declarations/type-aliases/Promiseable.html"},{default:r(()=>e[19]||(e[19]=[t("code",null,"Promiseable",-1)])),_:1,__:[19]}),e[20]||(e[20]=n("<")),e[21]||(e[21]=t("code",null,"void",-1)),e[22]||(e[22]=n(">"))])])}const x=p(d,[["render",y]]),B=JSON.parse('{"path":"/api/core/declarations/type-aliases/BlueprintHookListener.html","title":"Type Alias: BlueprintHookListener()<BlueprintType, ContextType>","lang":"en-US","frontmatter":{"description":"Type Alias: BlueprintHookListener()<BlueprintType, ContextType> BlueprintHookListener Type. Represents a listener hook that can either be synchronous or asynchronous. Type Param...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: BlueprintHookListener()<BlueprintType, ContextType>\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/declarations/type-aliases/BlueprintHookListener.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: BlueprintHookListener()<BlueprintType, ContextType>"}],["meta",{"property":"og:description","content":"Type Alias: BlueprintHookListener()<BlueprintType, ContextType> BlueprintHookListener Type. Represents a listener hook that can either be synchronous or asynchronous. Type Param..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.17,"words":51},"filePathRelative":"api/core/declarations/type-aliases/BlueprintHookListener.md","autoDesc":true}');export{x as comp,B as data};
