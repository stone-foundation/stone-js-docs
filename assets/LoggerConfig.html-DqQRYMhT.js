import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as o,b as i,e as r,w as a,d as t,r as g,o as p}from"./app-7vCtLRjQ.js";const f={};function d(c,e){const n=g("RouteLink");return p(),l("div",null,[o("p",null,[r(n,{to:"/api/core/"},{default:a(()=>e[0]||(e[0]=[o("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[15]||(e[15]=o("hr",null,null,-1)),o("p",null,[r(n,{to:"/api/core/"},{default:a(()=>e[1]||(e[1]=[t("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=t(" / ")),r(n,{to:"/api/core/options/LoggerConfig/"},{default:a(()=>e[2]||(e[2]=[t("options/LoggerConfig")])),_:1,__:[2]}),e[4]||(e[4]=t(" / LoggerConfig"))]),e[16]||(e[16]=i('<h1 id="interface-loggerconfig" tabindex="-1"><a class="header-anchor" href="#interface-loggerconfig"><span>Interface: LoggerConfig</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/LoggerConfig.ts#L11" target="_blank" rel="noopener noreferrer">options/LoggerConfig.ts:11</a></p><p><strong>LoggerConfig Interface</strong></p><p>Represents the base configuration options for an <code>ILogger</code> instance. This allows customization of logging behavior, including log level, output styling, and the logger resolver.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="level" tabindex="-1"><a class="header-anchor" href="#level"><span>level?</span></a></h3>',6)),o("blockquote",null,[o("p",null,[e[6]||(e[6]=o("code",null,"optional",-1)),e[7]||(e[7]=t()),e[8]||(e[8]=o("strong",null,"level",-1)),e[9]||(e[9]=t(": ")),r(n,{to:"/api/core/declarations/enumerations/LogLevel.html"},{default:a(()=>e[5]||(e[5]=[o("code",null,"LogLevel",-1)])),_:1,__:[5]})])]),e[17]||(e[17]=i('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/LoggerConfig.ts#L25" target="_blank" rel="noopener noreferrer">options/LoggerConfig.ts:25</a></p><p>The log level for the logger.</p><p>Defines the minimum level of log messages that should be logged. Common values include:</p><ul><li><code>&#39;error&#39;</code>: Errors that need immediate attention</li><li><code>&#39;warn&#39;</code>: Warnings</li><li><code>&#39;info&#39;</code>: Informational messages</li><li><code>&#39;debug&#39;</code>: Debug information</li><li><code>&#39;trace&#39;</code>: Fine-grained debug information</li></ul><h4 id="default" tabindex="-1"><a class="header-anchor" href="#default"><span>Default</span></a></h4><p><code>&#39;error&#39;</code></p><hr><h3 id="resolver" tabindex="-1"><a class="header-anchor" href="#resolver"><span>resolver?</span></a></h3>',8)),o("blockquote",null,[o("p",null,[e[11]||(e[11]=o("code",null,"optional",-1)),e[12]||(e[12]=t()),e[13]||(e[13]=o("strong",null,"resolver",-1)),e[14]||(e[14]=t(": ")),r(n,{to:"/api/core/declarations/type-aliases/LoggerResolver.html"},{default:a(()=>e[10]||(e[10]=[o("code",null,"LoggerResolver",-1)])),_:1,__:[10]})])]),e[18]||(e[18]=i('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/LoggerConfig.ts#L54" target="_blank" rel="noopener noreferrer">options/LoggerConfig.ts:54</a></p><p>A resolver function that returns a logger instance.</p><p>Allows you to customize the logger used by the application. This function provides a way to inject a logger that suits specific requirements.</p><h4 id="default-1" tabindex="-1"><a class="header-anchor" href="#default-1"><span>Default</span></a></h4><p><code>defaultLoggerResolver</code></p><hr><h3 id="usecolors" tabindex="-1"><a class="header-anchor" href="#usecolors"><span>useColors?</span></a></h3><blockquote><p><code>optional</code> <strong>useColors</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/LoggerConfig.ts#L35" target="_blank" rel="noopener noreferrer">options/LoggerConfig.ts:35</a></p><p>Whether to enable color output in the logs.</p><p>Useful for improving log readability, especially in terminal environments or when using third-party loggers such as Pino.</p><h4 id="default-2" tabindex="-1"><a class="header-anchor" href="#default-2"><span>Default</span></a></h4><p><code>false</code></p><hr><h3 id="usetimestamp" tabindex="-1"><a class="header-anchor" href="#usetimestamp"><span>useTimestamp?</span></a></h3><blockquote><p><code>optional</code> <strong>useTimestamp</strong>: <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/options/LoggerConfig.ts#L44" target="_blank" rel="noopener noreferrer">options/LoggerConfig.ts:44</a></p><p>Defines whether to include a timestamp in log messages.</p><p>Adding timestamps helps in tracking when each log event occurred.</p><h4 id="default-3" tabindex="-1"><a class="header-anchor" href="#default-3"><span>Default</span></a></h4><p><code>false</code></p>',21))])}const h=s(f,[["render",d]]),b=JSON.parse('{"path":"/api/core/options/LoggerConfig/interfaces/LoggerConfig.html","title":"Interface: LoggerConfig","lang":"en-US","frontmatter":{"description":"/ / LoggerConfig Interface: LoggerConfig Defined in: options/LoggerConfig.ts:11 LoggerConfig Interface Represents the base configuration options for an ILogger instance. This al...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: LoggerConfig\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/options/LoggerConfig/interfaces/LoggerConfig.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: LoggerConfig"}],["meta",{"property":"og:description","content":"/ / LoggerConfig Interface: LoggerConfig Defined in: options/LoggerConfig.ts:11 LoggerConfig Interface Represents the base configuration options for an ILogger instance. This al..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.72,"words":217},"filePathRelative":"api/core/options/LoggerConfig/interfaces/LoggerConfig.md","autoDesc":true}');export{h as comp,b as data};
