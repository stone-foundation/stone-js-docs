import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as n,a as s,e as p,w as r,r as i,o as c}from"./app-BJyWHIWB.js";const l={};function u(d,e){const a=i("RouteLink");return c(),o("div",null,[e[1]||(e[1]=n(`<h1 id="function-uriregex" tabindex="-1"><a class="header-anchor" href="#function-uriregex"><span>Function: uriRegex()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token function">uriRegex</span><span class="token punctuation">(</span>options<span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token operator">:</span> RegExp<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Builds a regular expression for matching a full URI based on route options.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3>`,5)),s("p",null,[p(a,{to:"/api/router/declarations/interfaces/RegexPatternOptions.html"},{default:r(()=>e[0]||(e[0]=[s("code",null,"RegexPatternOptions",-1)])),_:1,__:[0]})]),e[2]||(e[2]=n(`<p>The route options to build the regex from.</p><h3 id="flags" tabindex="-1"><a class="header-anchor" href="#flags"><span>flags</span></a></h3><p><code>string</code> = <code>&#39;i&#39;</code></p><p>Regular expression flags, defaults to &#39;i&#39; (case insensitive).</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>RegExp</code></p><p>A regular expression for matching URIs.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> regex <span class="token operator">=</span> <span class="token function">uriRegex</span><span class="token punctuation">(</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">&#39;/users/:id&#39;</span><span class="token punctuation">,</span> strict<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>regex<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;/users/123&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,9))])}const h=t(l,[["render",u]]),f=JSON.parse(`{"path":"/api/router/utils/functions/uriRegex.html","title":"Function: uriRegex()","lang":"en-US","frontmatter":{"description":"Function: uriRegex() Builds a regular expression for matching a full URI based on route options. Parameters options The route options to build the regex from. flags string = 'i'...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: uriRegex()\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/router/utils/functions/uriRegex.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: uriRegex()"}],["meta",{"property":"og:description","content":"Function: uriRegex() Builds a regular expression for matching a full URI based on route options. Parameters options The route options to build the regex from. flags string = 'i'..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.23,"words":68},"filePathRelative":"api/router/utils/functions/uriRegex.md","autoDesc":true}`);export{h as comp,f as data};
