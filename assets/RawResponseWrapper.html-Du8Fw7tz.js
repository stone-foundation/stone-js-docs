import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as n,b as o,d as e,e as r,w as i,r as l,o as c}from"./app-BJyWHIWB.js";const d={};function u(m,s){const a=l("RouteLink");return c(),t("div",null,[s[4]||(s[4]=n("h1",{id:"class-rawresponsewrapper",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#class-rawresponsewrapper"},[n("span",null,"Class: RawResponseWrapper")])],-1)),s[5]||(s[5]=n("p",null,"Wrapper for generic raw responses.",-1)),s[6]||(s[6]=n("p",null,[e("The "),n("code",null,"RawResponseWrapper"),e(" is responsible for encapsulating a raw response and returning it in a structure that aligns with the Stone.js framework's requirements. It implements the "),n("code",null,"IRawResponseWrapper"),e(" interface, ensuring compatibility with the framework.")],-1)),s[7]||(s[7]=n("h2",{id:"implements",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#implements"},[n("span",null,"Implements")])],-1)),n("ul",null,[n("li",null,[s[1]||(s[1]=n("code",null,"IRawResponseWrapper",-1)),s[2]||(s[2]=e("<")),r(a,{to:"/api/node-cli-adapter/declarations/type-aliases/RawResponse.html"},{default:i(()=>s[0]||(s[0]=[n("code",null,"RawResponse",-1)])),_:1,__:[0]}),s[3]||(s[3]=e(">"))])]),s[8]||(s[8]=o(`<h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="respond" tabindex="-1"><a class="header-anchor" href="#respond"><span>respond()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Constructs and returns the raw response.</p><p>The <code>respond</code> method generates and returns the raw response based on the provided options. The response is returned as-is, allowing for maximum flexibility in defining its structure.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>number</code></p><p>A <code>RawResponse</code> object containing the response options.</p><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> responseWrapper <span class="token operator">=</span> RawResponseWrapper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> exitCode<span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> response <span class="token operator">=</span> responseWrapper<span class="token punctuation">.</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of"><span>Implementation of</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">IRawResponseWrapper<span class="token punctuation">.</span>respond</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token function">create</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> RawResponseWrapper<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Factory method to create an instance of <code>RawResponseWrapper</code>.</p><p>This method initializes the wrapper with a set of partial response options.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5><p><code>Partial</code>&lt;<code>RawResponseOptions</code>&gt;</p><p>Partial options to configure the raw response.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>RawResponseWrapper</code></p><p>A new instance of <code>RawResponseWrapper</code>.</p><h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> responseWrapper <span class="token operator">=</span> RawResponseWrapper<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  headers<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/json&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  body<span class="token operator">:</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;Success&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  statusCode<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> response <span class="token operator">=</span> responseWrapper<span class="token punctuation">.</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { headers: { &#39;Content-Type&#39;: &#39;application/json&#39; }, body: { message: &#39;Success&#39; }, statusCode: 200 }</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,26))])}const g=p(d,[["render",u]]),R=JSON.parse('{"path":"/api/node-cli-adapter/RawResponseWrapper/classes/RawResponseWrapper.html","title":"Class: RawResponseWrapper","lang":"en-US","frontmatter":{"description":"Class: RawResponseWrapper Wrapper for generic raw responses. The RawResponseWrapper is responsible for encapsulating a raw response and returning it in a structure that aligns w...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: RawResponseWrapper\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/node-cli-adapter/RawResponseWrapper/classes/RawResponseWrapper.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: RawResponseWrapper"}],["meta",{"property":"og:description","content":"Class: RawResponseWrapper Wrapper for generic raw responses. The RawResponseWrapper is responsible for encapsulating a raw response and returning it in a structure that aligns w..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.62,"words":186},"filePathRelative":"api/node-cli-adapter/RawResponseWrapper/classes/RawResponseWrapper.md","autoDesc":true}');export{g as comp,R as data};
