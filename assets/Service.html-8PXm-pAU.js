import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as t,b as r,e as s,w as o,d as a,r as p,o as c}from"./app-B3SZc_3K.js";const d={};function u(m,e){const n=p("RouteLink");return c(),l("div",null,[t("p",null,[s(n,{to:"/api/core/"},{default:o(()=>e[0]||(e[0]=[t("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[17]||(e[17]=t("hr",null,null,-1)),t("p",null,[s(n,{to:"/api/core/"},{default:o(()=>e[1]||(e[1]=[a("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=a(" / ")),s(n,{to:"/api/core/decorators/Service/"},{default:o(()=>e[2]||(e[2]=[a("decorators/Service")])),_:1,__:[2]}),e[4]||(e[4]=a(" / Service"))]),e[18]||(e[18]=r('<h1 id="function-service" tabindex="-1"><a class="header-anchor" href="#function-service"><span>Function: Service()</span></a></h1><blockquote><p><strong>Service</strong>&lt;<code>T</code>&gt;(<code>options</code>): <code>ClassDecorator</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/decorators/Service.ts#L22" target="_blank" rel="noopener noreferrer">decorators/Service.ts:22</a></p><p>Service decorator to mark a class as a service and automatically bind it to the container.</p><p>This decorator is useful for marking classes that should be treated as services by the Stone.js framework, making them easily injectable and manageable by the service container.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3>',7)),t("p",null,[e[7]||(e[7]=t("code",null,"T",-1)),e[8]||(e[8]=a()),e[9]||(e[9]=t("em",null,"extends",-1)),e[10]||(e[10]=a()),s(n,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:o(()=>e[5]||(e[5]=[t("code",null,"ClassType",-1)])),_:1,__:[5]}),e[11]||(e[11]=a(" = ")),s(n,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:o(()=>e[6]||(e[6]=[t("code",null,"ClassType",-1)])),_:1,__:[6]})]),e[19]||(e[19]=t("h2",{id:"parameters",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#parameters"},[t("span",null,"Parameters")])],-1)),e[20]||(e[20]=t("h3",{id:"options",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#options"},[t("span",null,"options")])],-1)),t("p",null,[e[13]||(e[13]=t("code",null,"Partial",-1)),e[14]||(e[14]=a("<")),s(n,{to:"/api/core/declarations/interfaces/ServiceOptions.html"},{default:o(()=>e[12]||(e[12]=[t("code",null,"ServiceOptions",-1)])),_:1,__:[12]}),e[15]||(e[15]=a("> = ")),e[16]||(e[16]=t("code",null,"{}",-1))]),e[21]||(e[21]=r(`<p>The configuration options for the service, including singleton and alias settings.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>ClassDecorator</code></p><p>A decorator function to set metadata on the target class.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Service</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> singleton<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> alias<span class="token operator">:</span> <span class="token string">&#39;MyService&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyService</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Service class logic here.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const S=i(d,[["render",u]]),g=JSON.parse('{"path":"/api/core/decorators/Service/functions/Service.html","title":"Function: Service()","lang":"en-US","frontmatter":{"description":"/ / Service Function: Service() Service<T>(options): ClassDecorator Defined in: decorators/Service.ts:22 Service decorator to mark a class as a service and automatically bind it...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: Service()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/decorators/Service/functions/Service.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: Service()"}],["meta",{"property":"og:description","content":"/ / Service Function: Service() Service<T>(options): ClassDecorator Defined in: decorators/Service.ts:22 Service decorator to mark a class as a service and automatically bind it..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.4,"words":120},"filePathRelative":"api/core/decorators/Service/functions/Service.md","autoDesc":true}');export{S as comp,g as data};
