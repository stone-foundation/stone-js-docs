import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as p,a,d as n,e as s,w as r,r as i,o as u}from"./app-BJyWHIWB.js";const d={};function c(m,e){const t=i("RouteLink");return u(),l("div",null,[e[26]||(e[26]=p(`<h1 id="function-getblueprint" tabindex="-1"><a class="header-anchor" href="#function-getblueprint"><span>Function: getBlueprint()</span></a></h1><p>Get the blueprint value from a class.</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The class to get the blueprint from.</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>The default value to return if the blueprint key is not found.</p><h2 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getBlueprint</span><span class="token generic class-name"><span class="token operator">&lt;</span>TClass<span class="token punctuation">,</span> UReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Class<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> UReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the blueprint value from a class.</p><h3 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h3><h4 id="tclass" tabindex="-1"><a class="header-anchor" href="#tclass"><span>TClass</span></a></h4>`,11)),a("p",null,[e[1]||(e[1]=a("code",null,"TClass",-1)),e[2]||(e[2]=n()),e[3]||(e[3]=a("em",null,"extends",-1)),e[4]||(e[4]=n()),s(t,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:r(()=>e[0]||(e[0]=[a("code",null,"ClassType",-1)])),_:1,__:[0]})]),e[27]||(e[27]=a("h4",{id:"ureturn",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ureturn"},[a("span",null,"UReturn")])],-1)),a("p",null,[e[8]||(e[8]=a("code",null,"UReturn",-1)),e[9]||(e[9]=n(" = ")),s(t,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:r(()=>e[5]||(e[5]=[a("code",null,"StoneBlueprint",-1)])),_:1,__:[5]}),e[10]||(e[10]=n("<")),s(t,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:r(()=>e[6]||(e[6]=[a("code",null,"IncomingEvent",-1)])),_:1,__:[6]}),e[11]||(e[11]=n(", ")),s(t,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:r(()=>e[7]||(e[7]=[a("code",null,"OutgoingResponse",-1)])),_:1,__:[7]}),e[12]||(e[12]=n(">"))]),e[28]||(e[28]=p(`<h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><h4 id="class" tabindex="-1"><a class="header-anchor" href="#class"><span>Class</span></a></h4><p><code>TClass</code></p><p>The class to get the blueprint from.</p><h3 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h3><p><code>undefined</code> | <code>UReturn</code></p><p>The blueprint value or the default value if the key does not exist.</p><h3 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h3><p>The class to get the blueprint from.</p><h3 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h3><p>The default value to return if the blueprint key is not found.</p><h2 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getBlueprint</span><span class="token generic class-name"><span class="token operator">&lt;</span>TClass<span class="token punctuation">,</span> UReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>Class<span class="token punctuation">,</span> fallback<span class="token punctuation">)</span><span class="token operator">:</span> UReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Get the blueprint value from a class.</p><h3 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h3><h4 id="tclass-1" tabindex="-1"><a class="header-anchor" href="#tclass-1"><span>TClass</span></a></h4>`,16)),a("p",null,[e[14]||(e[14]=a("code",null,"TClass",-1)),e[15]||(e[15]=n()),e[16]||(e[16]=a("em",null,"extends",-1)),e[17]||(e[17]=n()),s(t,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:r(()=>e[13]||(e[13]=[a("code",null,"ClassType",-1)])),_:1,__:[13]})]),e[29]||(e[29]=a("h4",{id:"ureturn-1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#ureturn-1"},[a("span",null,"UReturn")])],-1)),a("p",null,[e[21]||(e[21]=a("code",null,"UReturn",-1)),e[22]||(e[22]=n(" = ")),s(t,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:r(()=>e[18]||(e[18]=[a("code",null,"StoneBlueprint",-1)])),_:1,__:[18]}),e[23]||(e[23]=n("<")),s(t,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:r(()=>e[19]||(e[19]=[a("code",null,"IncomingEvent",-1)])),_:1,__:[19]}),e[24]||(e[24]=n(", ")),s(t,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:r(()=>e[20]||(e[20]=[a("code",null,"OutgoingResponse",-1)])),_:1,__:[20]}),e[25]||(e[25]=n(">"))]),e[30]||(e[30]=p('<h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3><h4 id="class-1" tabindex="-1"><a class="header-anchor" href="#class-1"><span>Class</span></a></h4><p><code>TClass</code></p><p>The class to get the blueprint from.</p><h4 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>fallback</span></a></h4><p><code>UReturn</code></p><p>The default value to return if the blueprint key is not found.</p><h3 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h3><p><code>UReturn</code></p><p>The blueprint value or the default value if the key does not exist.</p><h3 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h3><p>The class to get the blueprint from.</p><h3 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h3><p>The default value to return if the blueprint key is not found.</p>',14))])}const g=o(d,[["render",c]]),b=JSON.parse('{"path":"/api/core/decorators/Metadata/functions/getBlueprint.html","title":"Function: getBlueprint()","lang":"en-US","frontmatter":{"description":"Function: getBlueprint() Get the blueprint value from a class. Param The class to get the blueprint from. Param The default value to return if the blueprint key is not found. Ca...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: getBlueprint()\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/decorators/Metadata/functions/getBlueprint.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: getBlueprint()"}],["meta",{"property":"og:description","content":"Function: getBlueprint() Get the blueprint value from a class. Param The class to get the blueprint from. Param The default value to return if the blueprint key is not found. Ca..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.68,"words":203},"filePathRelative":"api/core/decorators/Metadata/functions/getBlueprint.md","autoDesc":true}');export{g as comp,b as data};
