import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as t,b as l,e as a,w as o,d as n,r as p,o as s}from"./app-B3SZc_3K.js";const u={};function m(f,e){const r=p("RouteLink");return s(),d("div",null,[t("p",null,[a(r,{to:"/api/core/"},{default:o(()=>e[0]||(e[0]=[t("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[86]||(e[86]=t("hr",null,null,-1)),t("p",null,[a(r,{to:"/api/core/"},{default:o(()=>e[1]||(e[1]=[n("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=n(" / ")),a(r,{to:"/api/core/blueprint/AdapterUtils/"},{default:o(()=>e[2]||(e[2]=[n("blueprint/AdapterUtils")])),_:1,__:[2]}),e[4]||(e[4]=n(" / defineAdapterMiddleware"))]),e[87]||(e[87]=l('<h1 id="function-defineadaptermiddleware" tabindex="-1"><a class="header-anchor" href="#function-defineadaptermiddleware"><span>Function: defineAdapterMiddleware()</span></a></h1><p>Registers an adapter-specific middleware in the blueprint.</p><p>This function dynamically inserts a middleware definition into the blueprint if the adapter context matches either the platform or alias (or both are undefined).</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The middleware module to register (function, factory, or class).</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>Metadata describing which adapter(s) the middleware applies to.</p><h2 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h2>',8)),t("blockquote",null,[t("p",null,[e[6]||(e[6]=t("strong",null,"defineAdapterMiddleware",-1)),e[7]||(e[7]=n("<")),e[8]||(e[8]=t("code",null,"ExecutionContextType",-1)),e[9]||(e[9]=n(", ")),e[10]||(e[10]=t("code",null,"RawResponseType",-1)),e[11]||(e[11]=n(">(")),e[12]||(e[12]=t("code",null,"module",-1)),e[13]||(e[13]=n(", ")),e[14]||(e[14]=t("code",null,"options?",-1)),e[15]||(e[15]=n("): ")),e[16]||(e[16]=t("code",null,"Partial",-1)),e[17]||(e[17]=n("<")),a(r,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[5]||(e[5]=[t("code",null,"StoneBlueprint",-1)])),_:1,__:[5]}),e[18]||(e[18]=n(">"))])]),e[88]||(e[88]=l('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/blueprint/AdapterUtils.ts#L132" target="_blank" rel="noopener noreferrer">blueprint/AdapterUtils.ts:132</a></p><p>Defines a function-based adapter middleware.</p><p>This overload is used to register middleware as a simple function for a specific adapter platform or alias.</p><h3 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h3><h4 id="executioncontexttype" tabindex="-1"><a class="header-anchor" href="#executioncontexttype"><span>ExecutionContextType</span></a></h4><p><code>ExecutionContextType</code> = <code>any</code></p><h4 id="rawresponsetype" tabindex="-1"><a class="header-anchor" href="#rawresponsetype"><span>RawResponseType</span></a></h4><p><code>RawResponseType</code> = <code>any</code></p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><h4 id="module" tabindex="-1"><a class="header-anchor" href="#module"><span>module</span></a></h4>',10)),t("p",null,[a(r,{to:"/api/core/declarations/type-aliases/FunctionalMiddleware.html"},{default:o(()=>e[19]||(e[19]=[t("code",null,"FunctionalMiddleware",-1)])),_:1,__:[19]}),e[20]||(e[20]=n("<")),e[21]||(e[21]=t("code",null,"ExecutionContextType",-1)),e[22]||(e[22]=n(", ")),e[23]||(e[23]=t("code",null,"RawResponseType",-1)),e[24]||(e[24]=n(">"))]),e[89]||(e[89]=t("p",null,"The middleware function to be registered.",-1)),e[90]||(e[90]=t("h4",{id:"options",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#options"},[t("span",null,"options?")])],-1)),t("p",null,[a(r,{to:"/api/core/declarations/interfaces/AdapterMiddlewareOptions.html"},{default:o(()=>e[25]||(e[25]=[t("code",null,"AdapterMiddlewareOptions",-1)])),_:1,__:[25]}),e[26]||(e[26]=n(" & ")),e[27]||(e[27]=t("code",null,"object",-1))]),e[91]||(e[91]=t("p",null,"Adapter-specific metadata such as platform or alias.",-1)),e[92]||(e[92]=t("h3",{id:"returns",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns"},[t("span",null,"Returns")])],-1)),t("p",null,[e[29]||(e[29]=t("code",null,"Partial",-1)),e[30]||(e[30]=n("<")),a(r,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[28]||(e[28]=[t("code",null,"StoneBlueprint",-1)])),_:1,__:[28]}),e[31]||(e[31]=n(">"))]),e[93]||(e[93]=l('<p>A blueprint fragment that registers the middleware conditionally.</p><h3 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h3><p>The middleware module to register (function, factory, or class).</p><h3 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h3><p>Metadata describing which adapter(s) the middleware applies to.</p><h2 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h2>',6)),t("blockquote",null,[t("p",null,[e[33]||(e[33]=t("strong",null,"defineAdapterMiddleware",-1)),e[34]||(e[34]=n("<")),e[35]||(e[35]=t("code",null,"ExecutionContextType",-1)),e[36]||(e[36]=n(", ")),e[37]||(e[37]=t("code",null,"RawResponseType",-1)),e[38]||(e[38]=n(">(")),e[39]||(e[39]=t("code",null,"module",-1)),e[40]||(e[40]=n(", ")),e[41]||(e[41]=t("code",null,"options",-1)),e[42]||(e[42]=n("): ")),e[43]||(e[43]=t("code",null,"Partial",-1)),e[44]||(e[44]=n("<")),a(r,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[32]||(e[32]=[t("code",null,"StoneBlueprint",-1)])),_:1,__:[32]}),e[45]||(e[45]=n(">"))])]),e[94]||(e[94]=l('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/blueprint/AdapterUtils.ts#L149" target="_blank" rel="noopener noreferrer">blueprint/AdapterUtils.ts:149</a></p><p>Defines a factory-based adapter middleware.</p><p>This overload registers a middleware factory function for a specific adapter platform or alias.</p><h3 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h3><h4 id="executioncontexttype-1" tabindex="-1"><a class="header-anchor" href="#executioncontexttype-1"><span>ExecutionContextType</span></a></h4><p><code>ExecutionContextType</code> = <code>any</code></p><h4 id="rawresponsetype-1" tabindex="-1"><a class="header-anchor" href="#rawresponsetype-1"><span>RawResponseType</span></a></h4><p><code>RawResponseType</code> = <code>any</code></p><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3><h4 id="module-1" tabindex="-1"><a class="header-anchor" href="#module-1"><span>module</span></a></h4>',10)),t("p",null,[a(r,{to:"/api/core/declarations/type-aliases/FactoryMiddleware.html"},{default:o(()=>e[46]||(e[46]=[t("code",null,"FactoryMiddleware",-1)])),_:1,__:[46]}),e[47]||(e[47]=n("<")),e[48]||(e[48]=t("code",null,"ExecutionContextType",-1)),e[49]||(e[49]=n(", ")),e[50]||(e[50]=t("code",null,"RawResponseType",-1)),e[51]||(e[51]=n(">"))]),e[95]||(e[95]=t("p",null,"The factory function that returns middleware.",-1)),e[96]||(e[96]=t("h4",{id:"options-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#options-1"},[t("span",null,"options")])],-1)),t("p",null,[a(r,{to:"/api/core/declarations/interfaces/AdapterMiddlewareOptions.html"},{default:o(()=>e[52]||(e[52]=[t("code",null,"AdapterMiddlewareOptions",-1)])),_:1,__:[52]}),e[53]||(e[53]=n(" & ")),e[54]||(e[54]=t("code",null,"object",-1))]),e[97]||(e[97]=t("p",null,"Adapter-specific metadata such as platform or alias.",-1)),e[98]||(e[98]=t("h3",{id:"returns-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-1"},[t("span",null,"Returns")])],-1)),t("p",null,[e[56]||(e[56]=t("code",null,"Partial",-1)),e[57]||(e[57]=n("<")),a(r,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[55]||(e[55]=[t("code",null,"StoneBlueprint",-1)])),_:1,__:[55]}),e[58]||(e[58]=n(">"))]),e[99]||(e[99]=l('<p>A blueprint fragment that registers the middleware conditionally.</p><h3 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h3><p>The middleware module to register (function, factory, or class).</p><h3 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h3><p>Metadata describing which adapter(s) the middleware applies to.</p><h2 id="call-signature-2" tabindex="-1"><a class="header-anchor" href="#call-signature-2"><span>Call Signature</span></a></h2>',6)),t("blockquote",null,[t("p",null,[e[60]||(e[60]=t("strong",null,"defineAdapterMiddleware",-1)),e[61]||(e[61]=n("<")),e[62]||(e[62]=t("code",null,"ExecutionContextType",-1)),e[63]||(e[63]=n(", ")),e[64]||(e[64]=t("code",null,"RawResponseType",-1)),e[65]||(e[65]=n(">(")),e[66]||(e[66]=t("code",null,"module",-1)),e[67]||(e[67]=n(", ")),e[68]||(e[68]=t("code",null,"options",-1)),e[69]||(e[69]=n("): ")),e[70]||(e[70]=t("code",null,"Partial",-1)),e[71]||(e[71]=n("<")),a(r,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[59]||(e[59]=[t("code",null,"StoneBlueprint",-1)])),_:1,__:[59]}),e[72]||(e[72]=n(">"))])]),e[100]||(e[100]=l('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/blueprint/AdapterUtils.ts#L166" target="_blank" rel="noopener noreferrer">blueprint/AdapterUtils.ts:166</a></p><p>Defines a class-based adapter middleware.</p><p>This overload registers a middleware class for a specific adapter platform or alias.</p><h3 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h3><h4 id="executioncontexttype-2" tabindex="-1"><a class="header-anchor" href="#executioncontexttype-2"><span>ExecutionContextType</span></a></h4><p><code>ExecutionContextType</code> = <code>any</code></p><h4 id="rawresponsetype-2" tabindex="-1"><a class="header-anchor" href="#rawresponsetype-2"><span>RawResponseType</span></a></h4><p><code>RawResponseType</code> = <code>any</code></p><h3 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h3><h4 id="module-2" tabindex="-1"><a class="header-anchor" href="#module-2"><span>module</span></a></h4>',10)),t("p",null,[a(r,{to:"/api/core/declarations/type-aliases/MiddlewareClass.html"},{default:o(()=>e[73]||(e[73]=[t("code",null,"MiddlewareClass",-1)])),_:1,__:[73]}),e[74]||(e[74]=n("<")),e[75]||(e[75]=t("code",null,"ExecutionContextType",-1)),e[76]||(e[76]=n(", ")),e[77]||(e[77]=t("code",null,"RawResponseType",-1)),e[78]||(e[78]=n(">"))]),e[101]||(e[101]=t("p",null,"The class to be used as middleware.",-1)),e[102]||(e[102]=t("h4",{id:"options-2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#options-2"},[t("span",null,"options")])],-1)),t("p",null,[a(r,{to:"/api/core/declarations/interfaces/AdapterMiddlewareOptions.html"},{default:o(()=>e[79]||(e[79]=[t("code",null,"AdapterMiddlewareOptions",-1)])),_:1,__:[79]}),e[80]||(e[80]=n(" & ")),e[81]||(e[81]=t("code",null,"object",-1))]),e[103]||(e[103]=t("p",null,"Adapter-specific metadata such as platform or alias.",-1)),e[104]||(e[104]=t("h3",{id:"returns-2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns-2"},[t("span",null,"Returns")])],-1)),t("p",null,[e[83]||(e[83]=t("code",null,"Partial",-1)),e[84]||(e[84]=n("<")),a(r,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[82]||(e[82]=[t("code",null,"StoneBlueprint",-1)])),_:1,__:[82]}),e[85]||(e[85]=n(">"))]),e[105]||(e[105]=t("p",null,"A blueprint fragment that registers the middleware conditionally.",-1)),e[106]||(e[106]=t("h3",{id:"param-6",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#param-6"},[t("span",null,"Param")])],-1)),e[107]||(e[107]=t("p",null,"The middleware module to register (function, factory, or class).",-1)),e[108]||(e[108]=t("h3",{id:"param-7",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#param-7"},[t("span",null,"Param")])],-1)),e[109]||(e[109]=t("p",null,"Metadata describing which adapter(s) the middleware applies to.",-1))])}const w=i(u,[["render",m]]),x=JSON.parse('{"path":"/api/core/blueprint/AdapterUtils/functions/defineAdapterMiddleware.html","title":"Function: defineAdapterMiddleware()","lang":"en-US","frontmatter":{"description":"/ / defineAdapterMiddleware Function: defineAdapterMiddleware() Registers an adapter-specific middleware in the blueprint. This function dynamically inserts a middleware definit...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: defineAdapterMiddleware()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/blueprint/AdapterUtils/functions/defineAdapterMiddleware.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: defineAdapterMiddleware()"}],["meta",{"property":"og:description","content":"/ / defineAdapterMiddleware Function: defineAdapterMiddleware() Registers an adapter-specific middleware in the blueprint. This function dynamically inserts a middleware definit..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":1.27,"words":380},"filePathRelative":"api/core/blueprint/AdapterUtils/functions/defineAdapterMiddleware.md","autoDesc":true}');export{w as comp,x as data};
