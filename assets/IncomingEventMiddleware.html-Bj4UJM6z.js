import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as n,b as i,e as r,w as a,d as t,r as s,o as p}from"./app-C80Pz9_H.js";const m={};function u(w,e){const d=s("RouteLink");return p(),l("div",null,[n("p",null,[r(d,{to:"/api/node-cli-adapter/"},{default:a(()=>e[0]||(e[0]=[n("strong",null,"Node CLI Adapter Documentation v0.0.0",-1)])),_:1,__:[0]})]),e[30]||(e[30]=n("hr",null,null,-1)),n("p",null,[r(d,{to:"/api/node-cli-adapter/modules.html"},{default:a(()=>e[1]||(e[1]=[t("Node CLI Adapter Documentation")])),_:1,__:[1]}),e[3]||(e[3]=t(" / ")),r(d,{to:"/api/node-cli-adapter/middleware/IncomingEventMiddleware/"},{default:a(()=>e[2]||(e[2]=[t("middleware/IncomingEventMiddleware")])),_:1,__:[2]}),e[4]||(e[4]=t(" / IncomingEventMiddleware"))]),e[31]||(e[31]=i('<h1 id="class-incomingeventmiddleware" tabindex="-1"><a class="header-anchor" href="#class-incomingeventmiddleware"><span>Class: IncomingEventMiddleware</span></a></h1><p>Middleware for handling incoming events in the Node CLI adapter.</p><p>This middleware processes the incoming event and prepares it for the next middleware in the pipeline.</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="new-incomingeventmiddleware" tabindex="-1"><a class="header-anchor" href="#new-incomingeventmiddleware"><span>new IncomingEventMiddleware()</span></a></h3>',5)),n("blockquote",null,[n("p",null,[e[6]||(e[6]=n("strong",null,"new IncomingEventMiddleware",-1)),e[7]||(e[7]=t("(): ")),r(d,{to:"/api/node-cli-adapter/middleware/IncomingEventMiddleware/classes/IncomingEventMiddleware.html"},{default:a(()=>e[5]||(e[5]=[n("code",null,"IncomingEventMiddleware",-1)])),_:1,__:[5]})])]),e[32]||(e[32]=n("h4",{id:"returns",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns"},[n("span",null,"Returns")])],-1)),n("p",null,[r(d,{to:"/api/node-cli-adapter/middleware/IncomingEventMiddleware/classes/IncomingEventMiddleware.html"},{default:a(()=>e[8]||(e[8]=[n("code",null,"IncomingEventMiddleware",-1)])),_:1,__:[8]})]),e[33]||(e[33]=n("h2",{id:"methods",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#methods"},[n("span",null,"Methods")])],-1)),e[34]||(e[34]=n("h3",{id:"handle",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#handle"},[n("span",null,"handle()")])],-1)),n("blockquote",null,[n("p",null,[e[10]||(e[10]=n("strong",null,"handle",-1)),e[11]||(e[11]=t("(")),e[12]||(e[12]=n("code",null,"context",-1)),e[13]||(e[13]=t(", ")),e[14]||(e[14]=n("code",null,"next",-1)),e[15]||(e[15]=t("): ")),e[16]||(e[16]=n("code",null,"Promise",-1)),e[17]||(e[17]=t("<")),r(d,{to:"/api/node-cli-adapter/RawResponseWrapper/classes/RawResponseWrapper.html"},{default:a(()=>e[9]||(e[9]=[n("code",null,"RawResponseWrapper",-1)])),_:1,__:[9]}),e[18]||(e[18]=t(">"))])]),e[35]||(e[35]=n("p",null,"Handles the incoming event, processes it, and invokes the next middleware in the pipeline.",-1)),e[36]||(e[36]=n("h4",{id:"parameters",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parameters"},[n("span",null,"Parameters")])],-1)),e[37]||(e[37]=n("h5",{id:"context",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#context"},[n("span",null,"context")])],-1)),n("p",null,[r(d,{to:"/api/node-cli-adapter/declarations/interfaces/NodeCliAdapterContext.html"},{default:a(()=>e[19]||(e[19]=[n("code",null,"NodeCliAdapterContext",-1)])),_:1,__:[19]})]),e[38]||(e[38]=n("p",null,"The adapter context containing the raw event, execution context, and other data.",-1)),e[39]||(e[39]=n("h5",{id:"next",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#next"},[n("span",null,"next")])],-1)),n("p",null,[e[22]||(e[22]=n("code",null,"NextPipe",-1)),e[23]||(e[23]=t("<")),r(d,{to:"/api/node-cli-adapter/declarations/interfaces/NodeCliAdapterContext.html"},{default:a(()=>e[20]||(e[20]=[n("code",null,"NodeCliAdapterContext",-1)])),_:1,__:[20]}),e[24]||(e[24]=t(", ")),r(d,{to:"/api/node-cli-adapter/RawResponseWrapper/classes/RawResponseWrapper.html"},{default:a(()=>e[21]||(e[21]=[n("code",null,"RawResponseWrapper",-1)])),_:1,__:[21]}),e[25]||(e[25]=t(">"))]),e[40]||(e[40]=n("p",null,"The next middleware to be invoked in the pipeline.",-1)),e[41]||(e[41]=n("h4",{id:"returns-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns-1"},[n("span",null,"Returns")])],-1)),n("p",null,[e[27]||(e[27]=n("code",null,"Promise",-1)),e[28]||(e[28]=t("<")),r(d,{to:"/api/node-cli-adapter/RawResponseWrapper/classes/RawResponseWrapper.html"},{default:a(()=>e[26]||(e[26]=[n("code",null,"RawResponseWrapper",-1)])),_:1,__:[26]}),e[29]||(e[29]=t(">"))]),e[42]||(e[42]=i('<p>A promise that resolves to the processed context.</p><h4 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h4><p>If required components are missing in the context.</p><h4 id="defined-in" tabindex="-1"><a class="header-anchor" href="#defined-in"><span>Defined in</span></a></h4><p><a href="https://github.com/stonemjs/node-cli-adapter/blob/30743f7aaaae46db17826e810be4549d56406b6f/src/middleware/IncomingEventMiddleware.ts#L20" target="_blank" rel="noopener noreferrer">src/middleware/IncomingEventMiddleware.ts:20</a></p>',5))])}const f=o(m,[["render",u]]),x=JSON.parse('{"path":"/api/node-cli-adapter/middleware/IncomingEventMiddleware/classes/IncomingEventMiddleware.html","title":"Class: IncomingEventMiddleware","lang":"en-US","frontmatter":{"description":"/ / IncomingEventMiddleware Class: IncomingEventMiddleware Middleware for handling incoming events in the Node CLI adapter. This middleware processes the incoming event and prep...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: IncomingEventMiddleware\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/node-cli-adapter/middleware/IncomingEventMiddleware/classes/IncomingEventMiddleware.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: IncomingEventMiddleware"}],["meta",{"property":"og:description","content":"/ / IncomingEventMiddleware Class: IncomingEventMiddleware Middleware for handling incoming events in the Node CLI adapter. This middleware processes the incoming event and prep..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.46,"words":137},"filePathRelative":"api/node-cli-adapter/middleware/IncomingEventMiddleware/classes/IncomingEventMiddleware.md","autoDesc":true}');export{f as comp,x as data};
