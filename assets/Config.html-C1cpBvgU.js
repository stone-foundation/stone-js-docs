import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a,b as s,e as n,w as t,d as o,r as p,o as h}from"./app-C80Pz9_H.js";const i={};function l(f,e){const r=p("RouteLink");return h(),d("div",null,[a("p",null,[n(r,{to:"/api/config/"},{default:t(()=>e[0]||(e[0]=[a("strong",null,"Config Documentation",-1)])),_:1,__:[0]})]),e[9]||(e[9]=a("hr",null,null,-1)),a("p",null,[n(r,{to:"/api/config/"},{default:t(()=>e[1]||(e[1]=[o("Config Documentation")])),_:1,__:[1]}),e[3]||(e[3]=o(" / ")),n(r,{to:"/api/config/Config/"},{default:t(()=>e[2]||(e[2]=[o("Config")])),_:1,__:[2]}),e[4]||(e[4]=o(" / Config"))]),e[10]||(e[10]=s('<h1 id="class-config-tobject" tabindex="-1"><a class="header-anchor" href="#class-config-tobject"><span>Class: Config&lt;TObject&gt;</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L12" target="_blank" rel="noopener noreferrer">Config.ts:12</a></p><p>Class representing a Config.</p><h2 id="author" tabindex="-1"><a class="header-anchor" href="#author"><span>Author</span></a></h2><p>Mr. Stone <a href="mailto:evensstone@gmail.com" target="_blank" rel="noopener noreferrer">evensstone@gmail.com</a></p><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends"><span>Extends</span></a></h2>',6)),a("ul",null,[a("li",null,[n(r,{to:"/api/config/Proxiable/classes/Proxiable.html"},{default:t(()=>e[5]||(e[5]=[a("code",null,"Proxiable",-1)])),_:1,__:[5]})])]),e[11]||(e[11]=s('<h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="tobject" tabindex="-1"><a class="header-anchor" href="#tobject"><span>TObject</span></a></h3><p><code>TObject</code> <em>extends</em> <code>object</code> = <code>Record</code>&lt;<code>PropertyKey</code>, <code>unknown</code>&gt;</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><blockquote><p><code>protected</code> <strong>new Config</strong>&lt;<code>TObject</code>&gt;(<code>items?</code>): <code>Config</code>&lt;<code>TObject</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L40" target="_blank" rel="noopener noreferrer">Config.ts:40</a></p><p>Create a Config.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="items" tabindex="-1"><a class="header-anchor" href="#items"><span>items?</span></a></h5><p><code>any</code></p><p>Initial configuration items.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Config</code>&lt;<code>TObject</code>&gt;</p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides"><span>Overrides</span></a></h4>',15)),a("p",null,[n(r,{to:"/api/config/Proxiable/classes/Proxiable.html"},{default:t(()=>e[6]||(e[6]=[a("code",null,"Proxiable",-1)])),_:1,__:[6]}),e[8]||(e[8]=o(".")),n(r,{to:"/api/config/Proxiable/classes/Proxiable.html#constructor"},{default:t(()=>e[7]||(e[7]=[a("code",null,"constructor",-1)])),_:1,__:[7]})]),e[12]||(e[12]=s('<h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add"><span>add()</span></a></h3><blockquote><p><strong>add</strong>&lt;<code>TValue</code>&gt;(<code>key</code>, <code>value</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L186" target="_blank" rel="noopener noreferrer">Config.ts:186</a></p><p>Add a value to an existing configuration key.</p><h4 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h4><h5 id="tvalue" tabindex="-1"><a class="header-anchor" href="#tvalue"><span>TValue</span></a></h5><p><code>TValue</code></p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="key" tabindex="-1"><a class="header-anchor" href="#key"><span>key</span></a></h5><p><code>PropertyKey</code></p><p>The key or keys to set as defaults.</p><h5 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>value</span></a></h5><p><code>TValue</code></p><p>The value to set as default.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Config instance.</p><hr><h3 id="all" tabindex="-1"><a class="header-anchor" href="#all"><span>all()</span></a></h3><blockquote><p><strong>all</strong>(): <code>TObject</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L214" target="_blank" rel="noopener noreferrer">Config.ts:214</a></p><p>Get all of the configuration items as a literal object.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>TObject</code></p><p>All configuration items.</p><hr><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear"><span>clear()</span></a></h3><blockquote><p><strong>clear</strong>(): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L232" target="_blank" rel="noopener noreferrer">Config.ts:232</a></p><p>Clear all of the configuration items.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Config instance.</p><hr><h3 id="firstmatch" tabindex="-1"><a class="header-anchor" href="#firstmatch"><span>firstMatch()</span></a></h3><p>Get the first match configuration value.</p><h4 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h4><p>An array of keys to check.</p><h4 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h4><p>The fallback value if no key matches.</p><h4 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h4><blockquote><p><strong>firstMatch</strong>&lt;<code>TReturn</code>&gt;(<code>keys</code>): <code>undefined</code> | <code>TReturn</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L88" target="_blank" rel="noopener noreferrer">Config.ts:88</a></p><p>Get the first match configuration value.</p><h5 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h5><h6 id="treturn" tabindex="-1"><a class="header-anchor" href="#treturn"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h5><h6 id="keys" tabindex="-1"><a class="header-anchor" href="#keys"><span>keys</span></a></h6><p><code>PropertyKey</code>[]</p><p>An array of keys to check.</p><h5 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h5><p><code>undefined</code> | <code>TReturn</code></p><p>The first matching configuration value.</p><h5 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h5><p>An array of keys to check.</p><h5 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h5><p>The fallback value if no key matches.</p><h4 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h4><blockquote><p><strong>firstMatch</strong>&lt;<code>TReturn</code>&gt;(<code>keys</code>, <code>fallback</code>): <code>TReturn</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L97" target="_blank" rel="noopener noreferrer">Config.ts:97</a></p><p>Get the first match configuration value.</p><h5 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3"><span>Type Parameters</span></a></h5><h6 id="treturn-1" tabindex="-1"><a class="header-anchor" href="#treturn-1"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h5><h6 id="keys-1" tabindex="-1"><a class="header-anchor" href="#keys-1"><span>keys</span></a></h6><p><code>PropertyKey</code>[]</p><p>An array of keys to check.</p><h6 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>fallback</span></a></h6><p><code>TReturn</code></p><p>The fallback value if no key matches.</p><h5 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h5><p><code>TReturn</code></p><p>The first matching configuration value.</p><h5 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h5><p>An array of keys to check.</p><h5 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h5><p>The fallback value if no key matches.</p><hr><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get"><span>get()</span></a></h3><p>Get the specified configuration value.</p><h4 id="param-6" tabindex="-1"><a class="header-anchor" href="#param-6"><span>Param</span></a></h4><p>The key or keys to retrieve from the configuration.</p><h4 id="param-7" tabindex="-1"><a class="header-anchor" href="#param-7"><span>Param</span></a></h4><p>The fallback value if the key does not exist.</p><h4 id="call-signature-2" tabindex="-1"><a class="header-anchor" href="#call-signature-2"><span>Call Signature</span></a></h4><blockquote><p><strong>get</strong>&lt;<code>TReturn</code>&gt;(<code>key</code>): <code>undefined</code> | <code>TReturn</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L60" target="_blank" rel="noopener noreferrer">Config.ts:60</a></p><p>Get the specified configuration value.</p><h5 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4"><span>Type Parameters</span></a></h5><h6 id="treturn-2" tabindex="-1"><a class="header-anchor" href="#treturn-2"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h5><h6 id="key-1" tabindex="-1"><a class="header-anchor" href="#key-1"><span>key</span></a></h6><p><code>PropertyKey</code></p><p>The key or keys to retrieve from the configuration.</p><h5 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h5><p><code>undefined</code> | <code>TReturn</code></p><p>The configuration value.</p><h5 id="param-8" tabindex="-1"><a class="header-anchor" href="#param-8"><span>Param</span></a></h5><p>The key or keys to retrieve from the configuration.</p><h5 id="param-9" tabindex="-1"><a class="header-anchor" href="#param-9"><span>Param</span></a></h5><p>The fallback value if the key does not exist.</p><h4 id="call-signature-3" tabindex="-1"><a class="header-anchor" href="#call-signature-3"><span>Call Signature</span></a></h4><blockquote><p><strong>get</strong>&lt;<code>TReturn</code>&gt;(<code>key</code>, <code>fallback</code>): <code>TReturn</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L69" target="_blank" rel="noopener noreferrer">Config.ts:69</a></p><p>Get the specified configuration value.</p><h5 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5"><span>Type Parameters</span></a></h5><h6 id="treturn-3" tabindex="-1"><a class="header-anchor" href="#treturn-3"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h5><h6 id="key-2" tabindex="-1"><a class="header-anchor" href="#key-2"><span>key</span></a></h6><p><code>PropertyKey</code></p><p>The key or keys to retrieve from the configuration.</p><h6 id="fallback-1" tabindex="-1"><a class="header-anchor" href="#fallback-1"><span>fallback</span></a></h6><p><code>TReturn</code></p><p>The fallback value if the key does not exist.</p><h5 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h5><p><code>TReturn</code></p><p>The configuration value.</p><h5 id="param-10" tabindex="-1"><a class="header-anchor" href="#param-10"><span>Param</span></a></h5><p>The key or keys to retrieve from the configuration.</p><h5 id="param-11" tabindex="-1"><a class="header-anchor" href="#param-11"><span>Param</span></a></h5><p>The fallback value if the key does not exist.</p><hr><h3 id="getmany" tabindex="-1"><a class="header-anchor" href="#getmany"><span>getMany()</span></a></h3><blockquote><p><strong>getMany</strong>&lt;<code>TReturn</code>&gt;(<code>keys</code>): <code>TReturn</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L117" target="_blank" rel="noopener noreferrer">Config.ts:117</a></p><p>Get many configuration values.</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6"><span>Type Parameters</span></a></h4><h5 id="treturn-4" tabindex="-1"><a class="header-anchor" href="#treturn-4"><span>TReturn</span></a></h5><p><code>TReturn</code> = <code>Record</code>&lt;<code>PropertyKey</code>, <code>unknown</code>&gt;</p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="keys-2" tabindex="-1"><a class="header-anchor" href="#keys-2"><span>keys</span></a></h5><p>The keys to retrieve from the configuration.</p><p><code>Record</code>&lt;<code>PropertyKey</code>, <code>unknown</code>&gt; | <code>PropertyKey</code>[]</p><h4 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h4><p><code>TReturn</code></p><p>An object containing the requested configuration values.</p><hr><h3 id="has" tabindex="-1"><a class="header-anchor" href="#has"><span>has()</span></a></h3><blockquote><p><strong>has</strong>(<code>key</code>): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L129" target="_blank" rel="noopener noreferrer">Config.ts:129</a></p><p>Determine if the given configuration value exists.</p><h4 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h4><h5 id="key-3" tabindex="-1"><a class="header-anchor" href="#key-3"><span>key</span></a></h5><p>The key or keys to check.</p><p><code>PropertyKey</code> | <code>PropertyKey</code>[]</p><h4 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the key exists, false otherwise.</p><hr><h3 id="is" tabindex="-1"><a class="header-anchor" href="#is"><span>is()</span></a></h3><blockquote><p><strong>is</strong>(<code>key</code>, <code>value</code>): <code>boolean</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L140" target="_blank" rel="noopener noreferrer">Config.ts:140</a></p><p>Check if the given configuration value is equal to the specified value.</p><h4 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h4><h5 id="key-4" tabindex="-1"><a class="header-anchor" href="#key-4"><span>key</span></a></h5><p><code>PropertyKey</code></p><p>The key to check.</p><h5 id="value-1" tabindex="-1"><a class="header-anchor" href="#value-1"><span>value</span></a></h5><p><code>unknown</code></p><p>The value to compare against.</p><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the key&#39;s value is equal to the specified value, false otherwise.</p><hr><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set"><span>set()</span></a></h3><blockquote><p><strong>set</strong>&lt;<code>TValue</code>&gt;(<code>key</code>, <code>value?</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L151" target="_blank" rel="noopener noreferrer">Config.ts:151</a></p><p>Set a given configuration value.</p><h4 id="type-parameters-7" tabindex="-1"><a class="header-anchor" href="#type-parameters-7"><span>Type Parameters</span></a></h4><h5 id="tvalue-1" tabindex="-1"><a class="header-anchor" href="#tvalue-1"><span>TValue</span></a></h5><p><code>TValue</code></p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h4><h5 id="key-5" tabindex="-1"><a class="header-anchor" href="#key-5"><span>key</span></a></h5><p>The key or keys to set in the configuration.</p><p><code>PropertyKey</code> | <code>PropertyKey</code>[] | <code>Record</code>&lt;<code>string</code>, <code>TValue</code>&gt; | <code>Record</code>&lt;<code>PropertyKey</code>, <code>TValue</code>&gt;</p><h5 id="value-2" tabindex="-1"><a class="header-anchor" href="#value-2"><span>value?</span></a></h5><p><code>TValue</code></p><p>The value to set.</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Config instance.</p><hr><h3 id="setif" tabindex="-1"><a class="header-anchor" href="#setif"><span>setIf()</span></a></h3><blockquote><p><strong>setIf</strong>&lt;<code>TValue</code>&gt;(<code>key</code>, <code>value?</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L175" target="_blank" rel="noopener noreferrer">Config.ts:175</a></p><p>Set a given configuration value if it does not exist.</p><h4 id="type-parameters-8" tabindex="-1"><a class="header-anchor" href="#type-parameters-8"><span>Type Parameters</span></a></h4><h5 id="tvalue-2" tabindex="-1"><a class="header-anchor" href="#tvalue-2"><span>TValue</span></a></h5><p><code>TValue</code></p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10"><span>Parameters</span></a></h4><h5 id="key-6" tabindex="-1"><a class="header-anchor" href="#key-6"><span>key</span></a></h5><p>The key or keys to set in the configuration.</p><p><code>PropertyKey</code> | <code>PropertyKey</code>[]</p><h5 id="value-3" tabindex="-1"><a class="header-anchor" href="#value-3"><span>value?</span></a></h5><p><code>TValue</code></p><p>The value to set.</p><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Config instance.</p><hr><h3 id="setitems" tabindex="-1"><a class="header-anchor" href="#setitems"><span>setItems()</span></a></h3><blockquote><p><strong>setItems</strong>(<code>items</code>): <code>this</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L204" target="_blank" rel="noopener noreferrer">Config.ts:204</a></p><p>Set all of the configuration items.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11"><span>Parameters</span></a></h4><h5 id="items-1" tabindex="-1"><a class="header-anchor" href="#items-1"><span>items</span></a></h5><p><code>TObject</code></p><p>The configuration items.</p><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13"><span>Returns</span></a></h4><p><code>this</code></p><p>The current Config instance.</p><hr><h3 id="tojson" tabindex="-1"><a class="header-anchor" href="#tojson"><span>toJson()</span></a></h3><blockquote><p><strong>toJson</strong>(): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L223" target="_blank" rel="noopener noreferrer">Config.ts:223</a></p><p>Get all of the configuration items as a JSON string.</p><h4 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14"><span>Returns</span></a></h4><p><code>string</code></p><p>All configuration items as a JSON string.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><blockquote><p><code>static</code> <strong>create</strong>&lt;<code>TObject</code>&gt;(<code>items?</code>): <code>Config</code>&lt;<code>TObject</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L21" target="_blank" rel="noopener noreferrer">Config.ts:21</a></p><p>Create a Config.</p><h4 id="type-parameters-9" tabindex="-1"><a class="header-anchor" href="#type-parameters-9"><span>Type Parameters</span></a></h4><h5 id="tobject-1" tabindex="-1"><a class="header-anchor" href="#tobject-1"><span>TObject</span></a></h5><p><code>TObject</code> <em>extends</em> <code>object</code> = <code>Record</code>&lt;<code>PropertyKey</code>, <code>unknown</code>&gt;</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12"><span>Parameters</span></a></h4><h5 id="items-2" tabindex="-1"><a class="header-anchor" href="#items-2"><span>items?</span></a></h5><p><code>TObject</code></p><p>Initial configuration items.</p><h4 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15"><span>Returns</span></a></h4><p><code>Config</code>&lt;<code>TObject</code>&gt;</p><p>A new Config instance.</p><hr><h3 id="fromjson" tabindex="-1"><a class="header-anchor" href="#fromjson"><span>fromJson()</span></a></h3><blockquote><p><code>static</code> <strong>fromJson</strong>&lt;<code>TObject</code>&gt;(<code>items</code>): <code>Config</code>&lt;<code>TObject</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/config/blob/ade524096d0b7ceacdb60a4149ff30c957103be1/src/Config.ts#L31" target="_blank" rel="noopener noreferrer">Config.ts:31</a></p><p>Create a Config from a JSON string.</p><h4 id="type-parameters-10" tabindex="-1"><a class="header-anchor" href="#type-parameters-10"><span>Type Parameters</span></a></h4><h5 id="tobject-2" tabindex="-1"><a class="header-anchor" href="#tobject-2"><span>TObject</span></a></h5><p><code>TObject</code> <em>extends</em> <code>object</code> = <code>Record</code>&lt;<code>PropertyKey</code>, <code>unknown</code>&gt;</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13"><span>Parameters</span></a></h4><h5 id="items-3" tabindex="-1"><a class="header-anchor" href="#items-3"><span>items</span></a></h5><p><code>string</code></p><p>The JSON string to create the Config from.</p><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16"><span>Returns</span></a></h4><p><code>Config</code>&lt;<code>TObject</code>&gt;</p><p>A new Config instance.</p>',254))])}const g=c(i,[["render",l]]),m=JSON.parse('{"path":"/api/config/Config/classes/Config.html","title":"Class: Config<TObject>","lang":"en-US","frontmatter":{"description":"/ / Config Class: Config<TObject> Defined in: Config.ts:12 Class representing a Config. Author Mr. Stone evensstone@gmail.com Extends Type Parameters TObject TObject extends obj...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: Config<TObject>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/config/Config/classes/Config.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: Config<TObject>"}],["meta",{"property":"og:description","content":"/ / Config Class: Config<TObject> Defined in: Config.ts:12 Class representing a Config. Author Mr. Stone evensstone@gmail.com Extends Type Parameters TObject TObject extends obj..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":2.88,"words":864},"filePathRelative":"api/config/Config/classes/Config.md","autoDesc":true}');export{g as comp,m as data};
