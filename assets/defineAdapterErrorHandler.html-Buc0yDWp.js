import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as r,b as p,e as n,w as o,d as a,r as s,o as i}from"./app-B3SZc_3K.js";const u={};function f(m,e){const t=s("RouteLink");return i(),l("div",null,[r("p",null,[n(t,{to:"/api/core/"},{default:o(()=>e[0]||(e[0]=[r("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[59]||(e[59]=r("hr",null,null,-1)),r("p",null,[n(t,{to:"/api/core/"},{default:o(()=>e[1]||(e[1]=[a("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=a(" / ")),n(t,{to:"/api/core/blueprint/AdapterUtils/"},{default:o(()=>e[2]||(e[2]=[a("blueprint/AdapterUtils")])),_:1,__:[2]}),e[4]||(e[4]=a(" / defineAdapterErrorHandler"))]),e[60]||(e[60]=p('<h1 id="function-defineadaptererrorhandler" tabindex="-1"><a class="header-anchor" href="#function-defineadaptererrorhandler"><span>Function: defineAdapterErrorHandler()</span></a></h1><p>Registers an adapter error handler in the blueprint with appropriate metadata.</p><p>This function creates and injects a middleware into the blueprint that registers an error handler for a specific adapter based on platform or alias.</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The handler function, factory, or class.</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>Options including <code>platform</code>, <code>adapterAlias</code>, and <code>error</code> type(s) to handle.</p><h2 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h2>',8)),r("blockquote",null,[r("p",null,[e[6]||(e[6]=p("<strong>defineAdapterErrorHandler</strong>&lt;<code>RawEventType</code>, <code>RawResponseType</code>, <code>ExecutionContextType</code>&gt;(<code>module</code>, <code>options</code>): <code>Partial</code>&lt;",14)),n(t,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[5]||(e[5]=[r("code",null,"StoneBlueprint",-1)])),_:1,__:[5]}),e[7]||(e[7]=a(">"))])]),e[61]||(e[61]=p('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/blueprint/AdapterUtils.ts#L30" target="_blank" rel="noopener noreferrer">blueprint/AdapterUtils.ts:30</a></p><p>Defines a function-based adapter error handler.</p><p>This overload is used for plain function handlers that handle specific adapter errors.</p><h3 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h3><h4 id="raweventtype" tabindex="-1"><a class="header-anchor" href="#raweventtype"><span>RawEventType</span></a></h4><p><code>RawEventType</code> = <code>any</code></p><h4 id="rawresponsetype" tabindex="-1"><a class="header-anchor" href="#rawresponsetype"><span>RawResponseType</span></a></h4><p><code>RawResponseType</code> = <code>any</code></p><h4 id="executioncontexttype" tabindex="-1"><a class="header-anchor" href="#executioncontexttype"><span>ExecutionContextType</span></a></h4><p><code>ExecutionContextType</code> = <code>any</code></p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><h4 id="module" tabindex="-1"><a class="header-anchor" href="#module"><span>module</span></a></h4>',12)),r("p",null,[n(t,{to:"/api/core/declarations/type-aliases/FunctionalAdapterErrorHandler.html"},{default:o(()=>e[8]||(e[8]=[r("code",null,"FunctionalAdapterErrorHandler",-1)])),_:1,__:[8]}),e[9]||(e[9]=a("<")),e[10]||(e[10]=r("code",null,"RawEventType",-1)),e[11]||(e[11]=a(", ")),e[12]||(e[12]=r("code",null,"RawResponseType",-1)),e[13]||(e[13]=a(", ")),e[14]||(e[14]=r("code",null,"ExecutionContextType",-1)),e[15]||(e[15]=a(">"))]),e[62]||(e[62]=r("p",null,"The function to handle the adapter error.",-1)),e[63]||(e[63]=r("h4",{id:"options",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#options"},[r("span",null,"options")])],-1)),r("p",null,[n(t,{to:"/api/core/declarations/interfaces/AdapterErrorHandlerOptions.html"},{default:o(()=>e[16]||(e[16]=[r("code",null,"AdapterErrorHandlerOptions",-1)])),_:1,__:[16]}),e[17]||(e[17]=a(" & ")),e[18]||(e[18]=r("code",null,"object",-1))]),e[64]||(e[64]=r("p",null,"Metadata describing when to apply the handler (e.g. platform, alias, error types).",-1)),e[65]||(e[65]=r("h3",{id:"returns",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#returns"},[r("span",null,"Returns")])],-1)),r("p",null,[e[20]||(e[20]=r("code",null,"Partial",-1)),e[21]||(e[21]=a("<")),n(t,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[19]||(e[19]=[r("code",null,"StoneBlueprint",-1)])),_:1,__:[19]}),e[22]||(e[22]=a(">"))]),e[66]||(e[66]=p('<p>A Stone.js blueprint fragment that adds the registration middleware.</p><h3 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h3><p>The handler function, factory, or class.</p><h3 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h3><p>Options including <code>platform</code>, <code>adapterAlias</code>, and <code>error</code> type(s) to handle.</p><h2 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h2>',6)),r("blockquote",null,[r("p",null,[e[24]||(e[24]=p("<strong>defineAdapterErrorHandler</strong>&lt;<code>RawEventType</code>, <code>RawResponseType</code>, <code>ExecutionContextType</code>&gt;(<code>module</code>, <code>options</code>): <code>Partial</code>&lt;",14)),n(t,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[23]||(e[23]=[r("code",null,"StoneBlueprint",-1)])),_:1,__:[23]}),e[25]||(e[25]=a(">"))])]),e[67]||(e[67]=p('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/blueprint/AdapterUtils.ts#L48" target="_blank" rel="noopener noreferrer">blueprint/AdapterUtils.ts:48</a></p><p>Defines a factory-based adapter error handler.</p><p>This overload allows defining an adapter error handler as a factory function.</p><h3 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h3><h4 id="raweventtype-1" tabindex="-1"><a class="header-anchor" href="#raweventtype-1"><span>RawEventType</span></a></h4><p><code>RawEventType</code> = <code>any</code></p><h4 id="rawresponsetype-1" tabindex="-1"><a class="header-anchor" href="#rawresponsetype-1"><span>RawResponseType</span></a></h4><p><code>RawResponseType</code> = <code>any</code></p><h4 id="executioncontexttype-1" tabindex="-1"><a class="header-anchor" href="#executioncontexttype-1"><span>ExecutionContextType</span></a></h4><p><code>ExecutionContextType</code> = <code>any</code></p><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3><h4 id="module-1" tabindex="-1"><a class="header-anchor" href="#module-1"><span>module</span></a></h4>',12)),r("p",null,[n(t,{to:"/api/core/declarations/type-aliases/FactoryAdapterErrorHandler.html"},{default:o(()=>e[26]||(e[26]=[r("code",null,"FactoryAdapterErrorHandler",-1)])),_:1,__:[26]}),e[27]||(e[27]=a("<")),e[28]||(e[28]=r("code",null,"RawEventType",-1)),e[29]||(e[29]=a(", ")),e[30]||(e[30]=r("code",null,"RawResponseType",-1)),e[31]||(e[31]=a(", ")),e[32]||(e[32]=r("code",null,"ExecutionContextType",-1)),e[33]||(e[33]=a(">"))]),e[68]||(e[68]=r("p",null,"A factory that returns the adapter error handler function.",-1)),e[69]||(e[69]=r("h4",{id:"options-1",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#options-1"},[r("span",null,"options")])],-1)),r("p",null,[n(t,{to:"/api/core/declarations/interfaces/AdapterErrorHandlerOptions.html"},{default:o(()=>e[34]||(e[34]=[r("code",null,"AdapterErrorHandlerOptions",-1)])),_:1,__:[34]}),e[35]||(e[35]=a(" & ")),e[36]||(e[36]=r("code",null,"object",-1))]),e[70]||(e[70]=r("p",null,"Metadata describing when to apply the handler (e.g. platform, alias, error types).",-1)),e[71]||(e[71]=r("h3",{id:"returns-1",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#returns-1"},[r("span",null,"Returns")])],-1)),r("p",null,[e[38]||(e[38]=r("code",null,"Partial",-1)),e[39]||(e[39]=a("<")),n(t,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[37]||(e[37]=[r("code",null,"StoneBlueprint",-1)])),_:1,__:[37]}),e[40]||(e[40]=a(">"))]),e[72]||(e[72]=p('<p>A Stone.js blueprint fragment that adds the registration middleware.</p><h3 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h3><p>The handler function, factory, or class.</p><h3 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h3><p>Options including <code>platform</code>, <code>adapterAlias</code>, and <code>error</code> type(s) to handle.</p><h2 id="call-signature-2" tabindex="-1"><a class="header-anchor" href="#call-signature-2"><span>Call Signature</span></a></h2>',6)),r("blockquote",null,[r("p",null,[e[42]||(e[42]=p("<strong>defineAdapterErrorHandler</strong>&lt;<code>RawEventType</code>, <code>RawResponseType</code>, <code>ExecutionContextType</code>&gt;(<code>module</code>, <code>options</code>): <code>Partial</code>&lt;",14)),n(t,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[41]||(e[41]=[r("code",null,"StoneBlueprint",-1)])),_:1,__:[41]}),e[43]||(e[43]=a(">"))])]),e[73]||(e[73]=p('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/blueprint/AdapterUtils.ts#L66" target="_blank" rel="noopener noreferrer">blueprint/AdapterUtils.ts:66</a></p><p>Defines a class-based adapter error handler.</p><p>This overload allows defining an adapter error handler as a class.</p><h3 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h3><h4 id="raweventtype-2" tabindex="-1"><a class="header-anchor" href="#raweventtype-2"><span>RawEventType</span></a></h4><p><code>RawEventType</code> = <code>any</code></p><h4 id="rawresponsetype-2" tabindex="-1"><a class="header-anchor" href="#rawresponsetype-2"><span>RawResponseType</span></a></h4><p><code>RawResponseType</code> = <code>any</code></p><h4 id="executioncontexttype-2" tabindex="-1"><a class="header-anchor" href="#executioncontexttype-2"><span>ExecutionContextType</span></a></h4><p><code>ExecutionContextType</code> = <code>any</code></p><h3 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h3><h4 id="module-2" tabindex="-1"><a class="header-anchor" href="#module-2"><span>module</span></a></h4>',12)),r("p",null,[n(t,{to:"/api/core/declarations/type-aliases/IAdapterErrorHandlerClass.html"},{default:o(()=>e[44]||(e[44]=[r("code",null,"IAdapterErrorHandlerClass",-1)])),_:1,__:[44]}),e[45]||(e[45]=a("<")),e[46]||(e[46]=r("code",null,"RawEventType",-1)),e[47]||(e[47]=a(", ")),e[48]||(e[48]=r("code",null,"RawResponseType",-1)),e[49]||(e[49]=a(", ")),e[50]||(e[50]=r("code",null,"ExecutionContextType",-1)),e[51]||(e[51]=a(">"))]),e[74]||(e[74]=r("p",null,"A class that implements the adapter error handler logic.",-1)),e[75]||(e[75]=r("h4",{id:"options-2",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#options-2"},[r("span",null,"options")])],-1)),r("p",null,[n(t,{to:"/api/core/declarations/interfaces/AdapterErrorHandlerOptions.html"},{default:o(()=>e[52]||(e[52]=[r("code",null,"AdapterErrorHandlerOptions",-1)])),_:1,__:[52]}),e[53]||(e[53]=a(" & ")),e[54]||(e[54]=r("code",null,"object",-1))]),e[76]||(e[76]=r("p",null,"Metadata describing when to apply the handler (e.g. platform, alias, error types).",-1)),e[77]||(e[77]=r("h3",{id:"returns-2",tabindex:"-1"},[r("a",{class:"header-anchor",href:"#returns-2"},[r("span",null,"Returns")])],-1)),r("p",null,[e[56]||(e[56]=r("code",null,"Partial",-1)),e[57]||(e[57]=a("<")),n(t,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:o(()=>e[55]||(e[55]=[r("code",null,"StoneBlueprint",-1)])),_:1,__:[55]}),e[58]||(e[58]=a(">"))]),e[78]||(e[78]=p('<p>A Stone.js blueprint fragment that adds the registration middleware.</p><h3 id="param-6" tabindex="-1"><a class="header-anchor" href="#param-6"><span>Param</span></a></h3><p>The handler function, factory, or class.</p><h3 id="param-7" tabindex="-1"><a class="header-anchor" href="#param-7"><span>Param</span></a></h3><p>Options including <code>platform</code>, <code>adapterAlias</code>, and <code>error</code> type(s) to handle.</p>',5))])}const b=d(u,[["render",f]]),x=JSON.parse('{"path":"/api/core/blueprint/AdapterUtils/functions/defineAdapterErrorHandler.html","title":"Function: defineAdapterErrorHandler()","lang":"en-US","frontmatter":{"description":"/ / defineAdapterErrorHandler Function: defineAdapterErrorHandler() Registers an adapter error handler in the blueprint with appropriate metadata. This function creates and inje...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: defineAdapterErrorHandler()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/blueprint/AdapterUtils/functions/defineAdapterErrorHandler.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: defineAdapterErrorHandler()"}],["meta",{"property":"og:description","content":"/ / defineAdapterErrorHandler Function: defineAdapterErrorHandler() Registers an adapter error handler in the blueprint with appropriate metadata. This function creates and inje..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":1.34,"words":403},"filePathRelative":"api/core/blueprint/AdapterUtils/functions/defineAdapterErrorHandler.md","autoDesc":true}');export{b as comp,x as data};
