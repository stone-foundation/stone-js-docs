import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as r,a,e as s,d as e,w as o,r as l,o as i}from"./app-D3YQYQ8j.js";const m={};function u(h,n){const t=l("RouteLink");return i(),d("div",null,[n[37]||(n[37]=r(`<h1 id="function-definecommand" tabindex="-1"><a class="header-anchor" href="#function-definecommand"><span>Function: defineCommand()</span></a></h1><p>Utility function to define a command handler for the Node Console Adapter.</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The CommandHandler module.</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>The metadata options for the handler.</p><h2 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineCommand</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>NodeConsoleAdapterBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Utility function to define a function-based command handler for the Node Console Adapter.</p><h3 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h3><h4 id="u" tabindex="-1"><a class="header-anchor" href="#u"><span>U</span></a></h4><p><code>U</code> <em>extends</em> <code>IncomingEvent</code> = <code>IncomingEvent</code></p><h4 id="v" tabindex="-1"><a class="header-anchor" href="#v"><span>V</span></a></h4><p><code>V</code> = <code>unknown</code></p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><h4 id="module" tabindex="-1"><a class="header-anchor" href="#module"><span>module</span></a></h4>`,16)),a("p",null,[s(t,{to:"/api/node-cli-adapter/declarations/type-aliases/FunctionalCommandHandler.html"},{default:o(()=>n[0]||(n[0]=[a("code",null,"FunctionalCommandHandler",-1)])),_:1,__:[0]}),n[1]||(n[1]=e("<")),n[2]||(n[2]=a("code",null,"U",-1)),n[3]||(n[3]=e(", ")),n[4]||(n[4]=a("code",null,"V",-1)),n[5]||(n[5]=e(">"))]),n[38]||(n[38]=a("p",null,"The CommandHandler module.",-1)),n[39]||(n[39]=a("h4",{id:"options",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#options"},[a("span",null,"options")])],-1)),a("p",null,[s(t,{to:"/api/node-cli-adapter/decorators/Command/interfaces/CommandOptions.html"},{default:o(()=>n[6]||(n[6]=[a("code",null,"CommandOptions",-1)])),_:1,__:[6]})]),n[40]||(n[40]=a("p",null,"The metadata options for the handler.",-1)),n[41]||(n[41]=a("h3",{id:"returns",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#returns"},[a("span",null,"Returns")])],-1)),a("p",null,[n[8]||(n[8]=a("code",null,"Partial",-1)),n[9]||(n[9]=e("<")),s(t,{to:"/api/node-cli-adapter/options/NodeConsoleAdapterBlueprint/interfaces/NodeConsoleAdapterBlueprint.html"},{default:o(()=>n[7]||(n[7]=[a("code",null,"NodeConsoleAdapterBlueprint",-1)])),_:1,__:[7]}),n[10]||(n[10]=e(">"))]),n[42]||(n[42]=r(`<p>The NodeConsoleAdapterBlueprint.</p><h3 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h3><p>The CommandHandler module.</p><h3 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h3><p>The metadata options for the handler.</p><h2 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineCommand</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>NodeConsoleAdapterBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Utility function to define a factory-based command handler for the Node Console Adapter.</p><h3 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h3><h4 id="u-1" tabindex="-1"><a class="header-anchor" href="#u-1"><span>U</span></a></h4><p><code>U</code> <em>extends</em> <code>IncomingEvent</code> = <code>IncomingEvent</code></p><h4 id="v-1" tabindex="-1"><a class="header-anchor" href="#v-1"><span>V</span></a></h4><p><code>V</code> = <code>unknown</code></p><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3><h4 id="module-1" tabindex="-1"><a class="header-anchor" href="#module-1"><span>module</span></a></h4>`,15)),a("p",null,[s(t,{to:"/api/node-cli-adapter/declarations/type-aliases/FactoryCommandHandler.html"},{default:o(()=>n[11]||(n[11]=[a("code",null,"FactoryCommandHandler",-1)])),_:1,__:[11]}),n[12]||(n[12]=e("<")),n[13]||(n[13]=a("code",null,"U",-1)),n[14]||(n[14]=e(", ")),n[15]||(n[15]=a("code",null,"V",-1)),n[16]||(n[16]=e(">"))]),n[43]||(n[43]=a("p",null,"The CommandHandler module.",-1)),n[44]||(n[44]=a("h4",{id:"options-1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#options-1"},[a("span",null,"options")])],-1)),a("p",null,[s(t,{to:"/api/node-cli-adapter/decorators/Command/interfaces/CommandOptions.html"},{default:o(()=>n[17]||(n[17]=[a("code",null,"CommandOptions",-1)])),_:1,__:[17]}),n[18]||(n[18]=e(" & ")),n[19]||(n[19]=a("code",null,"object",-1))]),n[45]||(n[45]=a("p",null,"The metadata options for the handler.",-1)),n[46]||(n[46]=a("h3",{id:"returns-1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#returns-1"},[a("span",null,"Returns")])],-1)),a("p",null,[n[21]||(n[21]=a("code",null,"Partial",-1)),n[22]||(n[22]=e("<")),s(t,{to:"/api/node-cli-adapter/options/NodeConsoleAdapterBlueprint/interfaces/NodeConsoleAdapterBlueprint.html"},{default:o(()=>n[20]||(n[20]=[a("code",null,"NodeConsoleAdapterBlueprint",-1)])),_:1,__:[20]}),n[23]||(n[23]=e(">"))]),n[47]||(n[47]=r(`<p>The NodeConsoleAdapterBlueprint.</p><h3 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h3><p>The CommandHandler module.</p><h3 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h3><p>The metadata options for the handler.</p><h2 id="call-signature-2" tabindex="-1"><a class="header-anchor" href="#call-signature-2"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineCommand</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>NodeConsoleAdapterBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Utility function to define a class-based command handler for the Node Console Adapter.</p><h3 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h3><h4 id="u-2" tabindex="-1"><a class="header-anchor" href="#u-2"><span>U</span></a></h4><p><code>U</code> <em>extends</em> <code>IncomingEvent</code> = <code>IncomingEvent</code></p><h4 id="v-2" tabindex="-1"><a class="header-anchor" href="#v-2"><span>V</span></a></h4><p><code>V</code> = <code>unknown</code></p><h3 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h3><h4 id="module-2" tabindex="-1"><a class="header-anchor" href="#module-2"><span>module</span></a></h4>`,15)),a("p",null,[s(t,{to:"/api/node-cli-adapter/declarations/type-aliases/CommandHandlerClass.html"},{default:o(()=>n[24]||(n[24]=[a("code",null,"CommandHandlerClass",-1)])),_:1,__:[24]}),n[25]||(n[25]=e("<")),n[26]||(n[26]=a("code",null,"U",-1)),n[27]||(n[27]=e(", ")),n[28]||(n[28]=a("code",null,"V",-1)),n[29]||(n[29]=e(">"))]),n[48]||(n[48]=a("p",null,"The CommandHandler module.",-1)),n[49]||(n[49]=a("h4",{id:"options-2",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#options-2"},[a("span",null,"options")])],-1)),a("p",null,[s(t,{to:"/api/node-cli-adapter/decorators/Command/interfaces/CommandOptions.html"},{default:o(()=>n[30]||(n[30]=[a("code",null,"CommandOptions",-1)])),_:1,__:[30]}),n[31]||(n[31]=e(" & ")),n[32]||(n[32]=a("code",null,"object",-1))]),n[50]||(n[50]=a("p",null,"The metadata options for the handler.",-1)),n[51]||(n[51]=a("h3",{id:"returns-2",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#returns-2"},[a("span",null,"Returns")])],-1)),a("p",null,[n[34]||(n[34]=a("code",null,"Partial",-1)),n[35]||(n[35]=e("<")),s(t,{to:"/api/node-cli-adapter/options/NodeConsoleAdapterBlueprint/interfaces/NodeConsoleAdapterBlueprint.html"},{default:o(()=>n[33]||(n[33]=[a("code",null,"NodeConsoleAdapterBlueprint",-1)])),_:1,__:[33]}),n[36]||(n[36]=e(">"))]),n[52]||(n[52]=a("p",null,"The NodeConsoleAdapterBlueprint.",-1)),n[53]||(n[53]=a("h3",{id:"param-6",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#param-6"},[a("span",null,"Param")])],-1)),n[54]||(n[54]=a("p",null,"The CommandHandler module.",-1)),n[55]||(n[55]=a("h3",{id:"param-7",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#param-7"},[a("span",null,"Param")])],-1)),n[56]||(n[56]=a("p",null,"The metadata options for the handler.",-1))])}const C=p(m,[["render",u]]),g=JSON.parse('{"path":"/api/node-cli-adapter/blueprint/BlueprintUtils/functions/defineCommand.html","title":"Function: defineCommand()","lang":"en-US","frontmatter":{"description":"Function: defineCommand() Utility function to define a command handler for the Node Console Adapter. Param The CommandHandler module. Param The metadata options for the handler....","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: defineCommand()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/node-cli-adapter/blueprint/BlueprintUtils/functions/defineCommand.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: defineCommand()"}],["meta",{"property":"og:description","content":"Function: defineCommand() Utility function to define a command handler for the Node Console Adapter. Param The CommandHandler module. Param The metadata options for the handler...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.8,"words":240},"filePathRelative":"api/node-cli-adapter/blueprint/BlueprintUtils/functions/defineCommand.md","autoDesc":true}');export{C as comp,g as data};
