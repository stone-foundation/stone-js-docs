import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a,b as c,e as s,w as n,d as o,r as i,o as d}from"./app-B3SZc_3K.js";const h={};function l(g,e){const r=i("RouteLink");return d(),p("div",null,[a("p",null,[s(r,{to:"/api/core/"},{default:n(()=>e[0]||(e[0]=[a("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[5]||(e[5]=a("hr",null,null,-1)),a("p",null,[s(r,{to:"/api/core/"},{default:n(()=>e[1]||(e[1]=[o("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=o(" / ")),s(r,{to:"/api/core/declarations/"},{default:n(()=>e[2]||(e[2]=[o("declarations")])),_:1,__:[2]}),e[4]||(e[4]=o(" / ILogger"))]),e[6]||(e[6]=c('<h1 id="interface-ilogger" tabindex="-1"><a class="header-anchor" href="#interface-ilogger"><span>Interface: ILogger</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L288" target="_blank" rel="noopener noreferrer">declarations.ts:288</a></p><p>Logger Interface.</p><p>Represents a generic logging interface, which can either be a native console object or a popular JavaScript logging library.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>debug()</span></a></h3><blockquote><p><strong>debug</strong>: (<code>message</code>, ...<code>optionalParams</code>) =&gt; <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L303" target="_blank" rel="noopener noreferrer">declarations.ts:303</a></p><p>Logs debug-level messages, used for debugging purposes.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="message" tabindex="-1"><a class="header-anchor" href="#message"><span>message</span></a></h5><p><code>string</code></p><p>The message to log.</p><h5 id="optionalparams" tabindex="-1"><a class="header-anchor" href="#optionalparams"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error"><span>error()</span></a></h3><blockquote><p><strong>error</strong>: (<code>message</code>, ...<code>optionalParams</code>) =&gt; <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L319" target="_blank" rel="noopener noreferrer">declarations.ts:319</a></p><p>Logs errors, used to report errors or exceptions.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="message-1" tabindex="-1"><a class="header-anchor" href="#message-1"><span>message</span></a></h5><p><code>string</code></p><p>The error message to log.</p><h5 id="optionalparams-1" tabindex="-1"><a class="header-anchor" href="#optionalparams-1"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="info" tabindex="-1"><a class="header-anchor" href="#info"><span>info()</span></a></h3><blockquote><p><strong>info</strong>: (<code>message</code>, ...<code>optionalParams</code>) =&gt; <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L295" target="_blank" rel="noopener noreferrer">declarations.ts:295</a></p><p>Logs informational messages.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="message-2" tabindex="-1"><a class="header-anchor" href="#message-2"><span>message</span></a></h5><p><code>string</code></p><p>The message to log.</p><h5 id="optionalparams-2" tabindex="-1"><a class="header-anchor" href="#optionalparams-2"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="log" tabindex="-1"><a class="header-anchor" href="#log"><span>log()?</span></a></h3><blockquote><p><code>optional</code> <strong>log</strong>: (<code>message</code>, ...<code>optionalParams</code>) =&gt; <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L327" target="_blank" rel="noopener noreferrer">declarations.ts:327</a></p><p>Logs general messages, similar to <code>info</code> but less specific.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="message-3" tabindex="-1"><a class="header-anchor" href="#message-3"><span>message</span></a></h5><p><code>string</code></p><p>The message to log.</p><h5 id="optionalparams-3" tabindex="-1"><a class="header-anchor" href="#optionalparams-3"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="trace" tabindex="-1"><a class="header-anchor" href="#trace"><span>trace()?</span></a></h3><blockquote><p><code>optional</code> <strong>trace</strong>: (<code>message</code>, ...<code>optionalParams</code>) =&gt; <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L335" target="_blank" rel="noopener noreferrer">declarations.ts:335</a></p><p>Logs trace-level messages, providing the most detailed information, usually for diagnostic purposes.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="message-4" tabindex="-1"><a class="header-anchor" href="#message-4"><span>message</span></a></h5><p><code>string</code></p><p>The trace message to log.</p><h5 id="optionalparams-4" tabindex="-1"><a class="header-anchor" href="#optionalparams-4"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="warn" tabindex="-1"><a class="header-anchor" href="#warn"><span>warn()</span></a></h3><blockquote><p><strong>warn</strong>: (<code>message</code>, ...<code>optionalParams</code>) =&gt; <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L311" target="_blank" rel="noopener noreferrer">declarations.ts:311</a></p><p>Logs warnings, used to indicate potential issues.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="message-5" tabindex="-1"><a class="header-anchor" href="#message-5"><span>message</span></a></h5><p><code>string</code></p><p>The warning message to log.</p><h5 id="optionalparams-5" tabindex="-1"><a class="header-anchor" href="#optionalparams-5"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>void</code></p>',88))])}const b=t(h,[["render",l]]),u=JSON.parse('{"path":"/api/core/declarations/interfaces/ILogger.html","title":"Interface: ILogger","lang":"en-US","frontmatter":{"description":"/ / ILogger Interface: ILogger Defined in: declarations.ts:288 Logger Interface. Represents a generic logging interface, which can either be a native console object or a popular...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: ILogger\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/declarations/interfaces/ILogger.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: ILogger"}],["meta",{"property":"og:description","content":"/ / ILogger Interface: ILogger Defined in: declarations.ts:288 Logger Interface. Represents a generic logging interface, which can either be a native console object or a popular..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.9,"words":269},"filePathRelative":"api/core/declarations/interfaces/ILogger.md","autoDesc":true}');export{b as comp,u as data};
