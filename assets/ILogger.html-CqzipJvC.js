import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as n,o as r}from"./app-CsZBgwJX.js";const t={};function p(o,a){return r(),s("div",null,a[0]||(a[0]=[n(`<h1 id="interface-ilogger" tabindex="-1"><a class="header-anchor" href="#interface-ilogger"><span>Interface: ILogger</span></a></h1><p>Logger Interface.</p><p>Represents a generic logging interface, which can either be a native console object or a popular JavaScript logging library.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>debug()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function-variable function">debug</span><span class="token operator">:</span> <span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token operator">...</span>optionalParams<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Logs debug-level messages, used for debugging purposes.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="message" tabindex="-1"><a class="header-anchor" href="#message"><span>message</span></a></h5><p><code>string</code></p><p>The message to log.</p><h5 id="optionalparams" tabindex="-1"><a class="header-anchor" href="#optionalparams"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error"><span>error()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token operator">...</span>optionalParams<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Logs errors, used to report errors or exceptions.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="message-1" tabindex="-1"><a class="header-anchor" href="#message-1"><span>message</span></a></h5><p><code>string</code></p><p>The error message to log.</p><h5 id="optionalparams-1" tabindex="-1"><a class="header-anchor" href="#optionalparams-1"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="info" tabindex="-1"><a class="header-anchor" href="#info"><span>info()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function-variable function">info</span><span class="token operator">:</span> <span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token operator">...</span>optionalParams<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Logs informational messages.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="message-2" tabindex="-1"><a class="header-anchor" href="#message-2"><span>message</span></a></h5><p><code>string</code></p><p>The message to log.</p><h5 id="optionalparams-2" tabindex="-1"><a class="header-anchor" href="#optionalparams-2"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="log" tabindex="-1"><a class="header-anchor" href="#log"><span>log()?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional <span class="token function-variable function">log</span><span class="token operator">:</span> <span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token operator">...</span>optionalParams<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Logs general messages, similar to <code>info</code> but less specific.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="message-3" tabindex="-1"><a class="header-anchor" href="#message-3"><span>message</span></a></h5><p><code>string</code></p><p>The message to log.</p><h5 id="optionalparams-3" tabindex="-1"><a class="header-anchor" href="#optionalparams-3"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="trace" tabindex="-1"><a class="header-anchor" href="#trace"><span>trace()?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional <span class="token function-variable function">trace</span><span class="token operator">:</span> <span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token operator">...</span>optionalParams<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Logs trace-level messages, providing the most detailed information, usually for diagnostic purposes.</p><h4 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h4><h5 id="message-4" tabindex="-1"><a class="header-anchor" href="#message-4"><span>message</span></a></h5><p><code>string</code></p><p>The trace message to log.</p><h5 id="optionalparams-4" tabindex="-1"><a class="header-anchor" href="#optionalparams-4"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4><p><code>void</code></p><hr><h3 id="warn" tabindex="-1"><a class="header-anchor" href="#warn"><span>warn()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function-variable function">warn</span><span class="token operator">:</span> <span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token operator">...</span>optionalParams<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Logs warnings, used to indicate potential issues.</p><h4 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h4><h5 id="message-5" tabindex="-1"><a class="header-anchor" href="#message-5"><span>message</span></a></h5><p><code>string</code></p><p>The warning message to log.</p><h5 id="optionalparams-5" tabindex="-1"><a class="header-anchor" href="#optionalparams-5"><span>optionalParams</span></a></h5><p>...<code>unknown</code>[]</p><p>Optional parameters to log.</p><h4 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h4><p><code>void</code></p>`,81)]))}const l=e(t,[["render",p]]),d=JSON.parse('{"path":"/api/core/declarations/interfaces/ILogger.html","title":"Interface: ILogger","lang":"en-US","frontmatter":{"description":"Interface: ILogger Logger Interface. Represents a generic logging interface, which can either be a native console object or a popular JavaScript logging library. Properties debu...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: ILogger\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/declarations/interfaces/ILogger.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: ILogger"}],["meta",{"property":"og:description","content":"Interface: ILogger Logger Interface. Represents a generic logging interface, which can either be a native console object or a popular JavaScript logging library. Properties debu..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.7,"words":209},"filePathRelative":"api/core/declarations/interfaces/ILogger.md","autoDesc":true}');export{l as comp,d as data};
