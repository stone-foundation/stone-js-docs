import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as t,b as o,e as r,w as s,d as a,r as i,o as d}from"./app-7vCtLRjQ.js";const u={};function m(f,e){const n=i("RouteLink");return d(),p("div",null,[t("p",null,[r(n,{to:"/api/core/"},{default:s(()=>e[0]||(e[0]=[t("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[31]||(e[31]=t("hr",null,null,-1)),t("p",null,[r(n,{to:"/api/core/"},{default:s(()=>e[1]||(e[1]=[a("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=a(" / ")),r(n,{to:"/api/core/decorators/Metadata/"},{default:s(()=>e[2]||(e[2]=[a("decorators/Metadata")])),_:1,__:[2]}),e[4]||(e[4]=a(" / getBlueprint"))]),e[32]||(e[32]=o('<h1 id="function-getblueprint" tabindex="-1"><a class="header-anchor" href="#function-getblueprint"><span>Function: getBlueprint()</span></a></h1><p>Get the blueprint value from a class.</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The class to get the blueprint from.</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>The default value to return if the blueprint key is not found.</p><h2 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h2><blockquote><p><strong>getBlueprint</strong>&lt;<code>TClass</code>, <code>UReturn</code>&gt;(<code>Class</code>): <code>undefined</code> | <code>UReturn</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/decorators/Metadata.ts#L198" target="_blank" rel="noopener noreferrer">decorators/Metadata.ts:198</a></p><p>Get the blueprint value from a class.</p><h3 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h3><h4 id="tclass" tabindex="-1"><a class="header-anchor" href="#tclass"><span>TClass</span></a></h4>',12)),t("p",null,[e[6]||(e[6]=t("code",null,"TClass",-1)),e[7]||(e[7]=a()),e[8]||(e[8]=t("em",null,"extends",-1)),e[9]||(e[9]=a()),r(n,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:s(()=>e[5]||(e[5]=[t("code",null,"ClassType",-1)])),_:1,__:[5]})]),e[33]||(e[33]=t("h4",{id:"ureturn",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#ureturn"},[t("span",null,"UReturn")])],-1)),t("p",null,[e[13]||(e[13]=t("code",null,"UReturn",-1)),e[14]||(e[14]=a(" = ")),r(n,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:s(()=>e[10]||(e[10]=[t("code",null,"StoneBlueprint",-1)])),_:1,__:[10]}),e[15]||(e[15]=a("<")),r(n,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:s(()=>e[11]||(e[11]=[t("code",null,"IncomingEvent",-1)])),_:1,__:[11]}),e[16]||(e[16]=a(", ")),r(n,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:s(()=>e[12]||(e[12]=[t("code",null,"OutgoingResponse",-1)])),_:1,__:[12]}),e[17]||(e[17]=a(">"))]),e[34]||(e[34]=o('<h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><h4 id="class" tabindex="-1"><a class="header-anchor" href="#class"><span>Class</span></a></h4><p><code>TClass</code></p><p>The class to get the blueprint from.</p><h3 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h3><p><code>undefined</code> | <code>UReturn</code></p><p>The blueprint value or the default value if the key does not exist.</p><h3 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h3><p>The class to get the blueprint from.</p><h3 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h3><p>The default value to return if the blueprint key is not found.</p><h2 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h2><blockquote><p><strong>getBlueprint</strong>&lt;<code>TClass</code>, <code>UReturn</code>&gt;(<code>Class</code>, <code>fallback</code>): <code>UReturn</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/decorators/Metadata.ts#L207" target="_blank" rel="noopener noreferrer">decorators/Metadata.ts:207</a></p><p>Get the blueprint value from a class.</p><h3 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h3><h4 id="tclass-1" tabindex="-1"><a class="header-anchor" href="#tclass-1"><span>TClass</span></a></h4>',17)),t("p",null,[e[19]||(e[19]=t("code",null,"TClass",-1)),e[20]||(e[20]=a()),e[21]||(e[21]=t("em",null,"extends",-1)),e[22]||(e[22]=a()),r(n,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:s(()=>e[18]||(e[18]=[t("code",null,"ClassType",-1)])),_:1,__:[18]})]),e[35]||(e[35]=t("h4",{id:"ureturn-1",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#ureturn-1"},[t("span",null,"UReturn")])],-1)),t("p",null,[e[26]||(e[26]=t("code",null,"UReturn",-1)),e[27]||(e[27]=a(" = ")),r(n,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:s(()=>e[23]||(e[23]=[t("code",null,"StoneBlueprint",-1)])),_:1,__:[23]}),e[28]||(e[28]=a("<")),r(n,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:s(()=>e[24]||(e[24]=[t("code",null,"IncomingEvent",-1)])),_:1,__:[24]}),e[29]||(e[29]=a(", ")),r(n,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:s(()=>e[25]||(e[25]=[t("code",null,"OutgoingResponse",-1)])),_:1,__:[25]}),e[30]||(e[30]=a(">"))]),e[36]||(e[36]=o('<h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3><h4 id="class-1" tabindex="-1"><a class="header-anchor" href="#class-1"><span>Class</span></a></h4><p><code>TClass</code></p><p>The class to get the blueprint from.</p><h4 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>fallback</span></a></h4><p><code>UReturn</code></p><p>The default value to return if the blueprint key is not found.</p><h3 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h3><p><code>UReturn</code></p><p>The blueprint value or the default value if the key does not exist.</p><h3 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h3><p>The class to get the blueprint from.</p><h3 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h3><p>The default value to return if the blueprint key is not found.</p>',14))])}const g=l(u,[["render",m]]),b=JSON.parse('{"path":"/api/core/decorators/Metadata/functions/getBlueprint.html","title":"Function: getBlueprint()","lang":"en-US","frontmatter":{"description":"/ / getBlueprint Function: getBlueprint() Get the blueprint value from a class. Param The class to get the blueprint from. Param The default value to return if the blueprint key...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: getBlueprint()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/decorators/Metadata/functions/getBlueprint.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: getBlueprint()"}],["meta",{"property":"og:description","content":"/ / getBlueprint Function: getBlueprint() Get the blueprint value from a class. Param The class to get the blueprint from. Param The default value to return if the blueprint key..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.75,"words":224},"filePathRelative":"api/core/decorators/Metadata/functions/getBlueprint.md","autoDesc":true}');export{g as comp,b as data};
