import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as o,a as n,d as s,e as t,w as r,r as l,o as d}from"./app-CIBZQWs4.js";const c={};function u(m,e){const a=l("RouteLink");return d(),p("div",null,[e[14]||(e[14]=o('<h1 id="interface-kernelconfig-tevent-uresponse" tabindex="-1"><a class="header-anchor" href="#interface-kernelconfig-tevent-uresponse"><span>Interface: KernelConfig&lt;TEvent, UResponse&gt;</span></a></h1><p>Kernel options.</p><p>This interface defines the configuration for kernel-level options.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="tevent" tabindex="-1"><a class="header-anchor" href="#tevent"><span>TEvent</span></a></h3>',5)),n("p",null,[e[2]||(e[2]=n("code",null,"TEvent",-1)),e[3]||(e[3]=s()),e[4]||(e[4]=n("em",null,"extends",-1)),e[5]||(e[5]=s()),t(a,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:r(()=>e[0]||(e[0]=[n("code",null,"IncomingEvent",-1)])),_:1,__:[0]}),e[6]||(e[6]=s(" = ")),t(a,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:r(()=>e[1]||(e[1]=[n("code",null,"IncomingEvent",-1)])),_:1,__:[1]})]),e[15]||(e[15]=n("h3",{id:"uresponse",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#uresponse"},[n("span",null,"UResponse")])],-1)),n("p",null,[e[9]||(e[9]=n("code",null,"UResponse",-1)),e[10]||(e[10]=s()),e[11]||(e[11]=n("em",null,"extends",-1)),e[12]||(e[12]=s()),t(a,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:r(()=>e[7]||(e[7]=[n("code",null,"OutgoingResponse",-1)])),_:1,__:[7]}),e[13]||(e[13]=s(" = ")),t(a,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:r(()=>e[8]||(e[8]=[n("code",null,"OutgoingResponse",-1)])),_:1,__:[8]})]),e[16]||(e[16]=o(`<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="errorhandlers" tabindex="-1"><a class="header-anchor" href="#errorhandlers"><span>errorHandlers?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional errorHandlers<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> MetaErrorHandler<span class="token operator">&lt;</span>TEvent<span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Error handlers used to manage and report errors that occur within the kernel. These handlers can be used to customize error handling behavior and logging.</p><hr><h3 id="eventhandler" tabindex="-1"><a class="header-anchor" href="#eventhandler"><span>eventHandler?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional eventHandler<span class="token operator">:</span> MixedEventHandler<span class="token operator">&lt;</span>TEvent<span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The main event handler for the application. Every Stone.js application must have a main event handler.</p><hr><h3 id="middleware" tabindex="-1"><a class="header-anchor" href="#middleware"><span>middleware?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional middleware<span class="token operator">:</span> MixedPipe<span class="token operator">&lt;</span>TEvent<span class="token punctuation">,</span> UResponse<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Middleware configuration options for different stages of the kernel&#39;s lifecycle.</p><hr><h3 id="responseresolver" tabindex="-1"><a class="header-anchor" href="#responseresolver"><span>responseResolver?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional responseResolver<span class="token operator">:</span> ResponseResolver<span class="token operator">&lt;</span>UResponse<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The response resolver, used to create instances of the response object.</p><hr><h3 id="skipmiddleware" tabindex="-1"><a class="header-anchor" href="#skipmiddleware"><span>skipMiddleware?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional skipMiddleware<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>A flag indicating whether to skip middleware processing. This flag can be used to bypass middleware processing in the kernel.</p>`,20))])}const v=i(c,[["render",u]]),f=JSON.parse('{"path":"/api/core/options/KernelConfig/interfaces/KernelConfig.html","title":"Interface: KernelConfig<TEvent, UResponse>","lang":"en-US","frontmatter":{"description":"Interface: KernelConfig<TEvent, UResponse> Kernel options. This interface defines the configuration for kernel-level options. Type Parameters TEvent TEvent extends = UResponse U...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: KernelConfig<TEvent, UResponse>\\",\\"image\\":[\\"/logo.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/options/KernelConfig/interfaces/KernelConfig.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: KernelConfig<TEvent, UResponse>"}],["meta",{"property":"og:description","content":"Interface: KernelConfig<TEvent, UResponse> Kernel options. This interface defines the configuration for kernel-level options. Type Parameters TEvent TEvent extends = UResponse U..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.5,"words":149},"filePathRelative":"api/core/options/KernelConfig/interfaces/KernelConfig.md","autoDesc":true}');export{v as comp,f as data};
