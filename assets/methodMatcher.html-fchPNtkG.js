import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as s,a as n,d as t,e as o,w as p,r as c,o as l}from"./app-D3YQYQ8j.js";const d={};function m(u,e){const a=c("RouteLink");return l(),i("div",null,[e[13]||(e[13]=s(`<h1 id="function-methodmatcher" tabindex="-1"><a class="header-anchor" href="#function-methodmatcher"><span>Function: methodMatcher()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">methodMatcher</span><span class="token generic class-name"><span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Matches the HTTP method of an incoming HTTP event against a route&#39;s method configuration.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="incomingeventtype" tabindex="-1"><a class="header-anchor" href="#incomingeventtype"><span>IncomingEventType</span></a></h3>`,5)),n("p",null,[e[2]||(e[2]=n("code",null,"IncomingEventType",-1)),e[3]||(e[3]=t()),e[4]||(e[4]=n("em",null,"extends",-1)),e[5]||(e[5]=t()),o(a,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>e[0]||(e[0]=[n("code",null,"IIncomingEvent",-1)])),_:1,__:[0]}),e[6]||(e[6]=t(" = ")),o(a,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>e[1]||(e[1]=[n("code",null,"IIncomingEvent",-1)])),_:1,__:[1]})]),e[14]||(e[14]=s('<p>The type representing the incoming HTTP event.</p><h3 id="outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#outgoingresponsetype"><span>OutgoingResponseType</span></a></h3><p><code>OutgoingResponseType</code> = <code>unknown</code></p><p>The type representing the outgoing HTTP response.</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3>',6)),n("p",null,[o(a,{to:"/api/router/matchers/interfaces/MatcherOptions.html"},{default:p(()=>e[7]||(e[7]=[n("code",null,"MatcherOptions",-1)])),_:1,__:[7]}),e[8]||(e[8]=t("<")),e[9]||(e[9]=n("code",null,"IncomingEventType",-1)),e[10]||(e[10]=t(", ")),e[11]||(e[11]=n("code",null,"OutgoingResponseType",-1)),e[12]||(e[12]=t(">"))]),e[15]||(e[15]=s(`<p>The matcher options containing the route and event.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>boolean</code></p><p><code>true</code> if the method matches, otherwise <code>false</code>.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">const</span> match <span class="token operator">=</span> <span class="token function">methodMatcher</span><span class="token punctuation">(</span><span class="token punctuation">{</span> route<span class="token punctuation">,</span> event <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>match<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true or false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const y=r(d,[["render",m]]),f=JSON.parse(`{"path":"/api/router/matchers/functions/methodMatcher.html","title":"Function: methodMatcher()","lang":"en-US","frontmatter":{"description":"Function: methodMatcher() Matches the HTTP method of an incoming HTTP event against a route's method configuration. Type Parameters IncomingEventType IncomingEventType extends =...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: methodMatcher()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/router/matchers/functions/methodMatcher.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: methodMatcher()"}],["meta",{"property":"og:description","content":"Function: methodMatcher() Matches the HTTP method of an incoming HTTP event against a route's method configuration. Type Parameters IncomingEventType IncomingEventType extends =..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.29,"words":87},"filePathRelative":"api/router/matchers/functions/methodMatcher.md","autoDesc":true}`);export{y as comp,f as data};
