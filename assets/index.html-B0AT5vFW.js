import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a,b as s,e as o,w as i,r as l,o as r}from"./app-D3YQYQ8j.js";const c={};function d(u,n){const e=l("RouteLink");return r(),p("div",null,[n[3]||(n[3]=a("h1",{id:"stone-js-aws-lambda-http-adapter",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#stone-js-aws-lambda-http-adapter"},[a("span",null,"Stone.js - AWS Lambda HTTP Adapter")])],-1)),a("p",null,[n[1]||(n[1]=s('<a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/l/@stone-js/aws-lambda-http-adapter" alt="npm" loading="lazy"></a><a href="https://www.npmjs.com/package/@stone-js/aws-lambda-http-adapter" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/v/@stone-js/aws-lambda-http-adapter" alt="npm" loading="lazy"></a><a href="https://www.npmjs.com/package/@stone-js/aws-lambda-http-adapter" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/dm/@stone-js/aws-lambda-http-adapter" alt="npm" loading="lazy"></a><img src="https://img.shields.io/maintenance/yes/2025" alt="Maintenance" loading="lazy"><a href="https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/actions/workflows/main.yml" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/actions/workflows/main.yml/badge.svg" alt="Build Status" loading="lazy"></a><a href="https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/actions/workflows/release.yml" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/actions/workflows/release.yml/badge.svg" alt="Publish Package to npmjs" loading="lazy"></a><a href="https://sonarcloud.io/summary/new_code?id=stone-foundation_stone-js-aws-lambda-http-adapter" target="_blank" rel="noopener noreferrer"><img src="https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-aws-lambda-http-adapter&amp;metric=alert_status" alt="Quality Gate Status" loading="lazy"></a><a href="https://sonarcloud.io/summary/new_code?id=stone-foundation_stone-js-aws-lambda-http-adapter" target="_blank" rel="noopener noreferrer"><img src="https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-aws-lambda-http-adapter&amp;metric=coverage" alt="Coverage" loading="lazy"></a>',8)),o(e,{to:"/packages/aws-lambda-http-adapter/SECURITY.html"},{default:i(()=>n[0]||(n[0]=[a("img",{src:"https://img.shields.io/badge/Security-Policy-blue.svg",alt:"Security Policy",loading:"lazy"},null,-1)])),_:1,__:[0]}),n[2]||(n[2]=s('<a href="https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/security/code-scanning" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/actions/workflows/github-code-scanning/codeql/badge.svg" alt="CodeQL" loading="lazy"></a><a href="https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/network/updates" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/Dependabot-enabled-brightgreen.svg" alt="Dependabot Status" loading="lazy"></a><a href="https://conventionalcommits.org" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/Conventional Commits-1.0.0-yellow.svg" alt="Conventional Commits" loading="lazy"></a>',3))]),n[4]||(n[4]=s(`<p>The <strong>AWS Lambda HTTP Adapter</strong> allows your Stone.js application to run as a fully event-driven Lambda function behind API Gateway or any Lambda-compatible HTTP environment. It seamlessly transforms API Gateway events into <code>IncomingEvent</code> and returns <code>OutgoingResponse</code>, adhering to the Continuum Architecture.</p><hr><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>In Stone.js, <strong>adapters</strong> serve as bridges between raw platform input and structured internal events. The AWS Lambda HTTP Adapter processes API Gateway-style HTTP events and turns them into normalized <code>IncomingEvent</code> objects. It also formats your systemâ€™s <code>OutgoingResponse</code> into a valid Lambda HTTP response payload.</p><p>This adapter empowers you to write cloud-native functions that stay decoupled from AWS specifics while preserving the full Stone.js lifecycle, type safety, and cross-platform consistency.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> <span class="token function">install</span> @stone-js/aws-lambda-http-adapter</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>This package is <strong>pure ESM</strong>. Make sure your project uses ESM (<code>&quot;type&quot;: &quot;module&quot;</code> in <code>package.json</code>) or configure your tooling accordingly.</p></blockquote><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>You can integrate the adapter either declaratively with a decorator or imperatively using the <code>awsLambdaHttpAdapterBlueprint</code>.</p><h3 id="declarative-api" tabindex="-1"><a class="header-anchor" href="#declarative-api"><span>Declarative API</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> AwsLambdaHttp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/aws-lambda-http-adapter&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> StoneApp<span class="token punctuation">,</span> IncomingEvent<span class="token punctuation">,</span> IEventHandler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">StoneApp</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">AwsLambdaHttp</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token keyword">implements</span> <span class="token class-name">IEventHandler<span class="token operator">&lt;</span>IncomingEvent<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token operator">:</span> IncomingEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> name <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Lambda&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="imperative-api" tabindex="-1"><a class="header-anchor" href="#imperative-api"><span>Imperative API</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStoneApp<span class="token punctuation">,</span> IncomingEvent<span class="token punctuation">,</span> defineConfig<span class="token punctuation">,</span> IBlueprint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/core&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> awsLambdaHttpAdapterBlueprint<span class="token punctuation">,</span> <span class="token constant">AWS_LAMBDA_HTTP_PLATFORM</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/aws-lambda-http-adapter&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> IncomingEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> name <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Lambda&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Hi </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">defineStoneApp</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>awsLambdaHttpAdapterBlueprint<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> AppConfig <span class="token operator">=</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">afterConfigure</span><span class="token punctuation">(</span>blueprint<span class="token operator">:</span> IBlueprint<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>blueprint<span class="token punctuation">.</span><span class="token keyword">is</span><span class="token punctuation">(</span><span class="token string">&#39;stone.adapter.platform&#39;</span><span class="token punctuation">,</span> <span class="token constant">AWS_LAMBDA_HTTP_PLATFORM</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      blueprint<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;stone.adapter.default&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="what-it-enables" tabindex="-1"><a class="header-anchor" href="#what-it-enables"><span>What It Enables</span></a></h2><ul><li><p><strong>Serverless by Design</strong> Build modern HTTP APIs or websites running entirely on AWS Lambda behind API Gateway or ALB.</p></li><li><p><strong>Clean Separation of Concerns</strong> Your app never sees AWS-specific payloads. All requests and responses are fully normalized by the adapter.</p></li><li><p><strong>Full Continuum Integration</strong> Request becomes <code>IncomingEvent</code>, response becomes <code>OutgoingResponse</code>. Lambda is just another execution environment.</p></li><li><p><strong>Small, Fast, Efficient</strong> No cold start bloat. No Express or frameworks. Just your logic and the lightweight Stone.js runtime.</p></li><li><p><strong>Lifecycle Support</strong> Includes support for <code>onStart</code>, <code>onStop</code>, error hooks, and adapter middleware.</p></li><li><p><strong>Typed Event Context</strong> Access query, body, headers, cookies, IPs and more with full TypeScript support.</p></li><li><p><strong>Zero Glue Code</strong> No need to write <code>handler(event, context)</code> boilerplate. Stone.js manages that for you.</p></li><li><p><strong>Multi-platform Ready</strong> The same app can run locally with Node, in the browser, or in the cloud, just change the adapter.</p></li></ul><h2 id="configuration-options" tabindex="-1"><a class="header-anchor" href="#configuration-options"><span>Configuration Options</span></a></h2><p>Unlike Node, this adapter inherits all standard options from the core <code>AdapterConfig</code>:</p><table><thead><tr><th>Option</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>default</code></td><td><code>boolean</code></td><td>Set as the default adapter for your app</td></tr><tr><td><code>alias</code></td><td><code>string</code></td><td>Optional name to reference this adapter</td></tr><tr><td><code>current</code></td><td><code>boolean</code></td><td>Marks this adapter as active at runtime</td></tr><tr><td><code>middleware[]</code></td><td><code>AdapterMixedPipeType[]</code></td><td>Middleware executed during the adapter lifecycle</td></tr><tr><td><code>errorHandlers</code></td><td><code>Record&lt;string, MetaAdapterErrorHandler&gt;</code></td><td>Customize error response formatting or behavior</td></tr></tbody></table><blockquote><p>Note: AWS Lambda automatically injects its execution context and raw event. This adapter handles both without manual plumbing.</p></blockquote><h2 id="adapter-context-shape" tabindex="-1"><a class="header-anchor" href="#adapter-context-shape"><span>Adapter Context Shape</span></a></h2><p>When middleware or hooks execute, the AWS Lambda adapter provides this normalized context:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">interface</span> <span class="token class-name">AwsLambdaHttpAdapterContext</span> <span class="token punctuation">{</span></span>
<span class="line">  rawEvent<span class="token operator">:</span> AwsLambdaHttpEvent<span class="token punctuation">;</span></span>
<span class="line">  rawResponse<span class="token operator">?</span><span class="token operator">:</span> RawHttpResponseOptions<span class="token punctuation">;</span></span>
<span class="line">  executionContext<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">  incomingEvent<span class="token operator">?</span><span class="token operator">:</span> IncomingHttpEvent<span class="token punctuation">;</span></span>
<span class="line">  outgoingResponse<span class="token operator">?</span><span class="token operator">:</span> OutgoingHttpResponse<span class="token punctuation">;</span></span>
<span class="line">  incomingEventBuilder<span class="token operator">:</span> IAdapterEventBuilder<span class="token operator">&lt;</span>IncomingHttpEventOptions<span class="token punctuation">,</span> IncomingHttpEvent<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">  rawResponseBuilder<span class="token operator">:</span> IAdapterEventBuilder<span class="token operator">&lt;</span>RawHttpResponseOptions<span class="token punctuation">,</span> IRawResponseWrapper<span class="token operator">&lt;</span>RawHttpResponseOptions<span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="aws-lambda-event" tabindex="-1"><a class="header-anchor" href="#aws-lambda-event"><span>AWS Lambda Event</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AwsLambdaHttpEvent</span> <span class="token keyword">extends</span> <span class="token class-name">Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  path<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  body<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span></span>
<span class="line">  rawPath<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  encoding<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  httpMethod<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  isBase64Encoded<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line">  headers<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span>
<span class="line">  queryStringParameters<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span>
<span class="line">  requestContext<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    identity<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      sourceIp<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    httpMethod<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">    http<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      method<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">      sourceIp<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="aws-lambda-response" tabindex="-1"><a class="header-anchor" href="#aws-lambda-response"><span>AWS Lambda Response</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">RawHttpResponseOptions</span> <span class="token punctuation">{</span></span>
<span class="line">  body<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span></span>
<span class="line">  statusCode<span class="token operator">:</span> <span class="token builtin">number</span></span>
<span class="line">  statusMessage<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span></span>
<span class="line">  headers<span class="token operator">?</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span>
<span class="line">  isBase64Encoded<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This context ensures complete control over request handling and response shaping, even in a FaaS environment.</p><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>The <code>@stone-js/aws-lambda-http-adapter</code> makes your Stone.js app cloud-native, cost-efficient, and Lambda-ready. Embrace the event-driven cloud with minimal effort and maximum architectural clarity.</p><h2 id="learn-more" tabindex="-1"><a class="header-anchor" href="#learn-more"><span>Learn More</span></a></h2><p>This package is part of the Stone.js ecosystem, a modern JavaScript framework built around the Continuum Architecture.</p><p>Explore the full documentation: <a href="https://stonejs.dev" target="_blank" rel="noopener noreferrer">https://stonejs.dev</a></p><h2 id="api-documentation" tabindex="-1"><a class="header-anchor" href="#api-documentation"><span>API documentation</span></a></h2><ul><li><a href="https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/blob/main/docs" target="_blank" rel="noopener noreferrer">API</a></li></ul><h2 id="contributing" tabindex="-1"><a class="header-anchor" href="#contributing"><span>Contributing</span></a></h2><p>See <a href="https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/blob/main/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing Guide</a></p>`,37))])}const h=t(c,[["render",d]]),g=JSON.parse('{"path":"/packages/aws-lambda-http-adapter/","title":"Stone.js - AWS Lambda HTTP Adapter","lang":"en-US","frontmatter":{"description":"Stone.js - AWS Lambda HTTP Adapter npm npm npm Maintenance Build Status Publish Package to npmjs Quality Gate Status Coverage CodeQL Dependabot Status Conventional Commits The A...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Stone.js - AWS Lambda HTTP Adapter\\",\\"image\\":[\\"https://img.shields.io/npm/l/@stone-js/aws-lambda-http-adapter\\",\\"https://img.shields.io/npm/v/@stone-js/aws-lambda-http-adapter\\",\\"https://img.shields.io/npm/dm/@stone-js/aws-lambda-http-adapter\\",\\"https://img.shields.io/maintenance/yes/2025\\",\\"https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/actions/workflows/main.yml/badge.svg\\",\\"https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/actions/workflows/release.yml/badge.svg\\",\\"https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-aws-lambda-http-adapter&metric=alert_status\\",\\"https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-aws-lambda-http-adapter&metric=coverage\\",\\"https://img.shields.io/badge/Security-Policy-blue.svg\\",\\"https://github.com/stone-foundation/stone-js-aws-lambda-http-adapter/actions/workflows/github-code-scanning/codeql/badge.svg\\",\\"https://img.shields.io/badge/Dependabot-enabled-brightgreen.svg\\",\\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/packages/aws-lambda-http-adapter/"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Stone.js - AWS Lambda HTTP Adapter"}],["meta",{"property":"og:description","content":"Stone.js - AWS Lambda HTTP Adapter npm npm npm Maintenance Build Status Publish Package to npmjs Quality Gate Status Coverage CodeQL Dependabot Status Conventional Commits The A..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.shields.io/npm/l/@stone-js/aws-lambda-http-adapter"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":2.86,"words":858},"filePathRelative":"packages/aws-lambda-http-adapter/readme.md","autoDesc":true}');export{h as comp,g as data};
