import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as e,a as n,d as s,e as i,w as p,r as c,o as d}from"./app-CIBZQWs4.js";const l={};function m(u,a){const t=c("RouteLink");return d(),r("div",null,[a[5]||(a[5]=e(`<h1 id="function-command" tabindex="-1"><a class="header-anchor" href="#function-command"><span>Function: Command()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">Command</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> ClassDecorator<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Command decorator to mark a class as a command and automatically bind it to the container.</p><p>This decorator is useful for marking classes that should be treated as commands by the Stone.js framework, making them easily injectable and manageable by the command container.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3><p><code>T</code> <em>extends</em> <code>ClassType</code> = <code>ClassType</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h3>`,9)),n("p",null,[a[1]||(a[1]=n("code",null,"Partial",-1)),a[2]||(a[2]=s("<")),i(t,{to:"/api/node-cli-adapter/decorators/Command/interfaces/CommandOptions.html"},{default:p(()=>a[0]||(a[0]=[n("code",null,"CommandOptions",-1)])),_:1,__:[0]}),a[3]||(a[3]=s("> = ")),a[4]||(a[4]=n("code",null,"{}",-1))]),a[6]||(a[6]=e(`<p>The configuration options for the command, including singleton and alias settings.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>ClassDecorator</code></p><p>A decorator function to set metadata on the target class.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Command</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> alias<span class="token operator">:</span> <span class="token string">&#39;MyCommand&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyCommand</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Command class logic here.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const k=o(l,[["render",m]]),f=JSON.parse('{"path":"/api/node-cli-adapter/decorators/Command/functions/Command.html","title":"Function: Command()","lang":"en-US","frontmatter":{"description":"Function: Command() Command decorator to mark a class as a command and automatically bind it to the container. This decorator is useful for marking classes that should be treate...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: Command()\\",\\"image\\":[\\"/logo.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/node-cli-adapter/decorators/Command/functions/Command.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: Command()"}],["meta",{"property":"og:description","content":"Function: Command() Command decorator to mark a class as a command and automatically bind it to the container. This decorator is useful for marking classes that should be treate..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.33,"words":98},"filePathRelative":"api/node-cli-adapter/decorators/Command/functions/Command.md","autoDesc":true}');export{k as comp,f as data};
