import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as a,a as n,e as i,w as o,r as p,o as c}from"./app-CrbMk51G.js";const d={};function l(m,e){const s=p("RouteLink");return c(),t("div",null,[e[1]||(e[1]=a(`<h1 id="class-commandserviceprovider" tabindex="-1"><a class="header-anchor" href="#class-commandserviceprovider"><span>Class: CommandServiceProvider</span></a></h1><p>Class representing a CommandServiceProvider. Responsible for registering router and application commands.</p><h2 id="author" tabindex="-1"><a class="header-anchor" href="#author"><span>Author</span></a></h2><p>Mr. Stone <a href="mailto:evensstone@gmail.com" target="_blank" rel="noopener noreferrer">evensstone@gmail.com</a></p><h2 id="implements" tabindex="-1"><a class="header-anchor" href="#implements"><span>Implements</span></a></h2><ul><li><code>IServiceProvider</code></li></ul><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">new</span> <span class="token class-name">CommandServiceProvider</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span><span class="token operator">:</span> CommandServiceProvider<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Create a new instance of CommandServiceProvider.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="container" tabindex="-1"><a class="header-anchor" href="#container"><span>container</span></a></h5>`,12)),n("p",null,[i(s,{to:"/api/node-cli-adapter/command/CommandServiceProvider/interfaces/CommandServiceProviderOptions.html"},{default:o(()=>e[0]||(e[0]=[n("code",null,"CommandServiceProviderOptions",-1)])),_:1,__:[0]})]),e[2]||(e[2]=a(`<p>The container instance for dependency resolution.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>CommandServiceProvider</code></p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="mustskip" tabindex="-1"><a class="header-anchor" href="#mustskip"><span>mustSkip()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">mustSkip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Determines if this provider should be skipped. Useful for registering the provider based on platform.</p><h4 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h4><p><code>boolean</code></p><p>True if the provider should be skipped; otherwise, false.</p><h4 id="implementation-of" tabindex="-1"><a class="header-anchor" href="#implementation-of"><span>Implementation of</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">IServiceProvider<span class="token punctuation">.</span>mustSkip</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><hr><h3 id="register" tabindex="-1"><a class="header-anchor" href="#register"><span>register()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Registers router components and application commands in the service container.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>void</code></p><h4 id="implementation-of-1" tabindex="-1"><a class="header-anchor" href="#implementation-of-1"><span>Implementation of</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">IServiceProvider<span class="token punctuation">.</span>register</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,20))])}const v=r(d,[["render",l]]),g=JSON.parse('{"path":"/api/node-cli-adapter/command/CommandServiceProvider/classes/CommandServiceProvider.html","title":"Class: CommandServiceProvider","lang":"en-US","frontmatter":{"description":"Class: CommandServiceProvider Class representing a CommandServiceProvider. Responsible for registering router and application commands. Author Mr. Stone evensstone@gmail.com Imp...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: CommandServiceProvider\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/node-cli-adapter/command/CommandServiceProvider/classes/CommandServiceProvider.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: CommandServiceProvider"}],["meta",{"property":"og:description","content":"Class: CommandServiceProvider Class representing a CommandServiceProvider. Responsible for registering router and application commands. Author Mr. Stone evensstone@gmail.com Imp..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.33,"words":99},"filePathRelative":"api/node-cli-adapter/command/CommandServiceProvider/classes/CommandServiceProvider.md","autoDesc":true}');export{v as comp,g as data};
