import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,a as t,b as l,e as s,w as i,d as n,r as p,o as d}from"./app-B3SZc_3K.js";const m={};function f(u,e){const r=p("RouteLink");return d(),a("div",null,[t("p",null,[s(r,{to:"/api/core/"},{default:i(()=>e[0]||(e[0]=[t("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[18]||(e[18]=t("hr",null,null,-1)),t("p",null,[s(r,{to:"/api/core/"},{default:i(()=>e[1]||(e[1]=[n("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=n(" / ")),s(r,{to:"/api/core/declarations/"},{default:i(()=>e[2]||(e[2]=[n("declarations")])),_:1,__:[2]}),e[4]||(e[4]=n(" / IEventListener"))]),e[19]||(e[19]=l('<h1 id="interface-ieventlistener-tevent" tabindex="-1"><a class="header-anchor" href="#interface-ieventlistener-tevent"><span>Interface: IEventListener&lt;TEvent&gt;</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L477" target="_blank" rel="noopener noreferrer">declarations.ts:477</a></p><p>Interface representing a listener for handling specific events.</p><p>Listeners implementing this interface should define a <code>handle</code> method that is called whenever the associated event occurs.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="tevent" tabindex="-1"><a class="header-anchor" href="#tevent"><span>TEvent</span></a></h3>',6)),t("p",null,[e[7]||(e[7]=t("code",null,"TEvent",-1)),e[8]||(e[8]=n()),e[9]||(e[9]=t("em",null,"extends",-1)),e[10]||(e[10]=n()),s(r,{to:"/api/core/events/Event/classes/Event.html"},{default:i(()=>e[5]||(e[5]=[t("code",null,"Event",-1)])),_:1,__:[5]}),e[11]||(e[11]=n(" = ")),s(r,{to:"/api/core/events/Event/classes/Event.html"},{default:i(()=>e[6]||(e[6]=[t("code",null,"Event",-1)])),_:1,__:[6]})]),e[20]||(e[20]=t("h2",{id:"properties",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#properties"},[t("span",null,"Properties")])],-1)),e[21]||(e[21]=t("h3",{id:"handle",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#handle"},[t("span",null,"handle")])],-1)),t("blockquote",null,[t("p",null,[e[13]||(e[13]=t("strong",null,"handle",-1)),e[14]||(e[14]=n(": ")),s(r,{to:"/api/core/declarations/type-aliases/FunctionalEventListener.html"},{default:i(()=>e[12]||(e[12]=[t("code",null,"FunctionalEventListener",-1)])),_:1,__:[12]}),e[15]||(e[15]=n("<")),e[16]||(e[16]=t("code",null,"TEvent",-1)),e[17]||(e[17]=n(">"))])]),e[22]||(e[22]=t("p",null,[n("Defined in: "),t("a",{href:"https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L483",target:"_blank",rel:"noopener noreferrer"},"declarations.ts:483")],-1)),e[23]||(e[23]=t("p",null,"Handles the event when it occurs. This method contains the logic that runs when the event is triggered.",-1)),e[24]||(e[24]=t("h4",{id:"returns",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns"},[t("span",null,"Returns")])],-1)),e[25]||(e[25]=t("p",null,"The event listener function.",-1))])}const g=o(m,[["render",f]]),E=JSON.parse('{"path":"/api/core/declarations/interfaces/IEventListener.html","title":"Interface: IEventListener<TEvent>","lang":"en-US","frontmatter":{"description":"/ / IEventListener Interface: IEventListener<TEvent> Defined in: declarations.ts:477 Interface representing a listener for handling specific events. Listeners implementing this ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: IEventListener<TEvent>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/declarations/interfaces/IEventListener.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: IEventListener<TEvent>"}],["meta",{"property":"og:description","content":"/ / IEventListener Interface: IEventListener<TEvent> Defined in: declarations.ts:477 Interface representing a listener for handling specific events. Listeners implementing this ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.31,"words":92},"filePathRelative":"api/core/declarations/interfaces/IEventListener.md","autoDesc":true}');export{g as comp,E as data};
