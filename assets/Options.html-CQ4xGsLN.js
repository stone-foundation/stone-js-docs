import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as n,o as t}from"./app-CIBZQWs4.js";const i={};function r(p,a){return t(),s("div",null,a[0]||(a[0]=[n(`<h1 id="interface-options" tabindex="-1"><a class="header-anchor" href="#interface-options"><span>Interface: Options</span></a></h1><p>Options for retrieving environment variables.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="default" tabindex="-1"><a class="header-anchor" href="#default"><span>default?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional <span class="token keyword">default</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The default value if the environment variable is not set.</p><hr><h3 id="enums" tabindex="-1"><a class="header-anchor" href="#enums"><span>enums?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional enums<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>An array of allowed values for enum types.</p><hr><h3 id="format" tabindex="-1"><a class="header-anchor" href="#format"><span>format?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional format<span class="token operator">:</span> <span class="token string">&quot;email&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;host&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;url&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The format of the environment variable if it&#39;s a string. Can be &#39;url&#39;, &#39;host&#39;, or &#39;email&#39;.</p><hr><h3 id="optional" tabindex="-1"><a class="header-anchor" href="#optional"><span>optional?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional optional<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Whether the environment variable is optional.</p><hr><h3 id="protocol" tabindex="-1"><a class="header-anchor" href="#protocol"><span>protocol?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional protocol<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Whether a protocol is required for URLs.</p><hr><h3 id="separator" tabindex="-1"><a class="header-anchor" href="#separator"><span>separator?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional separator<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The separator for parsing array or object values (default is &#39;,&#39;).</p><hr><h3 id="tld" tabindex="-1"><a class="header-anchor" href="#tld"><span>tld?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional tld<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Whether a top-level domain is required for URLs or emails.</p><hr><h3 id="type" tabindex="-1"><a class="header-anchor" href="#type"><span>type?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional type<span class="token operator">:</span> </span>
<span class="line">  <span class="token operator">|</span> <span class="token string">&quot;string&quot;</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token string">&quot;number&quot;</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token string">&quot;boolean&quot;</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token string">&quot;object&quot;</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token string">&quot;array&quot;</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token string">&quot;json&quot;</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token string">&quot;enum&quot;</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token string">&quot;email&quot;</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token string">&quot;host&quot;</span></span>
<span class="line">  <span class="token operator">|</span> <span class="token string">&quot;url&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The type of the environment variable. Can be &#39;number&#39;, &#39;boolean&#39;, &#39;array&#39;, &#39;object&#39;, &#39;json&#39;, &#39;enum&#39;, &#39;email&#39;, &#39;host&#39;, &#39;url&#39;, or &#39;string&#39;.</p>`,34)]))}const c=e(i,[["render",r]]),d=JSON.parse('{"path":"/api/env/declarations/interfaces/Options.html","title":"Interface: Options","lang":"en-US","frontmatter":{"description":"Interface: Options Options for retrieving environment variables. Properties default? The default value if the environment variable is not set. enums? An array of allowed values ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: Options\\",\\"image\\":[\\"/logo.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/env/declarations/interfaces/Options.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: Options"}],["meta",{"property":"og:description","content":"Interface: Options Options for retrieving environment variables. Properties default? The default value if the environment variable is not set. enums? An array of allowed values ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.5,"words":150},"filePathRelative":"api/env/declarations/interfaces/Options.md","autoDesc":true}');export{c as comp,d as data};
