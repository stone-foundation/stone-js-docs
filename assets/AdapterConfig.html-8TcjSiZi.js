import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as o,a as n,d as a,e as s,w as p,r as l,o as d}from"./app-D3YQYQ8j.js";const c={};function u(g,e){const t=l("RouteLink");return d(),i("div",null,[e[21]||(e[21]=o('<h1 id="interface-adapterconfig-raweventtype-rawresponsetype-executioncontexttype-incomingeventtype-incomingeventoptionstype-outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#interface-adapterconfig-raweventtype-rawresponsetype-executioncontexttype-incomingeventtype-incomingeventoptionstype-outgoingresponsetype"><span>Interface: AdapterConfig&lt;RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType&gt;</span></a></h1><p>AdapterConfig Interface.</p><p>This interface defines the configuration options for an adapter within the Stone.js framework. It includes settings for the adapter&#39;s alias, resolver, middleware, and hooks, among other properties. The AdapterConfig allows developers to manage how the adapter behaves and how it integrates with the application.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="raweventtype" tabindex="-1"><a class="header-anchor" href="#raweventtype"><span>RawEventType</span></a></h3><p><code>RawEventType</code> = <code>any</code></p><h3 id="rawresponsetype" tabindex="-1"><a class="header-anchor" href="#rawresponsetype"><span>RawResponseType</span></a></h3><p><code>RawResponseType</code> = <code>any</code></p><h3 id="executioncontexttype" tabindex="-1"><a class="header-anchor" href="#executioncontexttype"><span>ExecutionContextType</span></a></h3><p><code>ExecutionContextType</code> = <code>any</code></p><h3 id="incomingeventtype" tabindex="-1"><a class="header-anchor" href="#incomingeventtype"><span>IncomingEventType</span></a></h3>',11)),n("p",null,[e[2]||(e[2]=n("code",null,"IncomingEventType",-1)),e[3]||(e[3]=a()),e[4]||(e[4]=n("em",null,"extends",-1)),e[5]||(e[5]=a()),s(t,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:p(()=>e[0]||(e[0]=[n("code",null,"IncomingEvent",-1)])),_:1,__:[0]}),e[6]||(e[6]=a(" = ")),s(t,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:p(()=>e[1]||(e[1]=[n("code",null,"IncomingEvent",-1)])),_:1,__:[1]})]),e[22]||(e[22]=n("h3",{id:"incomingeventoptionstype",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#incomingeventoptionstype"},[n("span",null,"IncomingEventOptionsType")])],-1)),n("p",null,[e[9]||(e[9]=n("code",null,"IncomingEventOptionsType",-1)),e[10]||(e[10]=a()),e[11]||(e[11]=n("em",null,"extends",-1)),e[12]||(e[12]=a()),s(t,{to:"/api/core/events/IncomingEvent/interfaces/IncomingEventOptions.html"},{default:p(()=>e[7]||(e[7]=[n("code",null,"IncomingEventOptions",-1)])),_:1,__:[7]}),e[13]||(e[13]=a(" = ")),s(t,{to:"/api/core/events/IncomingEvent/interfaces/IncomingEventOptions.html"},{default:p(()=>e[8]||(e[8]=[n("code",null,"IncomingEventOptions",-1)])),_:1,__:[8]})]),e[23]||(e[23]=n("h3",{id:"outgoingresponsetype",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#outgoingresponsetype"},[n("span",null,"OutgoingResponseType")])],-1)),n("p",null,[e[16]||(e[16]=n("code",null,"OutgoingResponseType",-1)),e[17]||(e[17]=a()),e[18]||(e[18]=n("em",null,"extends",-1)),e[19]||(e[19]=a()),s(t,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:p(()=>e[14]||(e[14]=[n("code",null,"OutgoingResponse",-1)])),_:1,__:[14]}),e[20]||(e[20]=a(" = ")),s(t,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:p(()=>e[15]||(e[15]=[n("code",null,"OutgoingResponse",-1)])),_:1,__:[15]})]),e[24]||(e[24]=o(`<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="alias" tabindex="-1"><a class="header-anchor" href="#alias"><span>alias?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional alias<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The alias name for the adapter. This is a unique identifier used to reference the adapter. Optional property.</p><hr><h3 id="current" tabindex="-1"><a class="header-anchor" href="#current"><span>current?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional current<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The current status identifier for the adapter. Used to indicate if this adapter instance is active or currently in use. Optional property.</p><hr><h3 id="default" tabindex="-1"><a class="header-anchor" href="#default"><span>default?</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">optional <span class="token keyword">default</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines whether this adapter is the default adapter used by the application. Optional property.</p><hr><h3 id="errorhandlers" tabindex="-1"><a class="header-anchor" href="#errorhandlers"><span>errorHandlers</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">errorHandlers<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> MetaAdapterErrorHandler<span class="token operator">&lt;</span>RawEventType<span class="token punctuation">,</span> RawResponseType<span class="token punctuation">,</span> ExecutionContextType<span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Error handlers used to manage and report errors that occur within the adapter. These handlers can be used to customize error handling behavior and logging.</p><hr><h3 id="eventhandlerresolver" tabindex="-1"><a class="header-anchor" href="#eventhandlerresolver"><span>eventHandlerResolver</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">eventHandlerResolver<span class="token operator">:</span> AdapterEventHandlerResolver<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The event handler resolver used to create instances of the event handler.</p><hr><h3 id="middleware" tabindex="-1"><a class="header-anchor" href="#middleware"><span>middleware</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">middleware<span class="token operator">:</span> AdapterMixedPipeType<span class="token operator">&lt;</span>AdapterContext<span class="token operator">&lt;</span>RawEventType<span class="token punctuation">,</span> RawResponseType<span class="token punctuation">,</span> ExecutionContextType<span class="token punctuation">,</span> IncomingEventType<span class="token punctuation">,</span> IncomingEventOptionsType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">,</span> RawResponseType<span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The middleware used for processing incoming or outgoing data in the adapter. Middleware can modify or handle events at different stages of the adapter&#39;s lifecycle.</p><hr><h3 id="platform" tabindex="-1"><a class="header-anchor" href="#platform"><span>platform</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">platform<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The platform identifier for the adapter. This is used to categorize the adapter based on the environment or technology it supports.</p><hr><h3 id="resolver" tabindex="-1"><a class="header-anchor" href="#resolver"><span>resolver</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">resolver<span class="token operator">:</span> AdapterResolver<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The class type resolver used to create instances of the adapter.</p><hr><h3 id="variant" tabindex="-1"><a class="header-anchor" href="#variant"><span>variant</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line">variant<span class="token operator">:</span> <span class="token string">&quot;server&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;browser&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;console&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The class type of the adapter. This is used to identify the category of the adapter.</p>`,36))])}const v=r(c,[["render",u]]),y=JSON.parse('{"path":"/api/core/options/AdapterConfig/interfaces/AdapterConfig.html","title":"Interface: AdapterConfig<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType>","lang":"en-US","frontmatter":{"description":"Interface: AdapterConfig<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType> AdapterConfig Interface. This in...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Interface: AdapterConfig<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/options/AdapterConfig/interfaces/AdapterConfig.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Interface: AdapterConfig<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType>"}],["meta",{"property":"og:description","content":"Interface: AdapterConfig<RawEventType, RawResponseType, ExecutionContextType, IncomingEventType, IncomingEventOptionsType, OutgoingResponseType> AdapterConfig Interface. This in..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":1.03,"words":309},"filePathRelative":"api/core/options/AdapterConfig/interfaces/AdapterConfig.md","autoDesc":true}');export{v as comp,y as data};
