import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,a as e,b as d,e as s,w as r,d as t,r as l,o as i}from"./app-7vCtLRjQ.js";const m={};function u(b,a){const n=l("RouteLink");return i(),p("div",null,[e("p",null,[s(n,{to:"/api/aws-lambda-adapter/"},{default:r(()=>a[0]||(a[0]=[e("strong",null,"AWS Lambda Adapter Documentation v0.0.2",-1)])),_:1,__:[0]})]),a[59]||(a[59]=e("hr",null,null,-1)),e("p",null,[s(n,{to:"/api/aws-lambda-adapter/modules.html"},{default:r(()=>a[1]||(a[1]=[t("AWS Lambda Adapter Documentation")])),_:1,__:[1]}),a[3]||(a[3]=t(" / ")),s(n,{to:"/api/aws-lambda-adapter/AWSLambdaAdapter/"},{default:r(()=>a[2]||(a[2]=[t("AWSLambdaAdapter")])),_:1,__:[2]}),a[4]||(a[4]=t(" / AWSLambdaAdapter"))]),a[60]||(a[60]=d(`<h1 id="class-awslambdaadapter" tabindex="-1"><a class="header-anchor" href="#class-awslambdaadapter"><span>Class: AWSLambdaAdapter</span></a></h1><p>Defined in: <a href="https://github.com/stonemjs/aws-lambda-adapter/blob/9de4b38bb7a5afd4d5599dae1399969698a2422d/src/AWSLambdaAdapter.ts#L40" target="_blank" rel="noopener noreferrer">src/AWSLambdaAdapter.ts:40</a></p><p>AWS Lambda Adapter for Stone.js.</p><p>The <code>AWSLambdaAdapter</code> provides seamless integration between Stone.js applications and the AWS Lambda environment. It processes incoming events from AWS Lambda, transforms them into <code>IncomingEvent</code> instances, and returns a <code>RawResponse</code>.</p><p>This adapter ensures compatibility with AWS Lambda&#39;s execution model and abstracts the event handling process for Stone.js developers.</p><h2 id="template" tabindex="-1"><a class="header-anchor" href="#template"><span>Template</span></a></h2><p>The type of the raw event received from AWS Lambda.</p><h2 id="template-1" tabindex="-1"><a class="header-anchor" href="#template-1"><span>Template</span></a></h2><p>The type of the response to send back to AWS Lambda.</p><h2 id="template-2" tabindex="-1"><a class="header-anchor" href="#template-2"><span>Template</span></a></h2><p>The AWS Lambda execution context type.</p><h2 id="template-3" tabindex="-1"><a class="header-anchor" href="#template-3"><span>Template</span></a></h2><p>The type of the processed incoming event.</p><h2 id="template-4" tabindex="-1"><a class="header-anchor" href="#template-4"><span>Template</span></a></h2><p>Options used to create an incoming event.</p><h2 id="template-5" tabindex="-1"><a class="header-anchor" href="#template-5"><span>Template</span></a></h2><p>The type of the outgoing response after processing.</p><h2 id="template-6" tabindex="-1"><a class="header-anchor" href="#template-6"><span>Template</span></a></h2><p>Context type specific to the adapter.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> AWSLambdaAdapter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/aws-lambda-adapter&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> adapter <span class="token operator">=</span> AWSLambdaAdapter<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token keyword">await</span> adapter<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token punctuation">{</span> handler <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="see" tabindex="-1"><a class="header-anchor" href="#see"><span>See</span></a></h2><ul><li><a href="https://stone-js.com/docs" target="_blank" rel="noopener noreferrer">Stone.js Documentation</a></li><li><a href="https://docs.aws.amazon.com/lambda/" target="_blank" rel="noopener noreferrer">AWS Lambda Documentation</a></li></ul><h2 id="extends" tabindex="-1"><a class="header-anchor" href="#extends"><span>Extends</span></a></h2>`,24)),e("ul",null,[e("li",null,[a[9]||(a[9]=e("code",null,"Adapter",-1)),a[10]||(a[10]=t("<")),s(n,{to:"/api/aws-lambda-adapter/declarations/type-aliases/AwsLambdaEvent.html"},{default:r(()=>a[5]||(a[5]=[e("code",null,"AwsLambdaEvent",-1)])),_:1,__:[5]}),a[11]||(a[11]=t(", ")),s(n,{to:"/api/aws-lambda-adapter/declarations/type-aliases/RawResponse.html"},{default:r(()=>a[6]||(a[6]=[e("code",null,"RawResponse",-1)])),_:1,__:[6]}),a[12]||(a[12]=t(", ")),s(n,{to:"/api/aws-lambda-adapter/declarations/type-aliases/AwsLambdaContext.html"},{default:r(()=>a[7]||(a[7]=[e("code",null,"AwsLambdaContext",-1)])),_:1,__:[7]}),a[13]||(a[13]=t(", ")),a[14]||(a[14]=e("code",null,"IncomingEvent",-1)),a[15]||(a[15]=t(", ")),a[16]||(a[16]=e("code",null,"IncomingEventOptions",-1)),a[17]||(a[17]=t(", ")),a[18]||(a[18]=e("code",null,"OutgoingResponse",-1)),a[19]||(a[19]=t(", ")),s(n,{to:"/api/aws-lambda-adapter/declarations/interfaces/AwsLambdaAdapterContext.html"},{default:r(()=>a[8]||(a[8]=[e("code",null,"AwsLambdaAdapterContext",-1)])),_:1,__:[8]}),a[20]||(a[20]=t(">"))])]),a[61]||(a[61]=e("h2",{id:"constructors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#constructors"},[e("span",null,"Constructors")])],-1)),a[62]||(a[62]=e("h3",{id:"new-awslambdaadapter",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#new-awslambdaadapter"},[e("span",null,"new AWSLambdaAdapter()")])],-1)),e("blockquote",null,[e("p",null,[a[22]||(a[22]=e("code",null,"protected",-1)),a[23]||(a[23]=t()),a[24]||(a[24]=e("strong",null,"new AWSLambdaAdapter",-1)),a[25]||(a[25]=t("(")),a[26]||(a[26]=e("code",null,"options",-1)),a[27]||(a[27]=t("): ")),s(n,{to:"/api/aws-lambda-adapter/AWSLambdaAdapter/classes/AWSLambdaAdapter.html"},{default:r(()=>a[21]||(a[21]=[e("code",null,"AWSLambdaAdapter",-1)])),_:1,__:[21]})])]),a[63]||(a[63]=d('<p>Defined in: node_modules/@stone-js/core/dist/index.d.ts:1876</p><p>Create an Adapter.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5><p><code>AdapterOptions</code>&lt;<code>IncomingEvent</code>, <code>OutgoingResponse</code>&gt;</p><p>Adapter options.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4>',7)),e("p",null,[s(n,{to:"/api/aws-lambda-adapter/AWSLambdaAdapter/classes/AWSLambdaAdapter.html"},{default:r(()=>a[28]||(a[28]=[e("code",null,"AWSLambdaAdapter",-1)])),_:1,__:[28]})]),a[64]||(a[64]=d('<h4 id="inherited-from" tabindex="-1"><a class="header-anchor" href="#inherited-from"><span>Inherited from</span></a></h4><p><code>Adapter&lt; AwsLambdaEvent, RawResponse, AwsLambdaContext, IncomingEvent, IncomingEventOptions, OutgoingResponse, AwsLambdaAdapterContext &gt;.constructor</code></p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="eventlistener" tabindex="-1"><a class="header-anchor" href="#eventlistener"><span>eventListener()</span></a></h3>',4)),e("blockquote",null,[e("p",null,[a[30]||(a[30]=e("code",null,"protected",-1)),a[31]||(a[31]=t()),a[32]||(a[32]=e("strong",null,"eventListener",-1)),a[33]||(a[33]=t("(")),a[34]||(a[34]=e("code",null,"rawEvent",-1)),a[35]||(a[35]=t(", ")),a[36]||(a[36]=e("code",null,"executionContext",-1)),a[37]||(a[37]=t("): ")),a[38]||(a[38]=e("code",null,"Promise",-1)),a[39]||(a[39]=t("<")),s(n,{to:"/api/aws-lambda-adapter/declarations/type-aliases/RawResponse.html"},{default:r(()=>a[29]||(a[29]=[e("code",null,"RawResponse",-1)])),_:1,__:[29]}),a[40]||(a[40]=t(">"))])]),a[65]||(a[65]=d('<p>Defined in: <a href="https://github.com/stonemjs/aws-lambda-adapter/blob/9de4b38bb7a5afd4d5599dae1399969698a2422d/src/AWSLambdaAdapter.ts#L113" target="_blank" rel="noopener noreferrer">src/AWSLambdaAdapter.ts:113</a></p><p>Processes an incoming AWS Lambda event.</p><p>This method transforms the raw AWS Lambda event into a Stone.js <code>IncomingEvent</code>, processes it through the pipeline, and generates a <code>RawResponse</code> to send back.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="rawevent" tabindex="-1"><a class="header-anchor" href="#rawevent"><span>rawEvent</span></a></h5>',5)),e("p",null,[s(n,{to:"/api/aws-lambda-adapter/declarations/type-aliases/AwsLambdaEvent.html"},{default:r(()=>a[41]||(a[41]=[e("code",null,"AwsLambdaEvent",-1)])),_:1,__:[41]})]),a[66]||(a[66]=e("p",null,"The raw AWS Lambda event to be processed.",-1)),a[67]||(a[67]=e("h5",{id:"executioncontext",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#executioncontext"},[e("span",null,"executionContext")])],-1)),e("p",null,[s(n,{to:"/api/aws-lambda-adapter/declarations/type-aliases/AwsLambdaContext.html"},{default:r(()=>a[42]||(a[42]=[e("code",null,"AwsLambdaContext",-1)])),_:1,__:[42]})]),a[68]||(a[68]=e("p",null,"The AWS Lambda execution context for the event.",-1)),a[69]||(a[69]=e("h4",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1"},[e("span",null,"Returns")])],-1)),e("p",null,[a[44]||(a[44]=e("code",null,"Promise",-1)),a[45]||(a[45]=t("<")),s(n,{to:"/api/aws-lambda-adapter/declarations/type-aliases/RawResponse.html"},{default:r(()=>a[43]||(a[43]=[e("code",null,"RawResponse",-1)])),_:1,__:[43]}),a[46]||(a[46]=t(">"))]),a[70]||(a[70]=d('<p>A promise resolving to the processed <code>RawResponse</code>.</p><hr><h3 id="oninit" tabindex="-1"><a class="header-anchor" href="#oninit"><span>onInit()</span></a></h3><blockquote><p><code>protected</code> <strong>onInit</strong>(): <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/aws-lambda-adapter/blob/9de4b38bb7a5afd4d5599dae1399969698a2422d/src/AWSLambdaAdapter.ts#L93" target="_blank" rel="noopener noreferrer">src/AWSLambdaAdapter.ts:93</a></p><p>Initializes the adapter and validates its execution context.</p><p>Ensures the adapter is running in an AWS Lambda environment. If not, it throws an error to prevent misuse.</p><h4 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h4 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h4><p>If executed outside an AWS Lambda context (e.g., browser).</p><h4 id="overrides" tabindex="-1"><a class="header-anchor" href="#overrides"><span>Overrides</span></a></h4><p><code>Adapter.onInit</code></p><hr><h3 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span>run()</span></a></h3><blockquote><p><strong>run</strong>&lt;<code>ExecutionResultType</code>&gt;(): <code>Promise</code>&lt;<code>ExecutionResultType</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/aws-lambda-adapter/blob/9de4b38bb7a5afd4d5599dae1399969698a2422d/src/AWSLambdaAdapter.ts#L75" target="_blank" rel="noopener noreferrer">src/AWSLambdaAdapter.ts:75</a></p><p>Executes the adapter and provides an AWS Lambda-compatible handler function.</p><p>The <code>run</code> method initializes the adapter and returns a handler function that AWS Lambda can invoke. This handler processes events, manages context, and returns the appropriate response.</p><h4 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h4>',20)),e("p",null,[a[48]||(a[48]=t("• ")),a[49]||(a[49]=e("strong",null,"ExecutionResultType",-1)),a[50]||(a[50]=t(" = ")),s(n,{to:"/api/aws-lambda-adapter/declarations/type-aliases/AwsLambdaEventHandlerFunction.html"},{default:r(()=>a[47]||(a[47]=[e("code",null,"AwsLambdaEventHandlerFunction",-1)])),_:1,__:[47]})]),a[71]||(a[71]=d('<p>The type representing the AWS Lambda event handler function.</p><h4 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>ExecutionResultType</code>&gt;</p><p>A promise resolving to the AWS Lambda handler function.</p><h4 id="throws-1" tabindex="-1"><a class="header-anchor" href="#throws-1"><span>Throws</span></a></h4><p>If used outside the AWS Lambda environment.</p><h4 id="overrides-1" tabindex="-1"><a class="header-anchor" href="#overrides-1"><span>Overrides</span></a></h4><p><code>Adapter.run</code></p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3>',10)),e("blockquote",null,[e("p",null,[a[52]||(a[52]=e("code",null,"static",-1)),a[53]||(a[53]=t()),a[54]||(a[54]=e("strong",null,"create",-1)),a[55]||(a[55]=t("(")),a[56]||(a[56]=e("code",null,"options",-1)),a[57]||(a[57]=t("): ")),s(n,{to:"/api/aws-lambda-adapter/AWSLambdaAdapter/classes/AWSLambdaAdapter.html"},{default:r(()=>a[51]||(a[51]=[e("code",null,"AWSLambdaAdapter",-1)])),_:1,__:[51]})])]),a[72]||(a[72]=d('<p>Defined in: <a href="https://github.com/stonemjs/aws-lambda-adapter/blob/9de4b38bb7a5afd4d5599dae1399969698a2422d/src/AWSLambdaAdapter.ts#L60" target="_blank" rel="noopener noreferrer">src/AWSLambdaAdapter.ts:60</a></p><p>Creates an instance of the <code>AWSLambdaAdapter</code>.</p><p>This factory method allows developers to instantiate the adapter with the necessary configuration options, ensuring it is correctly set up for AWS Lambda usage.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1"><span>options</span></a></h5><p><code>AdapterOptions</code>&lt;<code>IncomingEvent</code>, <code>OutgoingResponse</code>&gt;</p><p>The configuration options for the adapter, including handler resolver, error handling, and other settings.</p><h4 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h4>',8)),e("p",null,[s(n,{to:"/api/aws-lambda-adapter/AWSLambdaAdapter/classes/AWSLambdaAdapter.html"},{default:r(()=>a[58]||(a[58]=[e("code",null,"AWSLambdaAdapter",-1)])),_:1,__:[58]})]),a[73]||(a[73]=e("p",null,[t("A fully initialized "),e("code",null,"AWSLambdaAdapter"),t(" instance.")],-1))])}const f=o(m,[["render",u]]),c=JSON.parse('{"path":"/api/aws-lambda-adapter/AWSLambdaAdapter/classes/AWSLambdaAdapter.html","title":"Class: AWSLambdaAdapter","lang":"en-US","frontmatter":{"description":"/ / AWSLambdaAdapter Class: AWSLambdaAdapter Defined in: src/AWSLambdaAdapter.ts:40 AWS Lambda Adapter for Stone.js. The AWSLambdaAdapter provides seamless integration between S...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: AWSLambdaAdapter\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/aws-lambda-adapter/AWSLambdaAdapter/classes/AWSLambdaAdapter.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: AWSLambdaAdapter"}],["meta",{"property":"og:description","content":"/ / AWSLambdaAdapter Class: AWSLambdaAdapter Defined in: src/AWSLambdaAdapter.ts:40 AWS Lambda Adapter for Stone.js. The AWSLambdaAdapter provides seamless integration between S..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":1.78,"words":534},"filePathRelative":"api/aws-lambda-adapter/AWSLambdaAdapter/classes/AWSLambdaAdapter.md","autoDesc":true}');export{f as comp,c as data};
