import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as l,a as e,d as s,e as t,w as p,r,o as u}from"./app-CrbMk51G.js";const d={};function c(m,n){const a=r("RouteLink");return u(),o("div",null,[n[54]||(n[54]=l(`<h1 id="function-defineeventlistener" tabindex="-1"><a class="header-anchor" href="#function-defineeventlistener"><span>Function: defineEventListener()</span></a></h1><p>Defines an event listener (function, class, or factory) for a specific event type.</p><p>This utility supports functional, factory, and class-based listeners and injects the appropriate metadata into the blueprint. The event name must be provided in <code>options.event</code>.</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The listener implementation (function, class, or factory).</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>Listener options including event name and factory flag.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">defineEventListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> event<span class="token operator">:</span> <span class="token string">&#39;user.created&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineEventListener</span><span class="token generic class-name"><span class="token operator">&lt;</span>TEvent<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StoneBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a function-based event listener.</p><h3 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h3><h4 id="tevent" tabindex="-1"><a class="header-anchor" href="#tevent"><span>TEvent</span></a></h4>`,14)),e("p",null,[n[2]||(n[2]=e("code",null,"TEvent",-1)),n[3]||(n[3]=s()),n[4]||(n[4]=e("em",null,"extends",-1)),n[5]||(n[5]=s()),t(a,{to:"/api/core/events/Event/classes/Event.html"},{default:p(()=>n[0]||(n[0]=[e("code",null,"Event",-1)])),_:1,__:[0]}),n[6]||(n[6]=s(" = ")),t(a,{to:"/api/core/events/Event/classes/Event.html"},{default:p(()=>n[1]||(n[1]=[e("code",null,"Event",-1)])),_:1,__:[1]})]),n[55]||(n[55]=e("h3",{id:"parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters"},[e("span",null,"Parameters")])],-1)),n[56]||(n[56]=e("h4",{id:"module",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module"},[e("span",null,"module")])],-1)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/FunctionalEventListener.html"},{default:p(()=>n[7]||(n[7]=[e("code",null,"FunctionalEventListener",-1)])),_:1,__:[7]}),n[8]||(n[8]=s("<")),n[9]||(n[9]=e("code",null,"TEvent",-1)),n[10]||(n[10]=s(">"))]),n[57]||(n[57]=e("p",null,"The listener function to be registered.",-1)),n[58]||(n[58]=e("h4",{id:"options",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#options"},[e("span",null,"options")])],-1)),e("p",null,[t(a,{to:"/api/core/declarations/interfaces/ListenerOptions.html"},{default:p(()=>n[11]||(n[11]=[e("code",null,"ListenerOptions",-1)])),_:1,__:[11]}),n[12]||(n[12]=s(" & ")),n[13]||(n[13]=e("code",null,"object",-1))]),n[59]||(n[59]=e("p",null,"Listener options including event name.",-1)),n[60]||(n[60]=e("h3",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns"},[e("span",null,"Returns")])],-1)),e("p",null,[n[15]||(n[15]=e("code",null,"Partial",-1)),n[16]||(n[16]=s("<")),t(a,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:p(()=>n[14]||(n[14]=[e("code",null,"StoneBlueprint",-1)])),_:1,__:[14]}),n[17]||(n[17]=s(">"))]),n[61]||(n[61]=l(`<p>A partial StoneBlueprint with the listener metadata injected.</p><h3 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h3><p>The listener implementation (function, class, or factory).</p><h3 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h3><p>Listener options including event name and factory flag.</p><h3 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">defineEventListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> event<span class="token operator">:</span> <span class="token string">&#39;user.created&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineEventListener</span><span class="token generic class-name"><span class="token operator">&lt;</span>TEvent<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StoneBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a factory-based event listener.</p><h3 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h3><h4 id="tevent-1" tabindex="-1"><a class="header-anchor" href="#tevent-1"><span>TEvent</span></a></h4>`,12)),e("p",null,[n[20]||(n[20]=e("code",null,"TEvent",-1)),n[21]||(n[21]=s()),n[22]||(n[22]=e("em",null,"extends",-1)),n[23]||(n[23]=s()),t(a,{to:"/api/core/events/Event/classes/Event.html"},{default:p(()=>n[18]||(n[18]=[e("code",null,"Event",-1)])),_:1,__:[18]}),n[24]||(n[24]=s(" = ")),t(a,{to:"/api/core/events/Event/classes/Event.html"},{default:p(()=>n[19]||(n[19]=[e("code",null,"Event",-1)])),_:1,__:[19]})]),n[62]||(n[62]=e("h3",{id:"parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-1"},[e("span",null,"Parameters")])],-1)),n[63]||(n[63]=e("h4",{id:"module-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module-1"},[e("span",null,"module")])],-1)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/FactoryEventListener.html"},{default:p(()=>n[25]||(n[25]=[e("code",null,"FactoryEventListener",-1)])),_:1,__:[25]}),n[26]||(n[26]=s("<")),n[27]||(n[27]=e("code",null,"TEvent",-1)),n[28]||(n[28]=s(">"))]),n[64]||(n[64]=e("p",null,"A factory that returns a listener function.",-1)),n[65]||(n[65]=e("h4",{id:"options-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#options-1"},[e("span",null,"options")])],-1)),e("p",null,[t(a,{to:"/api/core/declarations/interfaces/ListenerOptions.html"},{default:p(()=>n[29]||(n[29]=[e("code",null,"ListenerOptions",-1)])),_:1,__:[29]}),n[30]||(n[30]=s(" & ")),n[31]||(n[31]=e("code",null,"object",-1))]),n[66]||(n[66]=e("p",null,"Listener options including event name.",-1)),n[67]||(n[67]=e("h3",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1"},[e("span",null,"Returns")])],-1)),e("p",null,[n[33]||(n[33]=e("code",null,"Partial",-1)),n[34]||(n[34]=s("<")),t(a,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:p(()=>n[32]||(n[32]=[e("code",null,"StoneBlueprint",-1)])),_:1,__:[32]}),n[35]||(n[35]=s(">"))]),n[68]||(n[68]=l(`<p>A partial StoneBlueprint with the listener metadata injected.</p><h3 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h3><p>The listener implementation (function, class, or factory).</p><h3 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h3><p>Listener options including event name and factory flag.</p><h3 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2"><span>Example</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">defineEventListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> event<span class="token operator">:</span> <span class="token string">&#39;user.created&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="call-signature-2" tabindex="-1"><a class="header-anchor" href="#call-signature-2"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineEventListener</span><span class="token generic class-name"><span class="token operator">&lt;</span>TEvent<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StoneBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a class-based event listener.</p><h3 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h3><h4 id="tevent-2" tabindex="-1"><a class="header-anchor" href="#tevent-2"><span>TEvent</span></a></h4>`,12)),e("p",null,[n[38]||(n[38]=e("code",null,"TEvent",-1)),n[39]||(n[39]=s()),n[40]||(n[40]=e("em",null,"extends",-1)),n[41]||(n[41]=s()),t(a,{to:"/api/core/events/Event/classes/Event.html"},{default:p(()=>n[36]||(n[36]=[e("code",null,"Event",-1)])),_:1,__:[36]}),n[42]||(n[42]=s(" = ")),t(a,{to:"/api/core/events/Event/classes/Event.html"},{default:p(()=>n[37]||(n[37]=[e("code",null,"Event",-1)])),_:1,__:[37]})]),n[69]||(n[69]=e("h3",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2"},[e("span",null,"Parameters")])],-1)),n[70]||(n[70]=e("h4",{id:"module-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module-2"},[e("span",null,"module")])],-1)),e("p",null,[t(a,{to:"/api/core/declarations/type-aliases/IEventListenerClass.html"},{default:p(()=>n[43]||(n[43]=[e("code",null,"IEventListenerClass",-1)])),_:1,__:[43]}),n[44]||(n[44]=s("<")),n[45]||(n[45]=e("code",null,"TEvent",-1)),n[46]||(n[46]=s(">"))]),n[71]||(n[71]=e("p",null,[s("A class with a "),e("code",null,"handle"),s(" method.")],-1)),n[72]||(n[72]=e("h4",{id:"options-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#options-2"},[e("span",null,"options")])],-1)),e("p",null,[t(a,{to:"/api/core/declarations/interfaces/ListenerOptions.html"},{default:p(()=>n[47]||(n[47]=[e("code",null,"ListenerOptions",-1)])),_:1,__:[47]}),n[48]||(n[48]=s(" & ")),n[49]||(n[49]=e("code",null,"object",-1))]),n[73]||(n[73]=e("p",null,"Listener options including event name.",-1)),n[74]||(n[74]=e("h3",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2"},[e("span",null,"Returns")])],-1)),e("p",null,[n[51]||(n[51]=e("code",null,"Partial",-1)),n[52]||(n[52]=s("<")),t(a,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:p(()=>n[50]||(n[50]=[e("code",null,"StoneBlueprint",-1)])),_:1,__:[50]}),n[53]||(n[53]=s(">"))]),n[75]||(n[75]=l(`<p>A partial StoneBlueprint with the listener metadata injected.</p><h3 id="param-6" tabindex="-1"><a class="header-anchor" href="#param-6"><span>Param</span></a></h3><p>The listener implementation (function, class, or factory).</p><h3 id="param-7" tabindex="-1"><a class="header-anchor" href="#param-7"><span>Param</span></a></h3><p>Listener options including event name and factory flag.</p><h3 id="example-3" tabindex="-1"><a class="header-anchor" href="#example-3"><span>Example</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">defineEventListener</span><span class="token punctuation">(</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> event<span class="token operator">:</span> <span class="token string">&#39;user.created&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,7))])}const k=i(d,[["render",c]]),g=JSON.parse('{"path":"/api/core/blueprint/KernelUtils/functions/defineEventListener.html","title":"Function: defineEventListener()","lang":"en-US","frontmatter":{"description":"Function: defineEventListener() Defines an event listener (function, class, or factory) for a specific event type. This utility supports functional, factory, and class-based lis...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: defineEventListener()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/blueprint/KernelUtils/functions/defineEventListener.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: defineEventListener()"}],["meta",{"property":"og:description","content":"Function: defineEventListener() Defines an event listener (function, class, or factory) for a specific event type. This utility supports functional, factory, and class-based lis..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":1.07,"words":320},"filePathRelative":"api/core/blueprint/KernelUtils/functions/defineEventListener.md","autoDesc":true}');export{k as comp,g as data};
