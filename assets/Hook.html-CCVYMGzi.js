import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,a as o,b as r,e as t,w as n,d as s,r as i,o as l}from"./app-C80Pz9_H.js";const d={};function m(u,e){const a=i("RouteLink");return l(),c("div",null,[o("p",null,[t(a,{to:"/api/core/"},{default:n(()=>e[0]||(e[0]=[o("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[6]||(e[6]=o("hr",null,null,-1)),o("p",null,[t(a,{to:"/api/core/"},{default:n(()=>e[1]||(e[1]=[s("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=s(" / ")),t(a,{to:"/api/core/decorators/Hook/"},{default:n(()=>e[2]||(e[2]=[s("decorators/Hook")])),_:1,__:[2]}),e[4]||(e[4]=s(" / Hook"))]),e[7]||(e[7]=r('<h1 id="function-hook" tabindex="-1"><a class="header-anchor" href="#function-hook"><span>Function: Hook()</span></a></h1><blockquote><p><strong>Hook</strong>&lt;<code>T</code>&gt;(<code>name</code>): <code>MethodDecorator</code></p></blockquote><p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/decorators/Hook.ts#L21" target="_blank" rel="noopener noreferrer">decorators/Hook.ts:21</a></p><p>Hook decorator to mark a method as a lifecycle hook And automatically add it to the global lifecycle hook registry.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3><p><code>T</code> <em>extends</em> <code>Function</code> = <code>Function</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h3>',9)),o("p",null,[t(a,{to:"/api/core/declarations/type-aliases/HookName.html"},{default:n(()=>e[5]||(e[5]=[o("code",null,"HookName",-1)])),_:1,__:[5]})]),e[8]||(e[8]=r(`<p>The name of the lifecycle hook.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>MethodDecorator</code></p><p>A class decorator function that sets the metadata using the provided options.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">class</span> <span class="token class-name">MyClass</span> <span class="token punctuation">{</span></span>
<span class="line">   <span class="token comment">// ...</span></span>
<span class="line">   <span class="token decorator"><span class="token at operator">@</span><span class="token function">Hook</span></span><span class="token punctuation">(</span><span class="token string">&#39;onStart&#39;</span><span class="token punctuation">)</span></span>
<span class="line">   <span class="token function">onStart</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const f=p(d,[["render",m]]),g=JSON.parse('{"path":"/api/core/decorators/Hook/functions/Hook.html","title":"Function: Hook()","lang":"en-US","frontmatter":{"description":"/ / Hook Function: Hook() Hook<T>(name): MethodDecorator Defined in: decorators/Hook.ts:21 Hook decorator to mark a method as a lifecycle hook And automatically add it to the gl...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: Hook()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/decorators/Hook/functions/Hook.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: Hook()"}],["meta",{"property":"og:description","content":"/ / Hook Function: Hook() Hook<T>(name): MethodDecorator Defined in: decorators/Hook.ts:21 Hook decorator to mark a method as a lifecycle hook And automatically add it to the gl..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.28,"words":85},"filePathRelative":"api/core/decorators/Hook/functions/Hook.md","autoDesc":true}');export{f as comp,g as data};
