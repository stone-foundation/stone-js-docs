import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as o,a as e,d as a,e as r,w as t,r as i,o as d}from"./app-CIBZQWs4.js";const u={};function m(f,n){const s=i("RouteLink");return d(),p("div",null,[n[75]||(n[75]=o(`<h1 id="function-defineerrorhandler" tabindex="-1"><a class="header-anchor" href="#function-defineerrorhandler"><span>Function: defineErrorHandler()</span></a></h1><p>Registers a kernel-level error handler in the blueprint.</p><p>This utility defines a structured error handler (function, factory, or class) for one or more error types, and adds it to the <code>stone.kernel.errorHandlers</code> blueprint section.</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The error handler module (function, factory, or class).</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>Metadata defining the error types it handles, and type flags.</p><h2 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineErrorHandler</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StoneBlueprint<span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a function-based error handler.</p><h3 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h3><h4 id="u" tabindex="-1"><a class="header-anchor" href="#u"><span>U</span></a></h4>`,12)),e("p",null,[n[2]||(n[2]=e("code",null,"U",-1)),n[3]||(n[3]=a()),n[4]||(n[4]=e("em",null,"extends",-1)),n[5]||(n[5]=a()),r(s,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:t(()=>n[0]||(n[0]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[0]}),n[6]||(n[6]=a(" = ")),r(s,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:t(()=>n[1]||(n[1]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[1]})]),n[76]||(n[76]=e("h4",{id:"v",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#v"},[e("span",null,"V")])],-1)),e("p",null,[n[8]||(n[8]=e("code",null,"V",-1)),n[9]||(n[9]=a(" = ")),r(s,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:t(()=>n[7]||(n[7]=[e("code",null,"OutgoingResponse",-1)])),_:1,__:[7]})]),n[77]||(n[77]=e("h3",{id:"parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters"},[e("span",null,"Parameters")])],-1)),n[78]||(n[78]=e("h4",{id:"module",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module"},[e("span",null,"module")])],-1)),e("p",null,[r(s,{to:"/api/core/declarations/type-aliases/FunctionalErrorHandler.html"},{default:t(()=>n[10]||(n[10]=[e("code",null,"FunctionalErrorHandler",-1)])),_:1,__:[10]}),n[11]||(n[11]=a("<")),n[12]||(n[12]=e("code",null,"U",-1)),n[13]||(n[13]=a(", ")),n[14]||(n[14]=e("code",null,"V",-1)),n[15]||(n[15]=a(">"))]),n[79]||(n[79]=e("p",null,"The error handler function.",-1)),n[80]||(n[80]=e("h4",{id:"options",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#options"},[e("span",null,"options")])],-1)),e("p",null,[r(s,{to:"/api/core/declarations/interfaces/ErrorHandlerOptions.html"},{default:t(()=>n[16]||(n[16]=[e("code",null,"ErrorHandlerOptions",-1)])),_:1,__:[16]}),n[17]||(n[17]=a(" & ")),n[18]||(n[18]=e("code",null,"object",-1))]),n[81]||(n[81]=e("p",null,"The error types and metadata.",-1)),n[82]||(n[82]=e("h3",{id:"returns",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns"},[e("span",null,"Returns")])],-1)),e("p",null,[n[20]||(n[20]=e("code",null,"Partial",-1)),n[21]||(n[21]=a("<")),r(s,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:t(()=>n[19]||(n[19]=[e("code",null,"StoneBlueprint",-1)])),_:1,__:[19]}),n[22]||(n[22]=a("<")),n[23]||(n[23]=e("code",null,"U",-1)),n[24]||(n[24]=a(">>"))]),n[83]||(n[83]=o(`<p>A partial StoneBlueprint with the error handler(s) registered.</p><h3 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h3><p>The error handler module (function, factory, or class).</p><h3 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h3><p>Metadata defining the error types it handles, and type flags.</p><h2 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineErrorHandler</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StoneBlueprint<span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a factory-based error handler.</p><h3 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h3><h4 id="u-1" tabindex="-1"><a class="header-anchor" href="#u-1"><span>U</span></a></h4>`,10)),e("p",null,[n[27]||(n[27]=e("code",null,"U",-1)),n[28]||(n[28]=a()),n[29]||(n[29]=e("em",null,"extends",-1)),n[30]||(n[30]=a()),r(s,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:t(()=>n[25]||(n[25]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[25]}),n[31]||(n[31]=a(" = ")),r(s,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:t(()=>n[26]||(n[26]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[26]})]),n[84]||(n[84]=e("h4",{id:"v-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#v-1"},[e("span",null,"V")])],-1)),e("p",null,[n[33]||(n[33]=e("code",null,"V",-1)),n[34]||(n[34]=a(" = ")),r(s,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:t(()=>n[32]||(n[32]=[e("code",null,"OutgoingResponse",-1)])),_:1,__:[32]})]),n[85]||(n[85]=e("h3",{id:"parameters-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-1"},[e("span",null,"Parameters")])],-1)),n[86]||(n[86]=e("h4",{id:"module-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module-1"},[e("span",null,"module")])],-1)),e("p",null,[r(s,{to:"/api/core/declarations/type-aliases/FactoryErrorHandler.html"},{default:t(()=>n[35]||(n[35]=[e("code",null,"FactoryErrorHandler",-1)])),_:1,__:[35]}),n[36]||(n[36]=a("<")),n[37]||(n[37]=e("code",null,"U",-1)),n[38]||(n[38]=a(", ")),n[39]||(n[39]=e("code",null,"V",-1)),n[40]||(n[40]=a(">"))]),n[87]||(n[87]=e("p",null,"The factory function that returns an error handler.",-1)),n[88]||(n[88]=e("h4",{id:"options-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#options-1"},[e("span",null,"options")])],-1)),e("p",null,[r(s,{to:"/api/core/declarations/interfaces/ErrorHandlerOptions.html"},{default:t(()=>n[41]||(n[41]=[e("code",null,"ErrorHandlerOptions",-1)])),_:1,__:[41]}),n[42]||(n[42]=a(" & ")),n[43]||(n[43]=e("code",null,"object",-1))]),n[89]||(n[89]=e("p",null,"The error types and metadata.",-1)),n[90]||(n[90]=e("h3",{id:"returns-1",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-1"},[e("span",null,"Returns")])],-1)),e("p",null,[n[45]||(n[45]=e("code",null,"Partial",-1)),n[46]||(n[46]=a("<")),r(s,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:t(()=>n[44]||(n[44]=[e("code",null,"StoneBlueprint",-1)])),_:1,__:[44]}),n[47]||(n[47]=a("<")),n[48]||(n[48]=e("code",null,"U",-1)),n[49]||(n[49]=a(">>"))]),n[91]||(n[91]=o(`<p>A partial StoneBlueprint with the error handler(s) registered.</p><h3 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h3><p>The error handler module (function, factory, or class).</p><h3 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h3><p>Metadata defining the error types it handles, and type flags.</p><h2 id="call-signature-2" tabindex="-1"><a class="header-anchor" href="#call-signature-2"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineErrorHandler</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">U</span><span class="token punctuation">,</span> <span class="token constant">V</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StoneBlueprint<span class="token operator">&lt;</span><span class="token constant">U</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a class-based error handler.</p><h3 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h3><h4 id="u-2" tabindex="-1"><a class="header-anchor" href="#u-2"><span>U</span></a></h4>`,10)),e("p",null,[n[52]||(n[52]=e("code",null,"U",-1)),n[53]||(n[53]=a()),n[54]||(n[54]=e("em",null,"extends",-1)),n[55]||(n[55]=a()),r(s,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:t(()=>n[50]||(n[50]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[50]}),n[56]||(n[56]=a(" = ")),r(s,{to:"/api/core/events/IncomingEvent/classes/IncomingEvent.html"},{default:t(()=>n[51]||(n[51]=[e("code",null,"IncomingEvent",-1)])),_:1,__:[51]})]),n[92]||(n[92]=e("h4",{id:"v-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#v-2"},[e("span",null,"V")])],-1)),e("p",null,[n[58]||(n[58]=e("code",null,"V",-1)),n[59]||(n[59]=a(" = ")),r(s,{to:"/api/core/events/OutgoingResponse/classes/OutgoingResponse.html"},{default:t(()=>n[57]||(n[57]=[e("code",null,"OutgoingResponse",-1)])),_:1,__:[57]})]),n[93]||(n[93]=e("h3",{id:"parameters-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters-2"},[e("span",null,"Parameters")])],-1)),n[94]||(n[94]=e("h4",{id:"module-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#module-2"},[e("span",null,"module")])],-1)),e("p",null,[r(s,{to:"/api/core/declarations/type-aliases/IErrorHandlerClass.html"},{default:t(()=>n[60]||(n[60]=[e("code",null,"IErrorHandlerClass",-1)])),_:1,__:[60]}),n[61]||(n[61]=a("<")),n[62]||(n[62]=e("code",null,"U",-1)),n[63]||(n[63]=a(", ")),n[64]||(n[64]=e("code",null,"V",-1)),n[65]||(n[65]=a(">"))]),n[95]||(n[95]=e("p",null,"The error handler class.",-1)),n[96]||(n[96]=e("h4",{id:"options-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#options-2"},[e("span",null,"options")])],-1)),e("p",null,[r(s,{to:"/api/core/declarations/interfaces/ErrorHandlerOptions.html"},{default:t(()=>n[66]||(n[66]=[e("code",null,"ErrorHandlerOptions",-1)])),_:1,__:[66]}),n[67]||(n[67]=a(" & ")),n[68]||(n[68]=e("code",null,"object",-1))]),n[97]||(n[97]=e("p",null,"The error types and metadata.",-1)),n[98]||(n[98]=e("h3",{id:"returns-2",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#returns-2"},[e("span",null,"Returns")])],-1)),e("p",null,[n[70]||(n[70]=e("code",null,"Partial",-1)),n[71]||(n[71]=a("<")),r(s,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:t(()=>n[69]||(n[69]=[e("code",null,"StoneBlueprint",-1)])),_:1,__:[69]}),n[72]||(n[72]=a("<")),n[73]||(n[73]=e("code",null,"U",-1)),n[74]||(n[74]=a(">>"))]),n[99]||(n[99]=e("p",null,"A partial StoneBlueprint with the error handler(s) registered.",-1)),n[100]||(n[100]=e("h3",{id:"param-6",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#param-6"},[e("span",null,"Param")])],-1)),n[101]||(n[101]=e("p",null,"The error handler module (function, factory, or class).",-1)),n[102]||(n[102]=e("h3",{id:"param-7",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#param-7"},[e("span",null,"Param")])],-1)),n[103]||(n[103]=e("p",null,"Metadata defining the error types it handles, and type flags.",-1))])}const y=l(u,[["render",m]]),b=JSON.parse('{"path":"/api/core/blueprint/KernelUtils/functions/defineErrorHandler.html","title":"Function: defineErrorHandler()","lang":"en-US","frontmatter":{"description":"Function: defineErrorHandler() Registers a kernel-level error handler in the blueprint. This utility defines a structured error handler (function, factory, or class) for one or ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: defineErrorHandler()\\",\\"image\\":[\\"/logo.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/blueprint/KernelUtils/functions/defineErrorHandler.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: defineErrorHandler()"}],["meta",{"property":"og:description","content":"Function: defineErrorHandler() Registers a kernel-level error handler in the blueprint. This utility defines a structured error handler (function, factory, or class) for one or ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":1.06,"words":319},"filePathRelative":"api/core/blueprint/KernelUtils/functions/defineErrorHandler.md","autoDesc":true}');export{y as comp,b as data};
