import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as n,b as s,e as p,w as r,r as i,o as l}from"./app-D3YQYQ8j.js";const c={};function d(u,a){const e=i("RouteLink");return l(),o("div",null,[a[3]||(a[3]=n("h1",{id:"stone-js-aws-lambda-adapter",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#stone-js-aws-lambda-adapter"},[n("span",null,"Stone.js - AWS Lambda Adapter")])],-1)),n("p",null,[a[1]||(a[1]=s('<a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/l/@stone-js/aws-lambda-adapter" alt="npm" loading="lazy"></a><a href="https://www.npmjs.com/package/@stone-js/aws-lambda-adapter" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/v/@stone-js/aws-lambda-adapter" alt="npm" loading="lazy"></a><a href="https://www.npmjs.com/package/@stone-js/aws-lambda-adapter" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/dm/@stone-js/aws-lambda-adapter" alt="npm" loading="lazy"></a><img src="https://img.shields.io/maintenance/yes/2025" alt="Maintenance" loading="lazy"><a href="https://github.com/stone-foundation/stone-js-aws-lambda-adapter/actions/workflows/main.yml" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-aws-lambda-adapter/actions/workflows/main.yml/badge.svg" alt="Build Status" loading="lazy"></a><a href="https://github.com/stone-foundation/stone-js-aws-lambda-adapter/actions/workflows/release.yml" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-aws-lambda-adapter/actions/workflows/release.yml/badge.svg" alt="Publish Package to npmjs" loading="lazy"></a><a href="https://sonarcloud.io/summary/new_code?id=stone-foundation_stone-js-aws-lambda-adapter" target="_blank" rel="noopener noreferrer"><img src="https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-aws-lambda-adapter&amp;metric=alert_status" alt="Quality Gate Status" loading="lazy"></a><a href="https://sonarcloud.io/summary/new_code?id=stone-foundation_stone-js-aws-lambda-adapter" target="_blank" rel="noopener noreferrer"><img src="https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-aws-lambda-adapter&amp;metric=coverage" alt="Coverage" loading="lazy"></a>',8)),p(e,{to:"/packages/aws-lambda-adapter/SECURITY.html"},{default:r(()=>a[0]||(a[0]=[n("img",{src:"https://img.shields.io/badge/Security-Policy-blue.svg",alt:"Security Policy",loading:"lazy"},null,-1)])),_:1,__:[0]}),a[2]||(a[2]=s('<a href="https://github.com/stone-foundation/stone-js-aws-lambda-adapter/security/code-scanning" target="_blank" rel="noopener noreferrer"><img src="https://github.com/stone-foundation/stone-js-aws-lambda-adapter/actions/workflows/github-code-scanning/codeql/badge.svg" alt="CodeQL" loading="lazy"></a><a href="https://github.com/stone-foundation/stone-js-aws-lambda-adapter/network/updates" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/Dependabot-enabled-brightgreen.svg" alt="Dependabot Status" loading="lazy"></a><a href="https://conventionalcommits.org" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/badge/Conventional Commits-1.0.0-yellow.svg" alt="Conventional Commits" loading="lazy"></a>',3))]),a[4]||(a[4]=s(`<p>The <strong>AWS Lambda Adapter</strong> allows you to deploy any Stone.js application as a general-purpose Lambda function, not tied to HTTP. Whether you&#39;re building background jobs, event processors, queue consumers, or cron-based automation, this adapter brings the full power of Continuum Architecture to the serverless world.</p><hr><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h2><p>In Stone.js, <strong>adapters</strong> connect your app to the outside world. The AWS Lambda Adapter enables your logic to run in any AWS Lambda context, triggered by SQS, EventBridge, CloudWatch, or even a custom invocation.</p><p>This adapter captures the Lambda <code>event</code> and <code>context</code>, wraps them in a consistent <code>IncomingEvent</code>, and allows you to produce a clean <code>OutgoingResponse</code>, or nothing at all, if your function is fire-and-forget.</p><p>The result? One system, one lifecycle, one architectural model, everywhere.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token function">npm</span> <span class="token function">install</span> @stone-js/aws-lambda-adapter</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>This package is <strong>pure ESM</strong>. Make sure your project uses ESM (<code>&quot;type&quot;: &quot;module&quot;</code> in <code>package.json</code>) or configure your tooling accordingly.</p></blockquote><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>You can register the adapter via class decorators or programmatically using the blueprint.</p><h3 id="declarative-api" tabindex="-1"><a class="header-anchor" href="#declarative-api"><span>Declarative API</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> AwsLambda <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/aws-lambda-adapter&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> StoneApp<span class="token punctuation">,</span> IncomingEvent<span class="token punctuation">,</span> IEventHandler <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">StoneApp</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">AwsLambda</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">LambdaHandler</span> <span class="token keyword">implements</span> <span class="token class-name">IEventHandler<span class="token operator">&lt;</span>IncomingEvent<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">async</span> <span class="token function">handle</span><span class="token punctuation">(</span>event<span class="token operator">:</span> IncomingEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> payload <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;payload&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token comment">// Process message or do background work</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span> success<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> received<span class="token operator">:</span> payload <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="imperative-api" tabindex="-1"><a class="header-anchor" href="#imperative-api"><span>Imperative API</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStoneApp<span class="token punctuation">,</span> IncomingEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/core&#39;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> awsLambdaAdapterBlueprint <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@stone-js/aws-lambda-adapter&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> IncomingEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> task <span class="token operator">=</span> event<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">get</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token string">&#39;task&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Processing task: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>task<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">defineStoneApp</span><span class="token punctuation">(</span>handler<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>awsLambdaAdapterBlueprint<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="what-it-enables" tabindex="-1"><a class="header-anchor" href="#what-it-enables"><span>What It Enables</span></a></h2><ul><li><p><strong>General-Purpose Lambda Support</strong> Process any AWS Lambda invocation, from SQS to EventBridge, without HTTP assumptions.</p></li><li><p><strong>Full Continuum Integration</strong> The raw Lambda event and context become cleanly wrapped in a Stone <code>IncomingEvent</code>.</p></li><li><p><strong>Minimal Setup, Max Power</strong> Start with a single function, scale to a complex pipeline, no boilerplate required.</p></li><li><p><strong>No Vendor Lock-in</strong> The logic is decoupled from Lambda. You can reuse and test it outside of AWS with zero changes.</p></li><li><p><strong>Flexible Output Handling</strong> Return an <code>OutgoingResponse</code>, throw errors, or simply return <code>void</code>, your flow, your rules.</p></li><li><p><strong>Lifecycle Hooks</strong> Define <code>onStart</code>, <code>onStop</code>, and hook into adapter middleware.</p></li><li><p><strong>First-Class TypeScript Support</strong> All context and behavior are typed and autocompleted out of the box.</p></li></ul><h2 id="configuration-options" tabindex="-1"><a class="header-anchor" href="#configuration-options"><span>Configuration Options</span></a></h2><p>The AWS Lambda Adapter inherits the base Stone.js <code>AdapterConfig</code> type. It does not define custom options, but you can configure:</p><table><thead><tr><th>Option</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>default</code></td><td><code>boolean</code></td><td>Set as the default adapter for your app</td></tr><tr><td><code>alias</code></td><td><code>string</code></td><td>Optional name to reference this adapter</td></tr><tr><td><code>current</code></td><td><code>boolean</code></td><td>Marks this adapter as active at runtime</td></tr><tr><td><code>middleware[]</code></td><td><code>AdapterMixedPipeType[]</code></td><td>Middleware executed during the adapter lifecycle</td></tr><tr><td><code>errorHandlers</code></td><td><code>Record&lt;string, MetaAdapterErrorHandler&gt;</code></td><td>Customize error response formatting or behavior</td></tr></tbody></table><h2 id="adapter-context-shape" tabindex="-1"><a class="header-anchor" href="#adapter-context-shape"><span>Adapter Context Shape</span></a></h2><p>During execution, adapter middleware and hooks receive a full context object:</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">interface</span> <span class="token class-name">AwsLambdaAdapterContext</span> <span class="token punctuation">{</span></span>
<span class="line">  rawEvent<span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span>              <span class="token comment">// The raw AWS Lambda event input</span></span>
<span class="line">  rawResponse<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">unknown</span><span class="token punctuation">;</span>          <span class="token comment">// Optionally the return response (if expected)</span></span>
<span class="line">  executionContext<span class="token operator">:</span> LambdaContext<span class="token punctuation">;</span> <span class="token comment">// AWS Lambda context object</span></span>
<span class="line">  incomingEvent<span class="token operator">?</span><span class="token operator">:</span> IncomingEvent<span class="token punctuation">;</span></span>
<span class="line">  outgoingResponse<span class="token operator">?</span><span class="token operator">:</span> OutgoingResponse<span class="token punctuation">;</span></span>
<span class="line">  incomingEventBuilder<span class="token operator">:</span> IAdapterEventBuilder<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> IncomingEvent<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line">  rawResponseBuilder<span class="token operator">:</span> IAdapterEventBuilder<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This allows for full introspection and control at all stages of execution, including advanced transformation and diagnostics.</p><h2 id="summary" tabindex="-1"><a class="header-anchor" href="#summary"><span>Summary</span></a></h2><p>The <code>@stone-js/aws-lambda-adapter</code> bridges your system with AWS Lambda, but without compromising your architecture. Whether you&#39;re building automation scripts, stream processors, or serverless services, this adapter keeps your code structured, composable, and future-proof.</p><p>Build it once. Deploy it anywhere.</p><h2 id="learn-more" tabindex="-1"><a class="header-anchor" href="#learn-more"><span>Learn More</span></a></h2><p>This package is part of the Stone.js ecosystem, a JavaScript framework for cloud-native applications built on the Continuum Architecture.</p><p>Explore the full documentation: <a href="https://stonejs.dev" target="_blank" rel="noopener noreferrer">https://stonejs.dev</a></p><h2 id="api-documentation" tabindex="-1"><a class="header-anchor" href="#api-documentation"><span>API documentation</span></a></h2><ul><li><a href="https://github.com/stone-foundation/stone-js-aws-lambda-adapter/blob/main/docs" target="_blank" rel="noopener noreferrer">API</a></li></ul><h2 id="contributing" tabindex="-1"><a class="header-anchor" href="#contributing"><span>Contributing</span></a></h2><p>See <a href="https://github.com/stone-foundation/stone-js-aws-lambda-adapter/blob/main/CONTRIBUTING.md" target="_blank" rel="noopener noreferrer">Contributing Guide</a></p>`,34))])}const h=t(c,[["render",d]]),b=JSON.parse('{"path":"/packages/aws-lambda-adapter/","title":"Stone.js - AWS Lambda Adapter","lang":"en-US","frontmatter":{"description":"Stone.js - AWS Lambda Adapter npm npm npm Maintenance Build Status Publish Package to npmjs Quality Gate Status Coverage CodeQL Dependabot Status Conventional Commits The AWS La...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Stone.js - AWS Lambda Adapter\\",\\"image\\":[\\"https://img.shields.io/npm/l/@stone-js/aws-lambda-adapter\\",\\"https://img.shields.io/npm/v/@stone-js/aws-lambda-adapter\\",\\"https://img.shields.io/npm/dm/@stone-js/aws-lambda-adapter\\",\\"https://img.shields.io/maintenance/yes/2025\\",\\"https://github.com/stone-foundation/stone-js-aws-lambda-adapter/actions/workflows/main.yml/badge.svg\\",\\"https://github.com/stone-foundation/stone-js-aws-lambda-adapter/actions/workflows/release.yml/badge.svg\\",\\"https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-aws-lambda-adapter&metric=alert_status\\",\\"https://sonarcloud.io/api/project_badges/measure?project=stone-foundation_stone-js-aws-lambda-adapter&metric=coverage\\",\\"https://img.shields.io/badge/Security-Policy-blue.svg\\",\\"https://github.com/stone-foundation/stone-js-aws-lambda-adapter/actions/workflows/github-code-scanning/codeql/badge.svg\\",\\"https://img.shields.io/badge/Dependabot-enabled-brightgreen.svg\\",\\"https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/packages/aws-lambda-adapter/"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Stone.js - AWS Lambda Adapter"}],["meta",{"property":"og:description","content":"Stone.js - AWS Lambda Adapter npm npm npm Maintenance Build Status Publish Package to npmjs Quality Gate Status Coverage CodeQL Dependabot Status Conventional Commits The AWS La..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://img.shields.io/npm/l/@stone-js/aws-lambda-adapter"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":2.55,"words":766},"filePathRelative":"packages/aws-lambda-adapter/readme.md","autoDesc":true}');export{h as comp,b as data};
