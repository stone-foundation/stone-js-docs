import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as r,a,d as n,e as t,w as p,r as l,o as d}from"./app-BJyWHIWB.js";const c={};function u(h,e){const s=l("RouteLink");return d(),i("div",null,[e[62]||(e[62]=r('<h1 id="class-route-incomingeventtype-outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#class-route-incomingeventtype-outgoingresponsetype"><span>Class: Route&lt;IncomingEventType, OutgoingResponseType&gt;</span></a></h1><p>Represents a route that defines how incoming events are handled.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="incomingeventtype" tabindex="-1"><a class="header-anchor" href="#incomingeventtype"><span>IncomingEventType</span></a></h3>',4)),a("p",null,[e[2]||(e[2]=a("code",null,"IncomingEventType",-1)),e[3]||(e[3]=n()),e[4]||(e[4]=a("em",null,"extends",-1)),e[5]||(e[5]=n()),t(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>e[0]||(e[0]=[a("code",null,"IIncomingEvent",-1)])),_:1,__:[0]}),e[6]||(e[6]=n(" = ")),t(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>e[1]||(e[1]=[a("code",null,"IIncomingEvent",-1)])),_:1,__:[1]})]),e[63]||(e[63]=r(`<p>The type of the incoming event.</p><h3 id="outgoingresponsetype" tabindex="-1"><a class="header-anchor" href="#outgoingresponsetype"><span>OutgoingResponseType</span></a></h3><p><code>OutgoingResponseType</code> = <code>unknown</code></p><p>The type of the outgoing response.</p><h2 id="constructors" tabindex="-1"><a class="header-anchor" href="#constructors"><span>Constructors</span></a></h2><h3 id="constructor" tabindex="-1"><a class="header-anchor" href="#constructor"><span>Constructor</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">new</span> <span class="token class-name">Route<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> Route<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Creates a new <code>Route</code> instance.</p><h4 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h4><h5 id="options" tabindex="-1"><a class="header-anchor" href="#options"><span>options</span></a></h5>`,10)),a("p",null,[t(s,{to:"/api/router/Route/interfaces/RouteOptions.html"},{default:p(()=>e[7]||(e[7]=[a("code",null,"RouteOptions",-1)])),_:1,__:[7]}),e[8]||(e[8]=n("<")),e[9]||(e[9]=a("code",null,"IncomingEventType",-1)),e[10]||(e[10]=n(", ")),e[11]||(e[11]=a("code",null,"OutgoingResponseType",-1)),e[12]||(e[12]=n(">"))]),e[64]||(e[64]=r(`<p>Configuration options for the route.</p><h4 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h4><p><code>Route</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;</p><p>A new <code>Route</code> instance.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="options-1" tabindex="-1"><a class="header-anchor" href="#options-1"><span>options</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">readonly</span> options<span class="token operator">:</span> RouteOptions<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Configuration options for the route.</p><h2 id="accessors" tabindex="-1"><a class="header-anchor" href="#accessors"><span>Accessors</span></a></h2><h3 id="domain" tabindex="-1"><a class="header-anchor" href="#domain"><span>domain</span></a></h3><h4 id="get-signature" tabindex="-1"><a class="header-anchor" href="#get-signature"><span>Get Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">get</span> <span class="token function">domain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gets the hostname of the route.</p><h5 id="returns-1" tabindex="-1"><a class="header-anchor" href="#returns-1"><span>Returns</span></a></h5><p><code>string</code></p><p>The hostname as a string.</p><hr><h3 id="hash" tabindex="-1"><a class="header-anchor" href="#hash"><span>hash</span></a></h3><h4 id="get-signature-1" tabindex="-1"><a class="header-anchor" href="#get-signature-1"><span>Get Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">get</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gets the hash fragment from the event URL.</p><h5 id="returns-2" tabindex="-1"><a class="header-anchor" href="#returns-2"><span>Returns</span></a></h5><p><code>string</code></p><p>The hash fragment as a string.</p><hr><h3 id="method" tabindex="-1"><a class="header-anchor" href="#method"><span>method</span></a></h3><h4 id="get-signature-2" tabindex="-1"><a class="header-anchor" href="#get-signature-2"><span>Get Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">get</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> HttpMethod<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gets the HTTP method for the route.</p><h5 id="returns-3" tabindex="-1"><a class="header-anchor" href="#returns-3"><span>Returns</span></a></h5>`,30)),a("p",null,[t(s,{to:"/api/router/declarations/type-aliases/HttpMethod.html"},{default:p(()=>e[13]||(e[13]=[a("code",null,"HttpMethod",-1)])),_:1,__:[13]})]),e[65]||(e[65]=r(`<p>The HTTP method.</p><hr><h3 id="params" tabindex="-1"><a class="header-anchor" href="#params"><span>params</span></a></h3><h4 id="get-signature-3" tabindex="-1"><a class="header-anchor" href="#get-signature-3"><span>Get Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">get</span> <span class="token function">params</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> RouteParams<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gets the parameters extracted from the route.</p><h5 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h5><p>If the event is not bound.</p><h5 id="returns-4" tabindex="-1"><a class="header-anchor" href="#returns-4"><span>Returns</span></a></h5>`,9)),a("p",null,[t(s,{to:"/api/router/declarations/type-aliases/RouteParams.html"},{default:p(()=>e[14]||(e[14]=[a("code",null,"RouteParams",-1)])),_:1,__:[14]})]),e[66]||(e[66]=r(`<p>The route parameters.</p><hr><h3 id="path" tabindex="-1"><a class="header-anchor" href="#path"><span>path</span></a></h3><h4 id="get-signature-4" tabindex="-1"><a class="header-anchor" href="#get-signature-4"><span>Get Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">get</span> <span class="token function">path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gets the pathname of the route.</p><h5 id="returns-5" tabindex="-1"><a class="header-anchor" href="#returns-5"><span>Returns</span></a></h5><p><code>string</code></p><p>The pathname as a string.</p><hr><h3 id="protocol" tabindex="-1"><a class="header-anchor" href="#protocol"><span>protocol</span></a></h3><h4 id="get-signature-5" tabindex="-1"><a class="header-anchor" href="#get-signature-5"><span>Get Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">get</span> <span class="token function">protocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gets the protocol for the route.</p><h5 id="returns-6" tabindex="-1"><a class="header-anchor" href="#returns-6"><span>Returns</span></a></h5><p><code>string</code></p><p>The protocol as a string (<code>http</code> or <code>https</code>).</p><hr><h3 id="query" tabindex="-1"><a class="header-anchor" href="#query"><span>query</span></a></h3><h4 id="get-signature-6" tabindex="-1"><a class="header-anchor" href="#get-signature-6"><span>Get Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">get</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gets the query parameters from the event URL.</p><h5 id="returns-7" tabindex="-1"><a class="header-anchor" href="#returns-7"><span>Returns</span></a></h5><p><code>Record</code>&lt;<code>string</code>, <code>string</code>&gt;</p><p>A record of query parameters.</p><hr><h3 id="uri" tabindex="-1"><a class="header-anchor" href="#uri"><span>uri</span></a></h3><h4 id="get-signature-7" tabindex="-1"><a class="header-anchor" href="#get-signature-7"><span>Get Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">get</span> <span class="token function">uri</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gets the full URI of the route.</p><h5 id="returns-8" tabindex="-1"><a class="header-anchor" href="#returns-8"><span>Returns</span></a></h5><p><code>string</code></p><p>The full URI as a string.</p><hr><h3 id="url" tabindex="-1"><a class="header-anchor" href="#url"><span>url</span></a></h3><h4 id="get-signature-8" tabindex="-1"><a class="header-anchor" href="#get-signature-8"><span>Get Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">get</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">URL</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Gets the URL of the event.</p><h5 id="returns-9" tabindex="-1"><a class="header-anchor" href="#returns-9"><span>Returns</span></a></h5><p><code>URL</code></p><p>The event URL or a default URL (<code>http://localhost</code>).</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="addmiddleware" tabindex="-1"><a class="header-anchor" href="#addmiddleware"><span>addMiddleware()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">addMiddleware</span><span class="token punctuation">(</span>middleware<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Adds a middleware to the route.</p><h4 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h4><h5 id="middleware" tabindex="-1"><a class="header-anchor" href="#middleware"><span>middleware</span></a></h5><p>The middleware to add.</p><p><code>MixedPipe</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt; | <code>MixedPipe</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;[]</p><h4 id="returns-10" tabindex="-1"><a class="header-anchor" href="#returns-10"><span>Returns</span></a></h4><p><code>this</code></p><p>The updated <code>Route</code> instance.</p><hr><h3 id="bind" tabindex="-1"><a class="header-anchor" href="#bind"><span>bind()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">bind</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Binds the provided event to the route, initializing route parameters and query data.</p><h4 id="parameters-2" tabindex="-1"><a class="header-anchor" href="#parameters-2"><span>Parameters</span></a></h4><h5 id="event" tabindex="-1"><a class="header-anchor" href="#event"><span>event</span></a></h5><p><code>IncomingEventType</code></p><p>The incoming event to bind to the route.</p><h4 id="returns-11" tabindex="-1"><a class="header-anchor" href="#returns-11"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><p>A promise that resolves once the binding is complete.</p><hr><h3 id="generate" tabindex="-1"><a class="header-anchor" href="#generate"><span>generate()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">generate</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Generates a URL or URI for the route with optional parameters, query, hash, and protocol.</p><h4 id="parameters-3" tabindex="-1"><a class="header-anchor" href="#parameters-3"><span>Parameters</span></a></h4><h5 id="options-2" tabindex="-1"><a class="header-anchor" href="#options-2"><span>options</span></a></h5>`,69)),a("p",null,[e[16]||(e[16]=a("code",null,"Omit",-1)),e[17]||(e[17]=n("<")),t(s,{to:"/api/router/declarations/interfaces/GenerateOptions.html"},{default:p(()=>e[15]||(e[15]=[a("code",null,"GenerateOptions",-1)])),_:1,__:[15]}),e[18]||(e[18]=n(", ")),e[19]||(e[19]=a("code",null,'"name"',-1)),e[20]||(e[20]=n(">"))]),e[67]||(e[67]=r(`<p>Options for generating the URL.</p><ul><li><code>params</code>: Route parameters to include in the path.</li><li><code>query</code>: Query parameters to append to the URL.</li><li><code>hash</code>: A hash fragment to include in the URL.</li><li><code>withDomain</code>: Whether to include the domain in the URL.</li><li><code>protocol</code>: The protocol to use in the URL.</li></ul><h4 id="returns-12" tabindex="-1"><a class="header-anchor" href="#returns-12"><span>Returns</span></a></h4><p><code>string</code></p><p>The generated URL as a string.</p><h4 id="throws-1" tabindex="-1"><a class="header-anchor" href="#throws-1"><span>Throws</span></a></h4><p><code>RouterError</code> if required parameters are missing.</p><hr><h3 id="getdefinedparams" tabindex="-1"><a class="header-anchor" href="#getdefinedparams"><span>getDefinedParams()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getDefinedParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> RouteParams<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves all parameters that are defined (non-undefined values).</p><h4 id="returns-13" tabindex="-1"><a class="header-anchor" href="#returns-13"><span>Returns</span></a></h4>`,12)),a("p",null,[t(s,{to:"/api/router/declarations/type-aliases/RouteParams.html"},{default:p(()=>e[21]||(e[21]=[a("code",null,"RouteParams",-1)])),_:1,__:[21]})]),e[68]||(e[68]=r(`<p>A record of defined parameters.</p><hr><h3 id="getoption" tabindex="-1"><a class="header-anchor" href="#getoption"><span>getOption()</span></a></h3><p>Retrieves a specified option from the route configuration.</p><h4 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h4><p>The key of the option to retrieve.</p><h4 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h4><p>An optional fallback value if the option is not found.</p><h4 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">getOption</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> TReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves a specified option from the route configuration.</p><h5 id="type-parameters-1" tabindex="-1"><a class="header-anchor" href="#type-parameters-1"><span>Type Parameters</span></a></h5><h6 id="treturn" tabindex="-1"><a class="header-anchor" href="#treturn"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-4" tabindex="-1"><a class="header-anchor" href="#parameters-4"><span>Parameters</span></a></h5><h6 id="key" tabindex="-1"><a class="header-anchor" href="#key"><span>key</span></a></h6>`,16)),a("p",null,[e[24]||(e[24]=n("keyof ")),t(s,{to:"/api/router/Route/interfaces/RouteOptions.html"},{default:p(()=>e[22]||(e[22]=[a("code",null,"RouteOptions",-1)])),_:1,__:[22]}),e[25]||(e[25]=n("<")),t(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>e[23]||(e[23]=[a("code",null,"IIncomingEvent",-1)])),_:1,__:[23]}),e[26]||(e[26]=n(", ")),e[27]||(e[27]=a("code",null,"unknown",-1)),e[28]||(e[28]=n(">"))]),e[69]||(e[69]=r(`<p>The key of the option to retrieve.</p><h5 id="returns-14" tabindex="-1"><a class="header-anchor" href="#returns-14"><span>Returns</span></a></h5><p><code>undefined</code> | <code>TReturn</code></p><p>The value of the option or the fallback value if not found.</p><h5 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h5><p>The key of the option to retrieve.</p><h5 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h5><p>An optional fallback value if the option is not found.</p><h4 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">getOption</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> fallback<span class="token punctuation">)</span><span class="token operator">:</span> TReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves a specified option from the route configuration.</p><h5 id="type-parameters-2" tabindex="-1"><a class="header-anchor" href="#type-parameters-2"><span>Type Parameters</span></a></h5><h6 id="treturn-1" tabindex="-1"><a class="header-anchor" href="#treturn-1"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-5" tabindex="-1"><a class="header-anchor" href="#parameters-5"><span>Parameters</span></a></h5><h6 id="key-1" tabindex="-1"><a class="header-anchor" href="#key-1"><span>key</span></a></h6>`,16)),a("p",null,[e[31]||(e[31]=n("keyof ")),t(s,{to:"/api/router/Route/interfaces/RouteOptions.html"},{default:p(()=>e[29]||(e[29]=[a("code",null,"RouteOptions",-1)])),_:1,__:[29]}),e[32]||(e[32]=n("<")),t(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>e[30]||(e[30]=[a("code",null,"IIncomingEvent",-1)])),_:1,__:[30]}),e[33]||(e[33]=n(", ")),e[34]||(e[34]=a("code",null,"unknown",-1)),e[35]||(e[35]=n(">"))]),e[70]||(e[70]=r(`<p>The key of the option to retrieve.</p><h6 id="fallback" tabindex="-1"><a class="header-anchor" href="#fallback"><span>fallback</span></a></h6><p><code>TReturn</code></p><p>A fallback value if the option is not found.</p><h5 id="returns-15" tabindex="-1"><a class="header-anchor" href="#returns-15"><span>Returns</span></a></h5><p><code>TReturn</code></p><p>The value of the option or the fallback value if not found.</p><h5 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h5><p>The key of the option to retrieve.</p><h5 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h5><p>An optional fallback value if the option is not found.</p><hr><h3 id="getoptionalparamnames" tabindex="-1"><a class="header-anchor" href="#getoptionalparamnames"><span>getOptionalParamNames()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getOptionalParamNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves the names of all optional parameters.</p><h4 id="returns-16" tabindex="-1"><a class="header-anchor" href="#returns-16"><span>Returns</span></a></h4><p><code>string</code>[]</p><p>An array of optional parameter names.</p><hr><h3 id="getoptions" tabindex="-1"><a class="header-anchor" href="#getoptions"><span>getOptions()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">getOptions</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>keys<span class="token punctuation">)</span><span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> TReturn<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves a specified options from the route configuration.</p><h4 id="type-parameters-3" tabindex="-1"><a class="header-anchor" href="#type-parameters-3"><span>Type Parameters</span></a></h4><h5 id="treturn-2" tabindex="-1"><a class="header-anchor" href="#treturn-2"><span>TReturn</span></a></h5><p><code>TReturn</code> = <code>unknown</code></p><h4 id="parameters-6" tabindex="-1"><a class="header-anchor" href="#parameters-6"><span>Parameters</span></a></h4><h5 id="keys" tabindex="-1"><a class="header-anchor" href="#keys"><span>keys</span></a></h5><p><code>string</code>[]</p><p>The kesy of the option to retrieve.</p><h4 id="returns-17" tabindex="-1"><a class="header-anchor" href="#returns-17"><span>Returns</span></a></h4><p><code>Record</code>&lt;<code>string</code>, <code>TReturn</code>&gt;</p><p>The values of the option.</p><hr><h3 id="getparam" tabindex="-1"><a class="header-anchor" href="#getparam"><span>getParam()</span></a></h3><p>Retrieves the value of a specific parameter.</p><h4 id="param-6" tabindex="-1"><a class="header-anchor" href="#param-6"><span>Param</span></a></h4><p>The name of the parameter to retrieve.</p><h4 id="param-7" tabindex="-1"><a class="header-anchor" href="#param-7"><span>Param</span></a></h4><p>An optional fallback value if the parameter is not found.</p><h4 id="call-signature-2" tabindex="-1"><a class="header-anchor" href="#call-signature-2"><span>Call Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">getParam</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> TReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves the value of a specific parameter.</p><h5 id="type-parameters-4" tabindex="-1"><a class="header-anchor" href="#type-parameters-4"><span>Type Parameters</span></a></h5><h6 id="treturn-3" tabindex="-1"><a class="header-anchor" href="#treturn-3"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-7" tabindex="-1"><a class="header-anchor" href="#parameters-7"><span>Parameters</span></a></h5><h6 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span>name</span></a></h6><p><code>string</code></p><p>The name of the parameter to retrieve.</p><h5 id="returns-18" tabindex="-1"><a class="header-anchor" href="#returns-18"><span>Returns</span></a></h5><p><code>undefined</code> | <code>TReturn</code></p><p>The value of the parameter or the fallback value if not found.</p><h5 id="param-8" tabindex="-1"><a class="header-anchor" href="#param-8"><span>Param</span></a></h5><p>The name of the parameter to retrieve.</p><h5 id="param-9" tabindex="-1"><a class="header-anchor" href="#param-9"><span>Param</span></a></h5><p>An optional fallback value if the parameter is not found.</p><h4 id="call-signature-3" tabindex="-1"><a class="header-anchor" href="#call-signature-3"><span>Call Signature</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token generic-function"><span class="token function">getParam</span><span class="token generic class-name"><span class="token operator">&lt;</span>TReturn<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> fallback<span class="token punctuation">)</span><span class="token operator">:</span> TReturn<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves the value of a specific parameter.</p><h5 id="type-parameters-5" tabindex="-1"><a class="header-anchor" href="#type-parameters-5"><span>Type Parameters</span></a></h5><h6 id="treturn-4" tabindex="-1"><a class="header-anchor" href="#treturn-4"><span>TReturn</span></a></h6><p><code>TReturn</code> = <code>unknown</code></p><h5 id="parameters-8" tabindex="-1"><a class="header-anchor" href="#parameters-8"><span>Parameters</span></a></h5><h6 id="name-1" tabindex="-1"><a class="header-anchor" href="#name-1"><span>name</span></a></h6><p><code>string</code></p><p>The name of the parameter to retrieve.</p><h6 id="fallback-1" tabindex="-1"><a class="header-anchor" href="#fallback-1"><span>fallback</span></a></h6><p><code>TReturn</code></p><p>A fallback value if the parameter is not found.</p><h5 id="returns-19" tabindex="-1"><a class="header-anchor" href="#returns-19"><span>Returns</span></a></h5><p><code>TReturn</code></p><p>The value of the parameter or the fallback value if not found.</p><h5 id="param-10" tabindex="-1"><a class="header-anchor" href="#param-10"><span>Param</span></a></h5><p>The name of the parameter to retrieve.</p><h5 id="param-11" tabindex="-1"><a class="header-anchor" href="#param-11"><span>Param</span></a></h5><p>An optional fallback value if the parameter is not found.</p><hr><h3 id="getparamnames" tabindex="-1"><a class="header-anchor" href="#getparamnames"><span>getParamNames()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">getParamNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Retrieves the names of all parameters.</p><h4 id="returns-20" tabindex="-1"><a class="header-anchor" href="#returns-20"><span>Returns</span></a></h4><p><code>string</code>[]</p><p>An array of parameter names.</p><hr><h3 id="hasdomain" tabindex="-1"><a class="header-anchor" href="#hasdomain"><span>hasDomain()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">hasDomain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the route has a domain constraint.</p><h4 id="returns-21" tabindex="-1"><a class="header-anchor" href="#returns-21"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the route has a domain constraint, otherwise <code>false</code>.</p><hr><h3 id="hasparam" tabindex="-1"><a class="header-anchor" href="#hasparam"><span>hasParam()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">hasParam</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the route has a specific parameter.</p><h4 id="parameters-9" tabindex="-1"><a class="header-anchor" href="#parameters-9"><span>Parameters</span></a></h4><h5 id="name-2" tabindex="-1"><a class="header-anchor" href="#name-2"><span>name</span></a></h5><p><code>string</code></p><p>The name of the parameter to check.</p><h4 id="returns-22" tabindex="-1"><a class="header-anchor" href="#returns-22"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the parameter exists, otherwise <code>false</code>.</p><hr><h3 id="hasparams" tabindex="-1"><a class="header-anchor" href="#hasparams"><span>hasParams()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">hasParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the route has any parameters.</p><h4 id="returns-23" tabindex="-1"><a class="header-anchor" href="#returns-23"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if parameters are present, otherwise <code>false</code>.</p><hr><h3 id="isfallback" tabindex="-1"><a class="header-anchor" href="#isfallback"><span>isFallback()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isFallback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the route is marked as a fallback route.</p><h4 id="returns-24" tabindex="-1"><a class="header-anchor" href="#returns-24"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the route is a fallback, otherwise <code>false</code>.</p><hr><h3 id="ishttponly" tabindex="-1"><a class="header-anchor" href="#ishttponly"><span>isHttpOnly()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isHttpOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the route uses HTTP protocol.</p><h4 id="returns-25" tabindex="-1"><a class="header-anchor" href="#returns-25"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the route is HTTP-only, otherwise <code>false</code>.</p><hr><h3 id="ishttpsonly" tabindex="-1"><a class="header-anchor" href="#ishttpsonly"><span>isHttpsOnly()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isHttpsOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the route uses HTTPS protocol.</p><h4 id="returns-26" tabindex="-1"><a class="header-anchor" href="#returns-26"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the route is HTTPS-only, otherwise <code>false</code>.</p><hr><h3 id="ismiddlewareexcluded" tabindex="-1"><a class="header-anchor" href="#ismiddlewareexcluded"><span>isMiddlewareExcluded()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isMiddlewareExcluded</span><span class="token punctuation">(</span>mixedMiddleware<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Determines if a specific middleware is excluded from execution.</p><h4 id="parameters-10" tabindex="-1"><a class="header-anchor" href="#parameters-10"><span>Parameters</span></a></h4><h5 id="mixedmiddleware" tabindex="-1"><a class="header-anchor" href="#mixedmiddleware"><span>mixedMiddleware</span></a></h5><p><code>MixedPipe</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;</p><p>The middleware to check.</p><h4 id="returns-27" tabindex="-1"><a class="header-anchor" href="#returns-27"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the middleware is excluded, otherwise <code>false</code>.</p><hr><h3 id="isparamnameoptional" tabindex="-1"><a class="header-anchor" href="#isparamnameoptional"><span>isParamNameOptional()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isParamNameOptional</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if a parameter name is optional.</p><h4 id="parameters-11" tabindex="-1"><a class="header-anchor" href="#parameters-11"><span>Parameters</span></a></h4><h5 id="name-3" tabindex="-1"><a class="header-anchor" href="#name-3"><span>name</span></a></h5><p><code>string</code></p><p>The name of the parameter to check.</p><h4 id="returns-28" tabindex="-1"><a class="header-anchor" href="#returns-28"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the parameter is optional, otherwise <code>false</code>.</p><hr><h3 id="issecure" tabindex="-1"><a class="header-anchor" href="#issecure"><span>isSecure()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isSecure</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the route requires HTTPS for security.</p><h4 id="returns-29" tabindex="-1"><a class="header-anchor" href="#returns-29"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the route is HTTPS-only, otherwise <code>false</code>.</p><hr><h3 id="isstrict" tabindex="-1"><a class="header-anchor" href="#isstrict"><span>isStrict()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">isStrict</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the route operates in strict mode.</p><h4 id="returns-30" tabindex="-1"><a class="header-anchor" href="#returns-30"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the route is strict, otherwise <code>false</code>.</p><hr><h3 id="matches" tabindex="-1"><a class="header-anchor" href="#matches"><span>matches()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">matches</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> includingMethod<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Checks if the provided event matches the route.</p><h4 id="parameters-12" tabindex="-1"><a class="header-anchor" href="#parameters-12"><span>Parameters</span></a></h4><h5 id="event-1" tabindex="-1"><a class="header-anchor" href="#event-1"><span>event</span></a></h5><p><code>IncomingEventType</code></p><p>The incoming event to check against the route.</p><h5 id="includingmethod" tabindex="-1"><a class="header-anchor" href="#includingmethod"><span>includingMethod</span></a></h5><p><code>boolean</code></p><p>Whether to include HTTP method matching in the evaluation.</p><h4 id="returns-31" tabindex="-1"><a class="header-anchor" href="#returns-31"><span>Returns</span></a></h4><p><code>boolean</code></p><p><code>true</code> if the event matches the route, otherwise <code>false</code>.</p><hr><h3 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span>run()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">run</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Executes the route&#39;s action based on the provided event.</p><p>Note: The order of execution is important and should not be changed.</p><h4 id="parameters-13" tabindex="-1"><a class="header-anchor" href="#parameters-13"><span>Parameters</span></a></h4><h5 id="event-2" tabindex="-1"><a class="header-anchor" href="#event-2"><span>event</span></a></h5><p><code>IncomingEventType</code></p><p>The incoming event to handle.</p><h4 id="returns-32" tabindex="-1"><a class="header-anchor" href="#returns-32"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>OutgoingResponseType</code>&gt;</p><p>A promise that resolves to the outgoing response generated by the route&#39;s action.</p><h4 id="throws-2" tabindex="-1"><a class="header-anchor" href="#throws-2"><span>Throws</span></a></h4><p><code>RouterError</code> if the route action is invalid.</p><hr><h3 id="setdispatchers" tabindex="-1"><a class="header-anchor" href="#setdispatchers"><span>setDispatchers()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">setDispatchers</span><span class="token punctuation">(</span>dispatchers<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Sets the dispatchers for handling callable or handler actions.</p><h4 id="parameters-14" tabindex="-1"><a class="header-anchor" href="#parameters-14"><span>Parameters</span></a></h4><h5 id="dispatchers" tabindex="-1"><a class="header-anchor" href="#dispatchers"><span>dispatchers</span></a></h5>`,199)),a("p",null,[t(s,{to:"/api/router/declarations/type-aliases/IDispatchers.html"},{default:p(()=>e[36]||(e[36]=[a("code",null,"IDispatchers",-1)])),_:1,__:[36]}),e[37]||(e[37]=n("<")),e[38]||(e[38]=a("code",null,"IncomingEventType",-1)),e[39]||(e[39]=n(", ")),e[40]||(e[40]=a("code",null,"OutgoingResponseType",-1)),e[41]||(e[41]=n(">"))]),e[71]||(e[71]=r(`<p>The dispatchers to set.</p><h4 id="returns-33" tabindex="-1"><a class="header-anchor" href="#returns-33"><span>Returns</span></a></h4><p><code>this</code></p><p>The updated <code>Route</code> instance.</p><hr><h3 id="setmatchers" tabindex="-1"><a class="header-anchor" href="#setmatchers"><span>setMatchers()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">setMatchers</span><span class="token punctuation">(</span>matchers<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Sets the matchers to use for evaluating if an event matches the route.</p><h4 id="parameters-15" tabindex="-1"><a class="header-anchor" href="#parameters-15"><span>Parameters</span></a></h4><h5 id="matchers" tabindex="-1"><a class="header-anchor" href="#matchers"><span>matchers</span></a></h5>`,10)),a("p",null,[t(s,{to:"/api/router/declarations/type-aliases/IMatcher.html"},{default:p(()=>e[42]||(e[42]=[a("code",null,"IMatcher",-1)])),_:1,__:[42]}),e[43]||(e[43]=n("<")),e[44]||(e[44]=a("code",null,"IncomingEventType",-1)),e[45]||(e[45]=n(", ")),e[46]||(e[46]=a("code",null,"OutgoingResponseType",-1)),e[47]||(e[47]=n(">[]"))]),e[72]||(e[72]=r(`<p>An array of matchers to set.</p><h4 id="returns-34" tabindex="-1"><a class="header-anchor" href="#returns-34"><span>Returns</span></a></h4><p><code>this</code></p><p>The updated <code>Route</code> instance.</p><hr><h3 id="setresolver" tabindex="-1"><a class="header-anchor" href="#setresolver"><span>setResolver()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">setResolver</span><span class="token punctuation">(</span>resolver<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Sets the resolver for the route. The resolver is used to resolve the route&#39;s handler.</p><h4 id="parameters-16" tabindex="-1"><a class="header-anchor" href="#parameters-16"><span>Parameters</span></a></h4><h5 id="resolver" tabindex="-1"><a class="header-anchor" href="#resolver"><span>resolver?</span></a></h5>`,10)),a("p",null,[t(s,{to:"/api/router/declarations/interfaces/DependencyResolver.html"},{default:p(()=>e[48]||(e[48]=[a("code",null,"DependencyResolver",-1)])),_:1,__:[48]})]),e[73]||(e[73]=r(`<p>The resolver to set.</p><h4 id="returns-35" tabindex="-1"><a class="header-anchor" href="#returns-35"><span>Returns</span></a></h4><p><code>this</code></p><p>The updated <code>Route</code> instance.</p><hr><h3 id="tojson" tabindex="-1"><a class="header-anchor" href="#tojson"><span>toJSON()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Converts the route into a JSON object representation.</p><h4 id="returns-36" tabindex="-1"><a class="header-anchor" href="#returns-36"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>Record</code>&lt;<code>string</code>, <code>unknown</code>&gt;&gt;</p><p>A JSON object representing the route.</p><hr><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring"><span>toString()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Converts the route into a string representation (JSON format).</p><h4 id="returns-37" tabindex="-1"><a class="header-anchor" href="#returns-37"><span>Returns</span></a></h4><p><code>Promise</code>&lt;<code>string</code>&gt;</p><p>A JSON string representing the route.</p><hr><h3 id="create" tabindex="-1"><a class="header-anchor" href="#create"><span>create()</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">static</span> <span class="token generic-function"><span class="token function">create</span><span class="token generic class-name"><span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> Route<span class="token operator">&lt;</span>IncomingEventType<span class="token punctuation">,</span> OutgoingResponseType<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Factory method for creating a route instance.</p><h4 id="type-parameters-6" tabindex="-1"><a class="header-anchor" href="#type-parameters-6"><span>Type Parameters</span></a></h4><h5 id="incomingeventtype-1" tabindex="-1"><a class="header-anchor" href="#incomingeventtype-1"><span>IncomingEventType</span></a></h5>`,24)),a("p",null,[e[51]||(e[51]=a("code",null,"IncomingEventType",-1)),e[52]||(e[52]=n()),e[53]||(e[53]=a("em",null,"extends",-1)),e[54]||(e[54]=n()),t(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>e[49]||(e[49]=[a("code",null,"IIncomingEvent",-1)])),_:1,__:[49]}),e[55]||(e[55]=n(" = ")),t(s,{to:"/api/router/declarations/interfaces/IIncomingEvent.html"},{default:p(()=>e[50]||(e[50]=[a("code",null,"IIncomingEvent",-1)])),_:1,__:[50]})]),e[74]||(e[74]=r('<h5 id="outgoingresponsetype-1" tabindex="-1"><a class="header-anchor" href="#outgoingresponsetype-1"><span>OutgoingResponseType</span></a></h5><p><code>OutgoingResponseType</code> = <code>unknown</code></p><h4 id="parameters-17" tabindex="-1"><a class="header-anchor" href="#parameters-17"><span>Parameters</span></a></h4><h5 id="options-3" tabindex="-1"><a class="header-anchor" href="#options-3"><span>options</span></a></h5>',4)),a("p",null,[t(s,{to:"/api/router/Route/interfaces/RouteOptions.html"},{default:p(()=>e[56]||(e[56]=[a("code",null,"RouteOptions",-1)])),_:1,__:[56]}),e[57]||(e[57]=n("<")),e[58]||(e[58]=a("code",null,"IncomingEventType",-1)),e[59]||(e[59]=n(", ")),e[60]||(e[60]=a("code",null,"OutgoingResponseType",-1)),e[61]||(e[61]=n(">"))]),e[75]||(e[75]=r('<p>Configuration options for the route.</p><h4 id="returns-38" tabindex="-1"><a class="header-anchor" href="#returns-38"><span>Returns</span></a></h4><p><code>Route</code>&lt;<code>IncomingEventType</code>, <code>OutgoingResponseType</code>&gt;</p><p>A new <code>Route</code> instance.</p>',4))])}const f=o(c,[["render",u]]),b=JSON.parse('{"path":"/api/router/Route/classes/Route.html","title":"Class: Route<IncomingEventType, OutgoingResponseType>","lang":"en-US","frontmatter":{"description":"Class: Route<IncomingEventType, OutgoingResponseType> Represents a route that defines how incoming events are handled. Type Parameters IncomingEventType IncomingEventType extend...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Class: Route<IncomingEventType, OutgoingResponseType>\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/router/Route/classes/Route.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Class: Route<IncomingEventType, OutgoingResponseType>"}],["meta",{"property":"og:description","content":"Class: Route<IncomingEventType, OutgoingResponseType> Represents a route that defines how incoming events are handled. Type Parameters IncomingEventType IncomingEventType extend..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1750220227000,"updatedTime":1750220227000,"contributors":[{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":4.91,"words":1473},"filePathRelative":"api/router/Route/classes/Route.md","autoDesc":true}');export{f as comp,b as data};
