import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as n,a,d as t,e as r,w as s,r as c,o as i}from"./app-BJyWHIWB.js";const d={};function m(u,e){const o=c("RouteLink");return i(),l("div",null,[e[11]||(e[11]=n(`<h1 id="function-classdecoratorlegacywrapper" tabindex="-1"><a class="header-anchor" href="#function-classdecoratorlegacywrapper"><span>Function: classDecoratorLegacyWrapper()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">classDecoratorLegacyWrapper</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>decorator<span class="token punctuation">)</span><span class="token operator">:</span> ClassDecorator<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Wraps a class decorator to ensure compatibility with both legacy and 2023-11 proposal contexts.</p><p>This wrapper enforces that the decorator is only applied in a valid 2023-11 proposal context and throws appropriate errors for unsupported usage.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3>`,6)),a("p",null,[e[2]||(e[2]=a("code",null,"T",-1)),e[3]||(e[3]=t()),e[4]||(e[4]=a("em",null,"extends",-1)),e[5]||(e[5]=t()),r(o,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:s(()=>e[0]||(e[0]=[a("code",null,"ClassType",-1)])),_:1,__:[0]}),e[6]||(e[6]=t(" = ")),r(o,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:s(()=>e[1]||(e[1]=[a("code",null,"ClassType",-1)])),_:1,__:[1]})]),e[12]||(e[12]=a("p",null,"The type of the class being decorated.",-1)),e[13]||(e[13]=a("h2",{id:"parameters",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#parameters"},[a("span",null,"Parameters")])],-1)),e[14]||(e[14]=a("h3",{id:"decorator",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#decorator"},[a("span",null,"decorator")])],-1)),a("p",null,[r(o,{to:"/api/core/declarations/type-aliases/ProposalClassDecorator.html"},{default:s(()=>e[7]||(e[7]=[a("code",null,"ProposalClassDecorator",-1)])),_:1,__:[7]}),e[8]||(e[8]=t("<")),e[9]||(e[9]=a("code",null,"T",-1)),e[10]||(e[10]=t(">"))]),e[15]||(e[15]=n('<p>The class decorator function conforming to the 2023-11 proposal.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>ClassDecorator</code></p><p>A legacy-compatible <code>ClassDecorator</code> that works with TypeScript&#39;s expectations.</p><h2 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>Throws</span></a></h2><p>If the decorator is used outside the 2023-11 context or on invalid targets.</p>',6))])}const h=p(d,[["render",m]]),f=JSON.parse('{"path":"/api/core/decorators/Metadata/functions/classDecoratorLegacyWrapper.html","title":"Function: classDecoratorLegacyWrapper()","lang":"en-US","frontmatter":{"description":"Function: classDecoratorLegacyWrapper() Wraps a class decorator to ensure compatibility with both legacy and 2023-11 proposal contexts. This wrapper enforces that the decorator ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: classDecoratorLegacyWrapper()\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/decorators/Metadata/functions/classDecoratorLegacyWrapper.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: classDecoratorLegacyWrapper()"}],["meta",{"property":"og:description","content":"Function: classDecoratorLegacyWrapper() Wraps a class decorator to ensure compatibility with both legacy and 2023-11 proposal contexts. This wrapper enforces that the decorator ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.36,"words":107},"filePathRelative":"api/core/decorators/Metadata/functions/classDecoratorLegacyWrapper.md","autoDesc":true}');export{h as comp,f as data};
