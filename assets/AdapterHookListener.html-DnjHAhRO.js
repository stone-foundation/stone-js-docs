import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as t,b as i,e as n,w as a,d as o,r as d,o as l}from"./app-B3SZc_3K.js";const m={};function u(y,e){const r=d("RouteLink");return l(),s("div",null,[t("p",null,[n(r,{to:"/api/core/"},{default:a(()=>e[0]||(e[0]=[t("strong",null,"Core Documentation",-1)])),_:1,__:[0]})]),e[23]||(e[23]=t("hr",null,null,-1)),t("p",null,[n(r,{to:"/api/core/"},{default:a(()=>e[1]||(e[1]=[o("Core Documentation")])),_:1,__:[1]}),e[3]||(e[3]=o(" / ")),n(r,{to:"/api/core/declarations/"},{default:a(()=>e[2]||(e[2]=[o("declarations")])),_:1,__:[2]}),e[4]||(e[4]=o(" / AdapterHookListener"))]),e[24]||(e[24]=t("h1",{id:"type-alias-adapterhooklistener-adaptercontexttype",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-alias-adapterhooklistener-adaptercontexttype"},[t("span",null,"Type Alias: AdapterHookListener()<AdapterContextType>")])],-1)),t("blockquote",null,[t("p",null,[e[6]||(e[6]=t("strong",null,"AdapterHookListener",-1)),e[7]||(e[7]=o("<")),e[8]||(e[8]=t("code",null,"AdapterContextType",-1)),e[9]||(e[9]=o("> = (")),e[10]||(e[10]=t("code",null,"context",-1)),e[11]||(e[11]=o(") => ")),n(r,{to:"/api/core/declarations/type-aliases/Promiseable.html"},{default:a(()=>e[5]||(e[5]=[t("code",null,"Promiseable",-1)])),_:1,__:[5]}),e[12]||(e[12]=o("<")),e[13]||(e[13]=t("code",null,"void",-1)),e[14]||(e[14]=o(">"))])]),e[25]||(e[25]=i('<p>Defined in: <a href="https://github.com/stonemjs/core/blob/65c9e07f9d264b07f6e4091fcc29046b5ca8ea45/src/declarations.ts#L1239" target="_blank" rel="noopener noreferrer">declarations.ts:1239</a></p><p>AdapterHookListener Type.</p><p>Represents a listener hook that can either be synchronous or asynchronous.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="adaptercontexttype" tabindex="-1"><a class="header-anchor" href="#adaptercontexttype"><span>AdapterContextType</span></a></h3><p><code>AdapterContextType</code> = <code>any</code></p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="context" tabindex="-1"><a class="header-anchor" href="#context"><span>context</span></a></h3>',8)),t("p",null,[n(r,{to:"/api/core/declarations/interfaces/AdapterHookListenerContext.html"},{default:a(()=>e[15]||(e[15]=[t("code",null,"AdapterHookListenerContext",-1)])),_:1,__:[15]}),e[16]||(e[16]=o("<")),e[17]||(e[17]=t("code",null,"AdapterContextType",-1)),e[18]||(e[18]=o(">"))]),e[26]||(e[26]=t("h2",{id:"returns",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#returns"},[t("span",null,"Returns")])],-1)),t("p",null,[n(r,{to:"/api/core/declarations/type-aliases/Promiseable.html"},{default:a(()=>e[19]||(e[19]=[t("code",null,"Promiseable",-1)])),_:1,__:[19]}),e[20]||(e[20]=o("<")),e[21]||(e[21]=t("code",null,"void",-1)),e[22]||(e[22]=o(">"))])])}const f=p(m,[["render",u]]),k=JSON.parse('{"path":"/api/core/declarations/type-aliases/AdapterHookListener.html","title":"Type Alias: AdapterHookListener()<AdapterContextType>","lang":"en-US","frontmatter":{"description":"/ / AdapterHookListener Type Alias: AdapterHookListener()<AdapterContextType> AdapterHookListener<AdapterContextType> = (context) => <void> Defined in: declarations.ts:1239 Adap...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type Alias: AdapterHookListener()<AdapterContextType>\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-07T20:31:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/declarations/type-aliases/AdapterHookListener.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Type Alias: AdapterHookListener()<AdapterContextType>"}],["meta",{"property":"og:description","content":"/ / AdapterHookListener Type Alias: AdapterHookListener()<AdapterContextType> AdapterHookListener<AdapterContextType> = (context) => <void> Defined in: declarations.ts:1239 Adap..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-07T20:31:21.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-07T20:31:21.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1749328281000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1}]},"readingTime":{"minutes":0.18,"words":55},"filePathRelative":"api/core/declarations/type-aliases/AdapterHookListener.md","autoDesc":true}');export{f as comp,k as data};
