import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as i,a,e,w as t,d as p,r as l,o as c}from"./app-CsZBgwJX.js";const u={};function d(m,n){const s=l("RouteLink");return c(),r("div",null,[n[16]||(n[16]=i(`<h1 id="function-defineservice" tabindex="-1"><a class="header-anchor" href="#function-defineservice"><span>Function: defineService()</span></a></h1><p>Defines a service (factory or class) for the Stone.js application.</p><p>This utility registers a service in the <code>stone.services</code> section of the blueprint. It supports both factory and class-based service definitions.</p><h2 id="param" tabindex="-1"><a class="header-anchor" href="#param"><span>Param</span></a></h2><p>The service class or factory function.</p><h2 id="param-1" tabindex="-1"><a class="header-anchor" href="#param-1"><span>Param</span></a></h2><p>Service configuration options including alias and factory flag.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">defineService</span><span class="token punctuation">(</span>MyServiceClass<span class="token punctuation">,</span> <span class="token punctuation">{</span> alias<span class="token operator">:</span> <span class="token string">&#39;myService&#39;</span><span class="token punctuation">,</span> isClass<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">defineService</span><span class="token punctuation">(</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> alias<span class="token operator">:</span> <span class="token string">&#39;myService&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="call-signature" tabindex="-1"><a class="header-anchor" href="#call-signature"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token function">defineService</span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StoneBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a factory-based service for the Stone.js application.</p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><h4 id="module" tabindex="-1"><a class="header-anchor" href="#module"><span>module</span></a></h4>`,14)),a("p",null,[e(s,{to:"/api/core/declarations/type-aliases/FactoryService.html"},{default:t(()=>n[0]||(n[0]=[a("code",null,"FactoryService",-1)])),_:1,__:[0]})]),n[17]||(n[17]=a("p",null,"A factory function that returns the service instance.",-1)),n[18]||(n[18]=a("h4",{id:"options",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#options"},[a("span",null,"options")])],-1)),a("p",null,[e(s,{to:"/api/core/declarations/interfaces/ServiceOptions.html"},{default:t(()=>n[1]||(n[1]=[a("code",null,"ServiceOptions",-1)])),_:1,__:[1]}),n[2]||(n[2]=p(" & ")),n[3]||(n[3]=a("code",null,"object",-1))]),n[19]||(n[19]=a("p",null,"Configuration options for the service including alias and factory flag.",-1)),n[20]||(n[20]=a("h3",{id:"returns",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#returns"},[a("span",null,"Returns")])],-1)),a("p",null,[n[5]||(n[5]=a("code",null,"Partial",-1)),n[6]||(n[6]=p("<")),e(s,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:t(()=>n[4]||(n[4]=[a("code",null,"StoneBlueprint",-1)])),_:1,__:[4]}),n[7]||(n[7]=p(">"))]),n[21]||(n[21]=i(`<p>A partial StoneBlueprint containing the service metadata.</p><h3 id="param-2" tabindex="-1"><a class="header-anchor" href="#param-2"><span>Param</span></a></h3><p>The service class or factory function.</p><h3 id="param-3" tabindex="-1"><a class="header-anchor" href="#param-3"><span>Param</span></a></h3><p>Service configuration options including alias and factory flag.</p><h3 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1"><span>Example</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">defineService</span><span class="token punctuation">(</span>MyServiceClass<span class="token punctuation">,</span> <span class="token punctuation">{</span> alias<span class="token operator">:</span> <span class="token string">&#39;myService&#39;</span><span class="token punctuation">,</span> isClass<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">defineService</span><span class="token punctuation">(</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> alias<span class="token operator">:</span> <span class="token string">&#39;myService&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="call-signature-1" tabindex="-1"><a class="header-anchor" href="#call-signature-1"><span>Call Signature</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token function">defineService</span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>StoneBlueprint<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a class-based service for the Stone.js application.</p><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3><h4 id="module-1" tabindex="-1"><a class="header-anchor" href="#module-1"><span>module</span></a></h4>`,12)),a("p",null,[e(s,{to:"/api/core/declarations/type-aliases/IServiceClass.html"},{default:t(()=>n[8]||(n[8]=[a("code",null,"IServiceClass",-1)])),_:1,__:[8]})]),n[22]||(n[22]=a("p",null,"The service class to be registered.",-1)),n[23]||(n[23]=a("h4",{id:"options-1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#options-1"},[a("span",null,"options")])],-1)),a("p",null,[e(s,{to:"/api/core/declarations/interfaces/ServiceOptions.html"},{default:t(()=>n[9]||(n[9]=[a("code",null,"ServiceOptions",-1)])),_:1,__:[9]}),n[10]||(n[10]=p(" & ")),n[11]||(n[11]=a("code",null,"object",-1))]),n[24]||(n[24]=a("p",null,"Configuration options for the service including alias and factory flag.",-1)),n[25]||(n[25]=a("h3",{id:"returns-1",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#returns-1"},[a("span",null,"Returns")])],-1)),a("p",null,[n[13]||(n[13]=a("code",null,"Partial",-1)),n[14]||(n[14]=p("<")),e(s,{to:"/api/core/options/StoneBlueprint/interfaces/StoneBlueprint.html"},{default:t(()=>n[12]||(n[12]=[a("code",null,"StoneBlueprint",-1)])),_:1,__:[12]}),n[15]||(n[15]=p(">"))]),n[26]||(n[26]=i(`<p>A partial StoneBlueprint containing the service metadata.</p><h3 id="param-4" tabindex="-1"><a class="header-anchor" href="#param-4"><span>Param</span></a></h3><p>The service class or factory function.</p><h3 id="param-5" tabindex="-1"><a class="header-anchor" href="#param-5"><span>Param</span></a></h3><p>Service configuration options including alias and factory flag.</p><h3 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2"><span>Example</span></a></h3><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token function">defineService</span><span class="token punctuation">(</span>MyServiceClass<span class="token punctuation">,</span> <span class="token punctuation">{</span> alias<span class="token operator">:</span> <span class="token string">&#39;myService&#39;</span><span class="token punctuation">,</span> isClass<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">defineService</span><span class="token punctuation">(</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> alias<span class="token operator">:</span> <span class="token string">&#39;myService&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,7))])}const h=o(u,[["render",d]]),v=JSON.parse('{"path":"/api/core/blueprint/KernelUtils/functions/defineService.html","title":"Function: defineService()","lang":"en-US","frontmatter":{"description":"Function: defineService() Defines a service (factory or class) for the Stone.js application. This utility registers a service in the stone.services section of the blueprint. It ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: defineService()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/core/blueprint/KernelUtils/functions/defineService.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: defineService()"}],["meta",{"property":"og:description","content":"Function: defineService() Defines a service (factory or class) for the Stone.js application. This utility registers a service in the stone.services section of the blueprint. It ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.77,"words":230},"filePathRelative":"api/core/blueprint/KernelUtils/functions/defineService.md","autoDesc":true}');export{h as comp,v as data};
