import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as o,a as e,d as a,e as t,w as r,r as c,o as l}from"./app-CrbMk51G.js";const u={};function d(m,s){const n=c("RouteLink");return l(),p("div",null,[s[10]||(s[10]=o(`<h1 id="function-subscriber" tabindex="-1"><a class="header-anchor" href="#function-subscriber"><span>Function: Subscriber()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">Subscriber</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token operator">:</span> ClassDecorator<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Subscriber decorator to mark a class as a subscriber.</p><p>This decorator is useful for customizing classes as subscribers within the Stone.js framework, allowing them to listen for events or perform specific tasks based on their subscription.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3>`,6)),e("p",null,[s[2]||(s[2]=e("code",null,"T",-1)),s[3]||(s[3]=a()),s[4]||(s[4]=e("em",null,"extends",-1)),s[5]||(s[5]=a()),t(n,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:r(()=>s[0]||(s[0]=[e("code",null,"ClassType",-1)])),_:1,__:[0]}),s[6]||(s[6]=a(" = ")),t(n,{to:"/api/core/declarations/type-aliases/ClassType.html"},{default:r(()=>s[1]||(s[1]=[e("code",null,"ClassType",-1)])),_:1,__:[1]})]),s[11]||(s[11]=e("h2",{id:"parameters",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#parameters"},[e("span",null,"Parameters")])],-1)),s[12]||(s[12]=e("h3",{id:"options",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#options"},[e("span",null,"options")])],-1)),e("p",null,[t(n,{to:"/api/core/decorators/Subscriber/interfaces/SubscriberOptions.html"},{default:r(()=>s[7]||(s[7]=[e("code",null,"SubscriberOptions",-1)])),_:1,__:[7]}),s[8]||(s[8]=a(" = ")),s[9]||(s[9]=e("code",null,"{}",-1))]),s[13]||(s[13]=o(`<p>The configuration options for the subscriber.</p><h2 id="returns" tabindex="-1"><a class="header-anchor" href="#returns"><span>Returns</span></a></h2><p><code>ClassDecorator</code></p><p>A decorator function to set metadata on the target class.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>Example</span></a></h2><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Subscriber</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> event<span class="token operator">:</span> <span class="token string">&#39;UserCreated&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">UserCreatedSubscriber</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// Subscriber class logic here.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6))])}const h=i(u,[["render",d]]),k=JSON.parse('{"path":"/api/core/decorators/Subscriber/functions/Subscriber.html","title":"Function: Subscriber()","lang":"en-US","frontmatter":{"description":"Function: Subscriber() Subscriber decorator to mark a class as a subscriber. This decorator is useful for customizing classes as subscribers within the Stone.js framework, allow...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: Subscriber()\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.com/api/core/decorators/Subscriber/functions/Subscriber.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: Subscriber()"}],["meta",{"property":"og:description","content":"Function: Subscriber() Subscriber decorator to mark a class as a subscriber. This decorator is useful for customizing classes as subscribers within the Stone.js framework, allow..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.3,"words":89},"filePathRelative":"api/core/decorators/Subscriber/functions/Subscriber.md","autoDesc":true}');export{h as comp,k as data};
