import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as r,a as n,e as s,d as t,w as o,r as l,o as d}from"./app-BJyWHIWB.js";const u={};function m(f,e){const a=l("RouteLink");return d(),i("div",null,[e[29]||(e[29]=r(`<h1 id="function-definemiddleware" tabindex="-1"><a class="header-anchor" href="#function-definemiddleware"><span>Function: defineMiddleware()</span></a></h1><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code class="language-typescript"><span class="line"><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">defineMiddleware</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token punctuation">,</span> Args<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token operator">:</span> MetaPipe<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">R</span><span class="token punctuation">,</span> Args<span class="token operator">&gt;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Define a new middleware for the pipeline.</p><h2 id="type-parameters" tabindex="-1"><a class="header-anchor" href="#type-parameters"><span>Type Parameters</span></a></h2><h3 id="t" tabindex="-1"><a class="header-anchor" href="#t"><span>T</span></a></h3><p><code>T</code> = <code>unknown</code></p><h3 id="r" tabindex="-1"><a class="header-anchor" href="#r"><span>R</span></a></h3><p><code>R</code> = <code>T</code></p><h3 id="args" tabindex="-1"><a class="header-anchor" href="#args"><span>Args</span></a></h3><p><code>Args</code> <em>extends</em> <code>any</code>[] = <code>any</code>[]</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h2><h3 id="module" tabindex="-1"><a class="header-anchor" href="#module"><span>module</span></a></h3>`,12)),n("p",null,[s(a,{to:"/api/pipeline/declarations/type-aliases/PipeType.html"},{default:o(()=>e[0]||(e[0]=[n("code",null,"PipeType",-1)])),_:1,__:[0]}),e[1]||(e[1]=t("<")),e[2]||(e[2]=n("code",null,"T",-1)),e[3]||(e[3]=t(", ")),e[4]||(e[4]=n("code",null,"R",-1)),e[5]||(e[5]=t(", ")),e[6]||(e[6]=n("code",null,"Args",-1)),e[7]||(e[7]=t(">"))]),e[30]||(e[30]=n("p",null,"The pipe module to add to the pipeline.",-1)),e[31]||(e[31]=n("h3",{id:"options",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#options"},[n("span",null,"options")])],-1)),n("p",null,[e[9]||(e[9]=n("code",null,"Omit",-1)),e[10]||(e[10]=t("<")),s(a,{to:"/api/pipeline/declarations/interfaces/MetaPipe.html"},{default:o(()=>e[8]||(e[8]=[n("code",null,"MetaPipe",-1)])),_:1,__:[8]}),e[11]||(e[11]=t("<")),e[12]||(e[12]=n("code",null,"T",-1)),e[13]||(e[13]=t(", ")),e[14]||(e[14]=n("code",null,"R",-1)),e[15]||(e[15]=t(", ")),e[16]||(e[16]=n("code",null,"Args",-1)),e[17]||(e[17]=t(">, ")),e[18]||(e[18]=n("code",null,'"module"',-1)),e[19]||(e[19]=t("> = ")),e[20]||(e[20]=n("code",null,"{}",-1))]),e[32]||(e[32]=n("p",null,"Additional options for the middleware.",-1)),e[33]||(e[33]=n("h2",{id:"returns",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#returns"},[n("span",null,"Returns")])],-1)),n("p",null,[s(a,{to:"/api/pipeline/declarations/interfaces/MetaPipe.html"},{default:o(()=>e[21]||(e[21]=[n("code",null,"MetaPipe",-1)])),_:1,__:[21]}),e[22]||(e[22]=t("<")),e[23]||(e[23]=n("code",null,"T",-1)),e[24]||(e[24]=t(", ")),e[25]||(e[25]=n("code",null,"R",-1)),e[26]||(e[26]=t(", ")),e[27]||(e[27]=n("code",null,"Args",-1)),e[28]||(e[28]=t(">"))]),e[34]||(e[34]=n("p",null,"The metadata for the middleware.",-1))])}const T=p(u,[["render",m]]),k=JSON.parse('{"path":"/api/pipeline/utils/functions/defineMiddleware.html","title":"Function: defineMiddleware()","lang":"en-US","frontmatter":{"description":"Function: defineMiddleware() Define a new middleware for the pipeline. Type Parameters T T = unknown R R = T Args Args extends any[] = any[] Parameters module <T, R, Args> The p...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Function: defineMiddleware()\\",\\"image\\":[\\"/logo_square.png\\"],\\"dateModified\\":\\"2025-06-18T04:17:07.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Stone\\"}]}"],["meta",{"property":"og:url","content":"https://stonejs.dev/api/pipeline/utils/functions/defineMiddleware.html"}],["meta",{"property":"og:site_name","content":"Stone.js"}],["meta",{"property":"og:title","content":"Function: defineMiddleware()"}],["meta",{"property":"og:description","content":"Function: defineMiddleware() Define a new middleware for the pipeline. Type Parameters T T = unknown R R = T Args Args extends any[] = any[] Parameters module <T, R, Args> The p..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"/logo_square.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-18T04:17:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-18T04:17:07.000Z"}]]},"git":{"createdTime":1749328281000,"updatedTime":1750220227000,"contributors":[{"name":"Mr Stone","username":"","email":"pierre.evens16@gmail.com","commits":1},{"name":"Mr. Stone","username":"","email":"pierrevensy@gmail.com","commits":1}]},"readingTime":{"minutes":0.25,"words":74},"filePathRelative":"api/pipeline/utils/functions/defineMiddleware.md","autoDesc":true}');export{T as comp,k as data};
